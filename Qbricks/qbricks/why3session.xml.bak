<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.4.1" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.4.1" alternative="noBV" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file>
<path name=".."/>
<path name="qbricks.mlw"/>
<theory name="Circuit_elem" proved="true">
 <goal name="VC circ_to_pps_width" expl="VC for circ_to_pps_width" proved="true">
 <proof prover="2"><result status="valid" time="2.43" steps="212"/></proof>
 </goal>
 <goal name="VC circ_to_pps_range" expl="VC for circ_to_pps_range" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC circ_to_pps_range.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.90"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC circ_to_pps_basis_ket" expl="VC for circ_to_pps_basis_ket" proved="true">
 <proof prover="2"><result status="valid" time="2.42" steps="212"/></proof>
 </goal>
 <goal name="VC circ_to_pps_basis_ket_gen" expl="VC for circ_to_pps_basis_ket_gen" proved="true">
 <proof prover="5"><result status="valid" time="3.08"/></proof>
 </goal>
 <goal name="VC circ_to_pps_angle" expl="VC for circ_to_pps_angle" proved="true">
 <proof prover="2"><result status="valid" time="1.90" steps="212"/></proof>
 </goal>
 <goal name="VC sem" expl="VC for sem" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sem.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.33" steps="216"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sem_comp" expl="VC for sem_comp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sem_comp.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC sem_comp.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="sem_def" arg2="in" arg3="H1">
    <goal name="VC sem_comp.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sem_def" arg2="in" arg3="H2">
     <goal name="VC sem_comp.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sem_def">
      <goal name="VC sem_comp.0.0.0.0.0" expl="VC for sem_comp" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC sem_comp.0.0.0.0.0.0" expl="VC for sem_comp" proved="true">
       <proof prover="0"><result status="valid" time="4.09"/></proof>
       <proof prover="2"><result status="timeout" time="5.00"/></proof>
       </goal>
       <goal name="VC sem_comp.0.0.0.0.0.1" expl="VC for sem_comp" proved="true">
       <transf name="instantiate" proved="true" arg1="path_sem_comp" arg2="d,e,x,y,z">
        <goal name="VC sem_comp.0.0.0.0.0.1.0" expl="VC for sem_comp" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="VC sem_comp.0.0.0.0.0.1.0.0" expl="VC for sem_comp" proved="true">
         <proof prover="5"><result status="valid" time="1.88"/></proof>
         </goal>
         <goal name="VC sem_comp.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.13" steps="276"/></proof>
         </goal>
         <goal name="VC sem_comp.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.67"/></proof>
         </goal>
         <goal name="VC sem_comp.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="4.14"/></proof>
         <proof prover="2"><result status="timeout" time="5.00"/></proof>
         </goal>
         <goal name="VC sem_comp.0.0.0.0.0.1.0.4" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.00" steps="276"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_kron_" expl="VC for path_sem_kron_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_kron_.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.10" steps="254"/></proof>
  </goal>
  <goal name="VC path_sem_kron_.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.87" steps="258"/></proof>
  </goal>
  <goal name="VC path_sem_kron_.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.89" steps="262"/></proof>
  </goal>
  <goal name="VC path_sem_kron_.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.27"/></proof>
  </goal>
  <goal name="VC path_sem_kron_.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.25"/></proof>
  </goal>
  <goal name="VC path_sem_kron_.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.94" steps="262"/></proof>
  </goal>
  <goal name="VC path_sem_kron_.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.98" steps="264"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sequence_ghost_pps" expl="VC for sequence_ghost_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sequence_ghost_pps.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.24" steps="330"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.27" steps="330"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.15" steps="330"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.20" steps="330"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.79" steps="330"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.5" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H8">
   <goal name="VC sequence_ghost_pps.5.0" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="2.56"/></proof>
   </goal>
   <goal name="VC sequence_ghost_pps.5.1" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="3.07"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_ghost_pps.6" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H10">
   <goal name="VC sequence_ghost_pps.6.0" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="2.19"/></proof>
   </goal>
   <goal name="VC sequence_ghost_pps.6.1" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="2.11"/></proof>
   </goal>
   <goal name="VC sequence_ghost_pps.6.2" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="1.32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_ghost_pps.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.10" steps="332"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.53" steps="342"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.01" steps="342"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.08" steps="342"/></proof>
  </goal>
  <goal name="VC sequence_ghost_pps.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.79" steps="342"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC parallel_ghost_pps" expl="VC for parallel_ghost_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC parallel_ghost_pps.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.11" steps="328"/></proof>
  </goal>
  <goal name="VC parallel_ghost_pps.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.92" steps="328"/></proof>
  </goal>
  <goal name="VC parallel_ghost_pps.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.04" steps="328"/></proof>
  </goal>
  <goal name="VC parallel_ghost_pps.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.82" steps="328"/></proof>
  </goal>
  <goal name="VC parallel_ghost_pps.4" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H8">
   <goal name="VC parallel_ghost_pps.4.0" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="1.30"/></proof>
   </goal>
   <goal name="VC parallel_ghost_pps.4.1" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="2.23"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC parallel_ghost_pps.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.62"/></proof>
  </goal>
  <goal name="VC parallel_ghost_pps.6" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H10">
   <goal name="VC parallel_ghost_pps.6.0" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="2.36"/></proof>
   </goal>
   <goal name="VC parallel_ghost_pps.6.1" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="2.03"/></proof>
   </goal>
   <goal name="VC parallel_ghost_pps.6.2" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="1.20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC parallel_ghost_pps.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.87" steps="340"/></proof>
  </goal>
  <goal name="VC parallel_ghost_pps.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.93" steps="340"/></proof>
  </goal>
  <goal name="VC parallel_ghost_pps.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.03" steps="340"/></proof>
  </goal>
  <goal name="VC parallel_ghost_pps.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.81" steps="340"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC set_path_sem_by_main_pps" expl="VC for set_path_sem_by_main_pps" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC set_path_sem_by_main_pps.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="5.39" steps="338"/></proof>
  </goal>
  <goal name="VC set_path_sem_by_main_pps.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.92" steps="338"/></proof>
  </goal>
  <goal name="VC set_path_sem_by_main_pps.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.10" steps="339"/></proof>
  </goal>
  <goal name="VC set_path_sem_by_main_pps.3" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC set_path_sem_by_main_pps.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
    <goal name="VC set_path_sem_by_main_pps.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="pps_apply_basis_def">
     <goal name="VC set_path_sem_by_main_pps.3.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="scalar_eq_gen">
      <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
       <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.62"/></proof>
       </goal>
       <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.88"/></proof>
       </goal>
       <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.99"/></proof>
       </goal>
       <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_eq_gen">
          <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="bv_to_ket_eq">
           <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.95"/></proof>
           </goal>
           <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="1.83"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket_spec1">
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.86"/></proof>
                   </goal>
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.82"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.82"/></proof>
                   </goal>
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.96"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.12"/></proof>
                   </goal>
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0.2.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.17"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="basis_ket_spec">
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="2.07"/></proof>
                   </goal>
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.93"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.1.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.10"/></proof>
                   </goal>
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.1.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="3.39"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.2" expl="apply premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.2.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.02"/></proof>
                   </goal>
                   <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0.2.1" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="0.89"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
              <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.0" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="2.25"/></proof>
               </goal>
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.0" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="2.52"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="2.14"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.0.0.2" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="0.97"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.1" expl="rewrite premises" proved="true">
                <transf name="split_all_full" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0" expl="rewrite premises" proved="true">
                 <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="2.55"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="2.20"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.1.1.0.2" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="0.89"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.0.2.2" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="1.43"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.97"/></proof>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="2.19"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.1.0" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.74"/></proof>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.1.1" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.50"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.2.0" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="0.68"/></proof>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.0.0.2.1" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="0.67"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.54"/></proof>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.0.1" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.97"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.88"/></proof>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.1.1" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.90"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.2" expl="apply premises" proved="true">
                <transf name="split_vc" proved="true" >
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.2.0" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="0.67"/></proof>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.1.1.0.2.1" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.15"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
              <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="0.61"/></proof>
              </goal>
              <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.56"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.0.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="2.24"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.1.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.79"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.1.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.51"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.2.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.16"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.0.0.2.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="0.68"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.0" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.42"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.0.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.55"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.1.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.55"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.1.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.49"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.2" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.2.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="0.68"/></proof>
                  </goal>
                  <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.1.1.0.2.1" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="0.67"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="1.50"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC set_path_sem_by_main_pps.3.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
          <proof prover="5"><result status="valid" time="2.01"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC set_path_sem_by_main_pps.3.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="5"><result status="valid" time="1.56"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC set_path_sem_by_main_pps.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="2.02"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC set_path_sem_by_main_pps.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.75"/></proof>
    </goal>
    <goal name="VC set_path_sem_by_main_pps.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="0.91"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC correct_path_sum_to_bv" expl="VC for correct_path_sum_to_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC correct_path_sum_to_bv.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.51"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC correct_path_sum_by_bv" expl="VC for correct_path_sum_by_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC correct_path_sum_by_bv.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.03"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Circuit" proved="true">
 <goal name="VC place_hadamard_bv" expl="VC for place_hadamard_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC place_hadamard_bv.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.73" steps="324"/></proof>
  </goal>
  <goal name="VC place_hadamard_bv.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.85" steps="328"/></proof>
  </goal>
  <goal name="VC place_hadamard_bv.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.15" steps="328"/></proof>
  </goal>
  <goal name="VC place_hadamard_bv.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="5.68" steps="334"/></proof>
  </goal>
  <goal name="VC place_hadamard_bv.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="5.82" steps="330"/></proof>
  </goal>
  <goal name="VC place_hadamard_bv.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="5.23" steps="332"/></proof>
  </goal>
  <goal name="VC place_hadamard_bv.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="correct_path_sum_bv_main">
   <goal name="VC place_hadamard_bv.6.0" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC place_hadamard_bv.6.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC place_hadamard_bv.6.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="make_bv_length">
      <goal name="VC place_hadamard_bv.6.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="0.84" steps="332"/></proof>
      </goal>
      <goal name="VC place_hadamard_bv.6.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC place_hadamard_bv.6.0.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC place_hadamard_bv.6.0.0.0.1.0.0" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="5.06" steps="338"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC place_hadamard_bv.6.0.0.0.1.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC place_hadamard_bv.6.0.0.0.1.1.0" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="3.90" steps="338"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC place_hadamard_bv.6.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="0.97" steps="332"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC place_hadamard_bv.6.1" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC place_hadamard_bv.6.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC place_hadamard_bv.6.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="H6">
      <goal name="VC place_hadamard_bv.6.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="VC place_hadamard_bv.6.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="VC place_hadamard_bv.6.1.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC place_hadamard_bv.6.1.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC place_hadamard_bv.6.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="VC place_hadamard_bv.6.1.0.0.0.1.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC place_hadamard_bv.6.1.0.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="4.85" steps="344"/></proof>
           </goal>
           <goal name="VC place_hadamard_bv.6.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="4.78" steps="344"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC place_hadamard_bv.6.1.0.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC place_hadamard_bv.6.1.0.0.0.1.1.0" expl="rewrite premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="VC place_hadamard_bv.6.1.0.0.0.1.1.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC place_hadamard_bv.6.1.0.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.80"/></proof>
           </goal>
           <goal name="VC place_hadamard_bv.6.1.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.64"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC place_hadamard_bv.6.1.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.17"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC place_hadamard_bv.6.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="0.96"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC place_hadamard_bv.6.2" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC place_hadamard_bv.6.2.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC place_hadamard_bv.6.2.0.0" expl="apply premises" proved="true">
     <transf name="instantiate" proved="true" arg1="H2" arg2="(getbv x),(getbv y),n">
      <goal name="VC place_hadamard_bv.6.2.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="VC place_hadamard_bv.6.2.0.0.0.0" expl="apply premises" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="0.62"/></proof>
         </goal>
         <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(((getbv x @ k) * (getbv y @ 0)) * power_ 2 (n - 1))" arg2="0">
          <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="5"><result status="valid" time="1.46"/></proof>
          </goal>
          <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <transf name="case" proved="true" arg1="((getbv x @ k) = 1)">
           <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1.1.0" expl="true case (equality hypothesis)" proved="true">
           <transf name="replace" proved="true" arg1="(getbv y 0 )" arg2="0">
            <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1.1.0.0" expl="true case (equality hypothesis)" proved="true">
            <proof prover="5"><result status="valid" time="0.65"/></proof>
            </goal>
            <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="1.55"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1.1.1" expl="false case (equality hypothesis)" proved="true">
           <transf name="replace" proved="true" arg1="(getbv x k )" arg2="0">
            <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1.1.1.0" expl="false case (equality hypothesis)" proved="true">
            <proof prover="5"><result status="valid" time="0.56"/></proof>
            </goal>
            <goal name="VC place_hadamard_bv.6.2.0.0.0.0.0.1.1.1.1" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="1.31"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC place_hadamard_bv.6.2.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="0.94"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC place_hadamard_bv.6.3" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="0.38" steps="328"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Diag_circuit" proved="true">
 <goal name="VC diagonal" expl="VC for diagonal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diagonal.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.40"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC set_diagonal" expl="VC for set_diagonal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC set_diagonal.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC set_diagonal.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC set_diagonal.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="diagonal_def">
     <goal name="VC set_diagonal.0.0.0.0" expl="VC for set_diagonal" proved="true">
     <transf name="apply" proved="true" arg1="correct_path_sum_to_bv">
      <goal name="VC set_diagonal.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC set_diagonal.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.49"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC set_diagonal.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="set_correct_pps">
       <goal name="VC set_diagonal.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="VC set_diagonal.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="build_pps_bv_spec3">
         <goal name="VC set_diagonal.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.46"/></proof>
         </goal>
         <goal name="VC set_diagonal.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="0.82"/></proof>
         </goal>
         <goal name="VC set_diagonal.0.0.0.0.1.0.0.2" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.80"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC set_diagonal.0.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC set_diagonal.0.0.0.0.1.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="pps_apply_basis_def">
          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="build_pps_bv_spec2">
           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
             <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
              <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(path_sem_basis c x)" arg2="(path_sem_basis c (bv_to_ket (ket_to_bv x)))">
                <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="H2">
                 <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="build_pps_bv_spec">
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="apply" proved="true" arg1="scalar_eq_gen">
                    <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="make_bv_length">
                      <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="2.05"/></proof>
                      </goal>
                      <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="2.63"/></proof>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="3.07"/></proof>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="0.77"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.75"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.11"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.3" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="2.06"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.89"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.76"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.79"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.1" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="2.11"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.09"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.03"/></proof>
                          </goal>
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.1" expl="rewrite premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.46"/></proof>
                          </goal>
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.2" expl="rewrite premises" proved="true">
                          <proof prover="5"><result status="valid" time="0.76"/></proof>
                          </goal>
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.3" expl="rewrite premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.74"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.78"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                       <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="build_pps_bv_spec1">
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                        </transf>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="2.13"/></proof>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.50"/></proof>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.86"/></proof>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.70"/></proof>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.5" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="2.05"/></proof>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6" expl="rewrite premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.0" expl="rewrite premises" proved="true">
                         <proof prover="2"><result status="valid" time="0.85" steps="298"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="2.45"/></proof>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.1" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="2.08"/></proof>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.0" expl="apply premises" proved="true">
                            <proof prover="5"><result status="valid" time="0.95"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.1" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.38"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.2" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.04"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.3" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="2.40"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1" expl="rewrite premises" proved="true">
                          <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.0" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.0.0" expl="apply premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.91"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.0.1" expl="apply premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.87"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.1" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.1.0" expl="apply premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.87"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.1.1" expl="apply premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.82"/></proof>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2" expl="apply premises" proved="true">
                           <transf name="split_vc" proved="true" >
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.0" expl="apply premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.34"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1" expl="apply premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                             <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.0" expl="apply premises" proved="true">
                             <proof prover="5"><result status="valid" time="1.05"/></proof>
                             </goal>
                             <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.1" expl="rewrite premises" proved="true">
                             <proof prover="5"><result status="valid" time="1.48"/></proof>
                             </goal>
                             <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.2" expl="rewrite premises" proved="true">
                             <proof prover="5"><result status="valid" time="1.06"/></proof>
                             </goal>
                             <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.3" expl="rewrite premises" proved="true">
                             <proof prover="5"><result status="valid" time="1.76"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.2" expl="rewrite premises" proved="true">
                         <proof prover="0"><result status="valid" time="6.25"/></proof>
                         <proof prover="5"><result status="valid" time="1.82"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="build_pps_bv_spec1">
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="rewrite premises" proved="true">
                          <proof prover="0"><result status="valid" time="5.98"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.48"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.03"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.3" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="2.15"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.4" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.78"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.5" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.70"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.6" expl="rewrite premises" proved="true">
                         <proof prover="0"><result status="valid" time="6.07"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="build_pps_bv_spec1">
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.0" expl="rewrite premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.0.0" expl="rewrite premises" proved="true">
                          <proof prover="0"><result status="valid" time="5.76"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.1" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.24"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.2" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="0.79"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.3" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.56"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.4" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.45"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.5" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.48"/></proof>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.6" expl="rewrite premises" proved="true">
                         <proof prover="0"><result status="valid" time="4.79"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
                        <proof prover="2"><result status="valid" time="0.60" steps="298"/></proof>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="2.09"/></proof>
                          </goal>
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.89"/></proof>
                          </goal>
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0.2" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0.2.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="0.86"/></proof>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0.2.1" expl="rewrite premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.20"/></proof>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0.2.2" expl="rewrite premises" proved="true">
                           <proof prover="5"><result status="valid" time="0.80"/></proof>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0.2.3" expl="rewrite premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.57"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
                         <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0" expl="apply premises" proved="true">
                          <transf name="split_vc" proved="true" >
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.50"/></proof>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.1" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.53"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1" expl="apply premises" proved="true">
                          <transf name="split_vc" proved="true" >
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.51"/></proof>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.1" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.52"/></proof>
                           </goal>
                          </transf>
                          </goal>
                          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.2" expl="apply premises" proved="true">
                          <transf name="split_vc" proved="true" >
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.2.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="0.76"/></proof>
                           </goal>
                           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.2.1" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.2.1.0" expl="apply premises" proved="true">
                            <proof prover="5"><result status="valid" time="0.81"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.2.1.1" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.44"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.2.1.2" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="0.79"/></proof>
                            </goal>
                            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.2.1.3" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.50"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
                        <proof prover="0"><result status="valid" time="4.39"/></proof>
                        <proof prover="5"><result status="valid" time="1.49"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="0.80"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.48"/></proof>
                  </goal>
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="0.79"/></proof>
                  </goal>
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.81"/></proof>
                  </goal>
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.4" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.44"/></proof>
                  </goal>
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.5" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.49"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.46"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="5"><result status="valid" time="1.39"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="1.41"/></proof>
              </goal>
              <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="0.78"/></proof>
              </goal>
              <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                 <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="make_bv_length">
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="0.78"/></proof>
                  </goal>
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                    <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.75"/></proof>
                    </goal>
                    <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.0.1" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.75"/></proof>
                    </goal>
                    <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.0.2" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="0.78"/></proof>
                     </goal>
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.19"/></proof>
                     </goal>
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="0.76"/></proof>
                     </goal>
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.0.2.3" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.52"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                    <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.44"/></proof>
                     </goal>
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.51"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.1" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.51"/></proof>
                     </goal>
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.1.1" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.52"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.2" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.2.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="0.77"/></proof>
                     </goal>
                     <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.2.1" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                      <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.2.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="0.81"/></proof>
                      </goal>
                      <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.2.1.1" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.19"/></proof>
                      </goal>
                      <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.2.1.2" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="0.77"/></proof>
                      </goal>
                      <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.1.1.2.1.3" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.54"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.42"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="5.51"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="1.40"/></proof>
            </goal>
            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="0.79"/></proof>
            </goal>
            <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="1.51"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.64"/></proof>
           </goal>
           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="0.81"/></proof>
           </goal>
           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.57"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.45"/></proof>
           </goal>
           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.44"/></proof>
           </goal>
           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="0.81"/></proof>
           </goal>
           <goal name="VC set_diagonal.0.0.0.0.1.1.0.0.1.3" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.62"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC set_diagonal.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
          <goal name="VC set_diagonal.0.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="0.84"/></proof>
          </goal>
          <goal name="VC set_diagonal.0.0.0.0.1.1.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.43"/></proof>
          </goal>
          <goal name="VC set_diagonal.0.0.0.0.1.1.0.1.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="0.79"/></proof>
          </goal>
          <goal name="VC set_diagonal.0.0.0.0.1.1.0.1.3" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.62"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC set_diagonal.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.58" steps="294"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_diagonal" expl="VC for get_diagonal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_diagonal.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem_basis c (bv_to_ket x))" arg2="(path_sem c (bv_to_ket x))
">
   <goal name="VC get_diagonal.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="correct_path_sum_bv_apply" arg2="c,0,(fun (x1:bitvec) (_:bitvec) -&gt; x1),(fun (x1:bitvec) (_:bitvec) -&gt; f @ x1),x">
    <goal name="VC get_diagonal.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="VC get_diagonal.0.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC get_diagonal.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="VC get_diagonal.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
        <goal name="VC get_diagonal.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC get_diagonal.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="1.42"/></proof>
        </goal>
        <goal name="VC get_diagonal.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="0.71"/></proof>
        </goal>
        <goal name="VC get_diagonal.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC get_diagonal.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.39"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC get_diagonal.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.50"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC get_diagonal.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.42"/></proof>
     </goal>
     <goal name="VC get_diagonal.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="0.56"/></proof>
     </goal>
     <goal name="VC get_diagonal.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="VC get_diagonal.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="diagonal_def" arg2="in" arg3="H1">
       <goal name="VC get_diagonal.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="H1">
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC get_diagonal.0.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="0.99"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC set_diagonal_" expl="VC for set_diagonal_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC set_diagonal_.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC set_diagonal_.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC set_diagonal_.0.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(path_sem_basis c (bv_to_ket x) )" arg2="(path_sem c (bv_to_ket x) )">
     <goal name="VC set_diagonal_.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="1.38"/></proof>
     </goal>
     <goal name="VC set_diagonal_.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
      <goal name="VC set_diagonal_.0.0.0.1.0" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="0.50"/></proof>
      </goal>
      <goal name="VC set_diagonal_.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.21"/></proof>
      </goal>
      <goal name="VC set_diagonal_.0.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.29"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_diagonal_" expl="VC for get_diagonal_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_diagonal_.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(path_sem c (bv_to_ket x) )" arg2="(path_sem_basis c (bv_to_ket x) )">
   <goal name="VC get_diagonal_.0.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="1.62"/></proof>
   </goal>
   <goal name="VC get_diagonal_.0.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
    <goal name="VC get_diagonal_.0.1.0" expl="equality hypothesis" proved="true">
    <proof prover="5"><result status="valid" time="0.73"/></proof>
    </goal>
    <goal name="VC get_diagonal_.0.1.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.49"/></proof>
    </goal>
    <goal name="VC get_diagonal_.0.1.2" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="1.23"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_diagonal_basis" expl="VC for get_diagonal_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_diagonal_basis.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="get_diagonal">
   <goal name="VC get_diagonal_basis.0.0" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="0.57"/></proof>
   </goal>
   <goal name="VC get_diagonal_basis.0.1" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="0.75"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_diagonal_basis_" expl="VC for get_diagonal_basis_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_diagonal_basis_.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="get_path_sem_basis">
   <goal name="VC get_diagonal_basis_.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="get_diagonal_basis">
    <goal name="VC get_diagonal_basis_.0.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.64"/></proof>
    </goal>
    <goal name="VC get_diagonal_basis_.0.0.1" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.64"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC get_diagonal_basis_.0.1" expl="rewrite premises" proved="true">
   <proof prover="5"><result status="valid" time="1.34"/></proof>
   </goal>
   <goal name="VC get_diagonal_basis_.0.2" expl="rewrite premises" proved="true">
   <proof prover="5"><result status="valid" time="1.39"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_id" expl="VC for diag_id" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_id.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="324"/></proof>
  </goal>
  <goal name="VC diag_id.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="332"/></proof>
  </goal>
  <goal name="VC diag_id.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="332"/></proof>
  </goal>
  <goal name="VC diag_id.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="332"/></proof>
  </goal>
  <goal name="VC diag_id.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC diag_id.4.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC diag_id.4.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
     <goal name="VC diag_id.4.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(path_sem_basis result (bv_to_ket x) )" arg2="(path_sem result (bv_to_ket x) )">
      <goal name="VC diag_id.4.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="H5">
       <goal name="VC diag_id.4.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.36"/></proof>
       </goal>
       <goal name="VC diag_id.4.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.33"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC diag_id.4.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.06"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC diag_id.4.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.52"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_rz" expl="VC for diag_rz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_rz.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="339"/></proof>
  </goal>
  <goal name="VC diag_rz.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.63" steps="339"/></proof>
  </goal>
  <goal name="VC diag_rz.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="339"/></proof>
  </goal>
  <goal name="VC diag_rz.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC diag_rz.3.0" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC diag_rz.3.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC diag_rz.3.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(path_sem_basis result (bv_to_ket x) )" arg2="(path_sem result (bv_to_ket x) )">
      <goal name="VC diag_rz.3.0.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_definition" proved="true" >
       <goal name="VC diag_rz.3.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="result_def">
        <goal name="VC diag_rz.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_rz_basis">
         <goal name="VC diag_rz.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.43"/></proof>
         </goal>
         <goal name="VC diag_rz.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.30"/></proof>
         </goal>
         <goal name="VC diag_rz.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.24"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC diag_rz.3.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.06"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_rz_neg" expl="VC for diag_rz_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_rz_neg.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="334"/></proof>
  </goal>
  <goal name="VC diag_rz_neg.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="334"/></proof>
  </goal>
  <goal name="VC diag_rz_neg.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="334"/></proof>
  </goal>
  <goal name="VC diag_rz_neg.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC diag_rz_neg.3.0" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC diag_rz_neg.3.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC diag_rz_neg.3.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(path_sem_basis result (bv_to_ket x) )" arg2="(path_sem result (bv_to_ket x) )">
      <goal name="VC diag_rz_neg.3.0.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_definition" proved="true" >
       <goal name="VC diag_rz_neg.3.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="result_def">
        <goal name="VC diag_rz_neg.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_rz_basis">
         <goal name="VC diag_rz_neg.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="4.28"/></proof>
         </goal>
         <goal name="VC diag_rz_neg.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.39"/></proof>
         </goal>
         <goal name="VC diag_rz_neg.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.25"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC diag_rz_neg.3.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.47"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_phase" expl="VC for diag_phase" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_phase.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="337"/></proof>
  </goal>
  <goal name="VC diag_phase.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.53" steps="337"/></proof>
  </goal>
  <goal name="VC diag_phase.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.46" steps="337"/></proof>
  </goal>
  <goal name="VC diag_phase.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC diag_phase.3.0" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC diag_phase.3.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC diag_phase.3.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.11"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_phase_neg" expl="VC for diag_phase_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_phase_neg.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="334"/></proof>
  </goal>
  <goal name="VC diag_phase_neg.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="334"/></proof>
  </goal>
  <goal name="VC diag_phase_neg.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="334"/></proof>
  </goal>
  <goal name="VC diag_phase_neg.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC diag_phase_neg.3.0" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC diag_phase_neg.3.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC diag_phase_neg.3.0.0.0" expl="apply premises" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="VC diag_phase_neg.3.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem_basis result (bv_to_ket x))" arg2="(path_sem result (bv_to_ket x))">
       <goal name="VC diag_phase_neg.3.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="result_def">
        <goal name="VC diag_phase_neg.3.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_phase_basis">
         <goal name="VC diag_phase_neg.3.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="4.05"/></proof>
         </goal>
         <goal name="VC diag_phase_neg.3.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.28"/></proof>
         </goal>
         <goal name="VC diag_phase_neg.3.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="5"><result status="valid" time="1.31"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC diag_phase_neg.3.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="5.02"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_sequence" expl="VC for diag_sequence" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_sequence.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.57" steps="328"/></proof>
  </goal>
  <goal name="VC diag_sequence.1" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC diag_sequence.1.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC diag_sequence.1.0.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="VC diag_sequence.1.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result_def">
      <goal name="VC diag_sequence.1.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem_basis (sequence d e) (bv_to_ket x))" arg2="(path_sem (sequence d e) (bv_to_ket x))">
       <goal name="VC diag_sequence.1.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="path_sem_comp" arg2="d,e,(bv_to_ket x),(ang_exp (f @  x) *.. bv_to_ket x),(ang_exp (h @  x) *.. bv_to_ket x)
">
        <goal name="VC diag_sequence.1.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="Hinst">
         <goal name="VC diag_sequence.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.58"/></proof>
         </goal>
         <goal name="VC diag_sequence.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.28"/></proof>
         </goal>
         <goal name="VC diag_sequence.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal">
          <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(path_sem e (bv_to_ket x))" arg2="(ang_exp (g x) *.. bv_to_ket x)">
           <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_assoc">
            <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq_gen">
             <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="5"><result status="valid" time="0.65"/></proof>
             </goal>
             <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H8">
              <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_exp_add">
               <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="4.72"/></proof>
               <proof prover="1"><result status="valid" time="0.04"/></proof>
               <proof prover="2"><result status="valid" time="0.61" steps="310"/></proof>
               <proof prover="3"><result status="valid" time="0.05"/></proof>
               <proof prover="4"><result status="valid" time="0.06"/></proof>
               <proof prover="5"><result status="valid" time="0.59"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0.0.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="0.78" steps="310"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
           <proof prover="5"><result status="valid" time="1.60"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC diag_sequence.1.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.24"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC diag_sequence.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="0.55"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC diag_sequence.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="4.63"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC diag_sequence.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.43" steps="340"/></proof>
  </goal>
  <goal name="VC diag_sequence.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="340"/></proof>
  </goal>
  <goal name="VC diag_sequence.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="340"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sequence_diag_gen" expl="VC for sequence_diag_gen" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sequence_diag_gen.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.28"/></proof>
  </goal>
  <goal name="VC sequence_diag_gen.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.15"/></proof>
  </goal>
  <goal name="VC sequence_diag_gen.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.16"/></proof>
  </goal>
  <goal name="VC sequence_diag_gen.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.45" steps="328"/></proof>
  </goal>
  <goal name="VC sequence_diag_gen.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.23"/></proof>
  </goal>
  <goal name="VC sequence_diag_gen.5" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC sequence_diag_gen.5.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="diagonal_def" arg2="in" arg3="H10">
    <goal name="VC sequence_diag_gen.5.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="H10">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_diag_gen.6" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC sequence_diag_gen.6.0" expl="precondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC sequence_diag_gen.6.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="diagonal_def" arg2="in" arg3="H11">
     <goal name="VC sequence_diag_gen.6.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="correct_path_sum_bv_main">
      <goal name="VC sequence_diag_gen.6.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="5"><result status="valid" time="1.63"/></proof>
      </goal>
      <goal name="VC sequence_diag_gen.6.0.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC sequence_diag_gen.6.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="H10">
        <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
          <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket_spec1">
              <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="5.55"/></proof>
              </goal>
              <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="1.70"/></proof>
              </goal>
              <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="0.60" steps="311"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
             <transf name="apply" proved="true" arg1="basis_ket_spec">
              <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="1.60"/></proof>
              </goal>
              <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="1.74"/></proof>
              </goal>
              <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="1.36"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC sequence_diag_gen.6.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.23"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC sequence_diag_gen.6.0.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="1.23"/></proof>
        </goal>
        <goal name="VC sequence_diag_gen.6.0.0.0.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="0.87"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC sequence_diag_gen.6.0.0.0.2" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC sequence_diag_gen.6.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC sequence_diag_gen.6.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="5.39"/></proof>
      <proof prover="5"><result status="valid" time="0.94"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_diag_gen.7" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC sequence_diag_gen.7.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(tpart y 0)" arg2="y">
    <goal name="VC sequence_diag_gen.7.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H10">
     <goal name="VC sequence_diag_gen.7.0.0.0" expl="precondition" proved="true">
     <proof prover="5"><result status="valid" time="0.81"/></proof>
     </goal>
     <goal name="VC sequence_diag_gen.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="0.64"/></proof>
     </goal>
     <goal name="VC sequence_diag_gen.7.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.58" steps="337"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC sequence_diag_gen.7.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_bv">
     <goal name="VC sequence_diag_gen.7.0.1.0" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="1.67"/></proof>
     </goal>
     <goal name="VC sequence_diag_gen.7.0.1.1" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="1.54"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_diag_gen.8" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC sequence_diag_gen.8.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(tpart y 0)" arg2="y">
    <goal name="VC sequence_diag_gen.8.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H10">
     <goal name="VC sequence_diag_gen.8.0.0.0" expl="precondition" proved="true">
     <proof prover="5"><result status="valid" time="0.56"/></proof>
     </goal>
     <goal name="VC sequence_diag_gen.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="0.76"/></proof>
     </goal>
     <goal name="VC sequence_diag_gen.8.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="0.66" steps="337"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC sequence_diag_gen.8.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_bv">
     <goal name="VC sequence_diag_gen.8.0.1.0" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="1.40"/></proof>
     </goal>
     <goal name="VC sequence_diag_gen.8.0.1.1" expl="apply premises" proved="true">
     <proof prover="5"><result status="valid" time="1.52"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_diag_gen.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.56" steps="340"/></proof>
  </goal>
  <goal name="VC sequence_diag_gen.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.64" steps="340"/></proof>
  </goal>
  <goal name="VC sequence_diag_gen.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.60" steps="340"/></proof>
  </goal>
  <goal name="VC sequence_diag_gen.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.59" steps="340"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sequence_gen_diag" expl="VC for sequence_gen_diag" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sequence_gen_diag.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.29" steps="334"/></proof>
  </goal>
  <goal name="VC sequence_gen_diag.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.34"/></proof>
  </goal>
  <goal name="VC sequence_gen_diag.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.52" steps="334"/></proof>
  </goal>
  <goal name="VC sequence_gen_diag.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.77" steps="328"/></proof>
  </goal>
  <goal name="VC sequence_gen_diag.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.14"/></proof>
  </goal>
  <goal name="VC sequence_gen_diag.5" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="correct_path_sum_bv_main">
   <goal name="VC sequence_gen_diag.5.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC sequence_gen_diag.5.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="1.44"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC sequence_gen_diag.5.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC sequence_gen_diag.5.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="H9">
     <goal name="VC sequence_gen_diag.5.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC sequence_gen_diag.5.1.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="VC sequence_gen_diag.5.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="VC sequence_gen_diag.5.1.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.0" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="basis_ket_spec1">
           <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.89"/></proof>
           </goal>
           <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.58"/></proof>
           </goal>
           <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.17"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <transf name="apply" proved="true" arg1="basis_ket_spec">
           <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.83"/></proof>
           </goal>
           <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.60"/></proof>
           </goal>
           <goal name="VC sequence_gen_diag.5.1.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.28"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC sequence_gen_diag.5.1.0.0.0.2" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC sequence_gen_diag.5.1.0.0.0.2.0" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="0.60"/></proof>
        </goal>
        <goal name="VC sequence_gen_diag.5.1.0.0.0.2.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="0.96"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC sequence_gen_diag.5.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="1.14"/></proof>
     </goal>
     <goal name="VC sequence_gen_diag.5.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="0.51"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC sequence_gen_diag.5.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC sequence_gen_diag.5.2.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="1.43"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC sequence_gen_diag.5.3" expl="apply premises" proved="true">
   <proof prover="5"><result status="valid" time="0.56"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_gen_diag.6" expl="precondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC sequence_gen_diag.6.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="diagonal_def" arg2="in" arg3="H11">
    <goal name="VC sequence_gen_diag.6.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="H11">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_gen_diag.7" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H10">
   <goal name="VC sequence_gen_diag.7.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC sequence_gen_diag.7.0.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(hpart y r)" arg2="y">
     <goal name="VC sequence_gen_diag.7.0.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="VC sequence_gen_diag.7.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_bv">
      <goal name="VC sequence_gen_diag.7.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.06"/></proof>
      </goal>
      <goal name="VC sequence_gen_diag.7.0.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC sequence_gen_diag.7.0.0.1.1.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="1.47"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC sequence_gen_diag.7.1" expl="rewrite premises" proved="true">
   <proof prover="5"><result status="valid" time="1.01"/></proof>
   </goal>
   <goal name="VC sequence_gen_diag.7.2" expl="rewrite premises" proved="true">
   <proof prover="5"><result status="valid" time="0.57"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_gen_diag.8" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC sequence_gen_diag.8.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(hpart y r)" arg2="y">
    <goal name="VC sequence_gen_diag.8.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
    <goal name="VC sequence_gen_diag.8.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_bv">
     <goal name="VC sequence_gen_diag.8.0.1.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.29"/></proof>
     </goal>
     <goal name="VC sequence_gen_diag.8.0.1.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC sequence_gen_diag.8.0.1.1.0" expl="apply premises" proved="true">
      <proof prover="5"><result status="valid" time="1.84"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC sequence_gen_diag.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="340"/></proof>
  </goal>
  <goal name="VC sequence_gen_diag.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.09" steps="341"/></proof>
  </goal>
  <goal name="VC sequence_gen_diag.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="4.01" steps="344"/></proof>
  </goal>
  <goal name="VC sequence_gen_diag.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.15" steps="344"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_expo" expl="VC for diag_expo" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_expo.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="328"/></proof>
  </goal>
  <goal name="VC diag_expo.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.60" steps="328"/></proof>
  </goal>
  <goal name="VC diag_expo.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="329"/></proof>
  </goal>
  <goal name="VC diag_expo.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.86" steps="333"/></proof>
  </goal>
  <goal name="VC diag_expo.4" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H3">
  </transf>
  </goal>
  <goal name="VC diag_expo.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="338"/></proof>
  </goal>
  <goal name="VC diag_expo.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="338"/></proof>
  </goal>
  <goal name="VC diag_expo.7" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H9">
   <goal name="VC diag_expo.7.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="1.73"/></proof>
   </goal>
   <goal name="VC diag_expo.7.1" expl="rewrite premises" proved="true">
   <proof prover="5"><result status="valid" time="1.13"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diag_expo.8" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H">
   <goal name="VC diag_expo.8.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_diagonal">
    <goal name="VC diag_expo.8.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC diag_expo.8.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(g x)" arg2="(f x)">
      <goal name="VC diag_expo.8.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="5"><result status="valid" time="1.68"/></proof>
      </goal>
      <goal name="VC diag_expo.8.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="H3">
       <goal name="VC diag_expo.8.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <proof prover="5"><result status="valid" time="1.41"/></proof>
       </goal>
       <goal name="VC diag_expo.8.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.06"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC diag_expo.8.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.59"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diag_expo.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="330"/></proof>
  </goal>
  <goal name="VC diag_expo.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.86" steps="332"/></proof>
  </goal>
  <goal name="VC diag_expo.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_parallel" expl="VC for diag_parallel" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_parallel.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal_">
   <goal name="VC diag_parallel.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC diag_parallel.0.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(kronecker (bv_to_ket (hpart x (width d))) (bv_to_ket (tpart x (width d))))">
     <goal name="VC diag_parallel.0.0.0.0" expl="apply premises" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="VC diag_parallel.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="result_def">
       <goal name="VC diag_parallel.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="path_sem_kron_">
        <goal name="VC diag_parallel.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(path_sem d (bv_to_ket (hpart x (width d))))" arg2="(ang_exp (f (hpart x (width d))) *.. (bv_to_ket (hpart x (width d))))">
         <goal name="VC diag_parallel.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(path_sem e (bv_to_ket (tpart x (width d))))" arg2="(ang_exp (g ((tpart x (width d)))) *.. (bv_to_ket (tpart x (width d))))">
          <goal name="VC diag_parallel.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
           <goal name="VC diag_parallel.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
            <goal name="VC diag_parallel.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_assoc">
             <goal name="VC diag_parallel.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="VC diag_parallel.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
              <goal name="VC diag_parallel.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="H8">
               <goal name="VC diag_parallel.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="1.50"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC diag_parallel.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="1.30"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC diag_parallel.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="get_diagonal_">
          <goal name="VC diag_parallel.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="5"><result status="valid" time="0.59"/></proof>
          </goal>
          <goal name="VC diag_parallel.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="VC diag_parallel.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="hpart_spec4">
            <goal name="VC diag_parallel.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <proof prover="5"><result status="valid" time="0.75"/></proof>
            </goal>
            <goal name="VC diag_parallel.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="1.39"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC diag_parallel.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
         <goal name="VC diag_parallel.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="VC diag_parallel.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="hpart_spec4">
           <goal name="VC diag_parallel.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="0.75"/></proof>
           </goal>
           <goal name="VC diag_parallel.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.36"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC diag_parallel.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="1.17"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC diag_parallel.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="0.98"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_place" expl="VC for diag_place" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_place.0" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="1.45"/></proof>
  </goal>
  <goal name="VC diag_place.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.60"/></proof>
  </goal>
  <goal name="VC diag_place.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="328"/></proof>
  </goal>
  <goal name="VC diag_place.3" expl="postcondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC diag_place.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.57" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diag_place.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.23"/></proof>
  </goal>
  <goal name="VC diag_place.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diag_place.5.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC diag_place.5.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.60"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC diag_place.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC diag_place.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC diag_place.6.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="set_diagonal_">
     <goal name="VC diag_place.6.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC diag_place.6.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="place_kron_gen">
       <goal name="VC diag_place.6.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="VC diag_place.6.0.0.0.0.0.0" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="VC diag_place.6.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC diag_place.6.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(g x)" arg2="(f x)">
           <goal name="VC diag_place.6.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.48"/></proof>
           </goal>
           <goal name="VC diag_place.6.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="H22">
            <goal name="VC diag_place.6.0.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="(htpart x k (width c))" arg2="x">
             <goal name="VC diag_place.6.0.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <proof prover="5"><result status="valid" time="0.72"/></proof>
             </goal>
             <goal name="VC diag_place.6.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <transf name="apply" proved="true" arg1="set_equal_bv">
              <goal name="VC diag_place.6.0.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="1.38"/></proof>
              </goal>
              <goal name="VC diag_place.6.0.0.0.0.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="1.46"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC diag_place.6.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="4.47"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC diag_place.6.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC diag_place.6.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(kronecker (bv_to_ket (hpart x (width c))) (bv_to_ket (tpart x (width c))))">
           <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="H21">
            <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
             <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
              <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="H22">
               <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="( htpart x k (width c))" arg2="( hpart x (width c))">
                <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="5"><result status="valid" time="1.00"/></proof>
                </goal>
                <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="set_equal_bv">
                 <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="hpart_spec4">
                  <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="htpart_length">
                   <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="0.82"/></proof>
                   </goal>
                   <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="0.84"/></proof>
                   </goal>
                   <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.44"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.48"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.52"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="1.18"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="hpart_spec4">
             <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="0.81"/></proof>
             </goal>
             <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="1.44"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC diag_place.6.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="4.66"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC diag_place.6.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC diag_place.6.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(kronecker (bv_to_ket (hpart x k)) (bv_to_ket (tpart x k)))
">
           <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="H21">
            <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
             <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
              </transf>
              </goal>
              <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="H22">
               <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="( htpart x k (width c))" arg2="( tpart x k )">
                <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="5"><result status="valid" time="0.79"/></proof>
                </goal>
                <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="set_equal_bv">
                 <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.46"/></proof>
                 </goal>
                 <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.59"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.0.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="1.21"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="1.66"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
            <goal name="VC diag_place.6.0.0.0.0.0.0.2.0.1.0" expl="equality hypothesis" proved="true">
            <proof prover="5"><result status="valid" time="1.34"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC diag_place.6.0.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC diag_place.6.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(kronecker (bv_to_ket (hpart x k)) (kronecker (bv_to_ket (htpart x k (width c))) (bv_to_ket (tpart x  (width c + k)))))
">
           <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="H21">
            <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr">
             <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="kronecker_scalar_distr_r">
              <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq_gen">
               <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="0.81"/></proof>
               </goal>
               <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="1.51"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="1.46"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
            <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="bv_to_ket_concat_rev">
             <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0" expl="equality hypothesis" proved="true">
             <transf name="replace" proved="true" arg1="(concat (htpart x k (width c)) (tpart x (width c + k)))" arg2="(tpart x k)">
              <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.0" expl="equality hypothesis" proved="true">
              <proof prover="5"><result status="valid" time="1.57"/></proof>
              </goal>
              <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="set_equal_bv">
               <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="5"><result status="valid" time="1.45"/></proof>
               </goal>
               <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                <transf name="case" proved="true" arg1="(i &lt; width c)">
                 <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.0" expl="true case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_left">
                  <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.0.0" expl="true case (apply premises)" proved="true">
                  <proof prover="5"><result status="valid" time="1.51"/></proof>
                  </goal>
                  <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.42"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.1" expl="false case (apply premises)" proved="true">
                 <transf name="rewrite" proved="true" arg1="concat_value_right">
                  <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.1.0" expl="false case (apply premises)" proved="true">
                  <transf name="rewrite" proved="true" arg1="htpart_length">
                   <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.1.0.0" expl="false case (apply premises)" proved="true">
                   <proof prover="5"><result status="valid" time="1.53"/></proof>
                   </goal>
                   <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="0.77"/></proof>
                   </goal>
                   <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.1.0.2" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.38"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC diag_place.6.0.0.0.0.0.0.3.0.1.0.0.1.1.0.1.1" expl="rewrite premises" proved="true">
                  <proof prover="5"><result status="valid" time="1.46"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC diag_place.6.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="4.19"/></proof>
       <proof prover="5"><result status="valid" time="0.58"/></proof>
       </goal>
       <goal name="VC diag_place.6.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="4.15"/></proof>
       <proof prover="5"><result status="valid" time="0.59"/></proof>
       </goal>
       <goal name="VC diag_place.6.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="3.88"/></proof>
       <proof prover="5"><result status="valid" time="1.05"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diag_cont" expl="VC for diag_cont" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diag_cont.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diag_cont.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.48" steps="332"/></proof>
   </goal>
   <goal name="VC diag_cont.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.51" steps="332"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diag_cont.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diag_cont.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.49" steps="332"/></proof>
   </goal>
   <goal name="VC diag_cont.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.50" steps="332"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diag_cont.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diag_cont.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.51" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diag_cont.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="340"/></proof>
  </goal>
  <goal name="VC diag_cont.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="340"/></proof>
  </goal>
  <goal name="VC diag_cont.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="340"/></proof>
  </goal>
  <goal name="VC diag_cont.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal_">
   <goal name="VC diag_cont.6.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC diag_cont.6.0.0" expl="apply premises" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="VC diag_cont.6.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="result_def">
      <goal name="VC diag_cont.6.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H10">
       <goal name="VC diag_cont.6.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="eliminate_if" proved="true" >
        <goal name="VC diag_cont.6.0.0.0.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC diag_cont.6.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.24"/></proof>
         </goal>
         <goal name="VC diag_cont.6.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(cont c co k n)" arg2="result">
          <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="H5">
           <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(place c k n)" arg2="(diag_place c k n f (fun x -&gt; f (htpart x k (width c))))">
            <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(f @ htpart x k (width c))" arg2="((fun (x1:bitvec) -&gt; f @ htpart x1 k (width c)) x)">
             <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="get_diagonal_">
              <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="diag_place_spec">
                <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="5"><result status="valid" time="0.79"/></proof>
                </goal>
                <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="5"><result status="valid" time="0.80"/></proof>
                </goal>
                <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="5"><result status="valid" time="1.43"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="split_all_full" proved="true" >
               <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="diag_place_spec1">
                <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <proof prover="5"><result status="valid" time="1.28"/></proof>
                </goal>
                <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="0.84"/></proof>
                </goal>
                <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="0.82"/></proof>
                </goal>
                <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
                <proof prover="5"><result status="valid" time="1.44"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="5"><result status="valid" time="1.21"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="diag_place_def">
             <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
             <proof prover="5"><result status="valid" time="0.59"/></proof>
             </goal>
             <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="0.59"/></proof>
             </goal>
             <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="0.60"/></proof>
             </goal>
             <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.0.1.3" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="1.21"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.05"/></proof>
           </goal>
           <goal name="VC diag_cont.6.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.27"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC diag_cont.6.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <proof prover="5"><result status="valid" time="0.58"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC diag_cont.6.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="0.54" steps="312"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC gen_phase" expl="VC for gen_phase" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC gen_phase.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="326"/></proof>
  </goal>
  <goal name="VC gen_phase.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="326"/></proof>
  </goal>
  <goal name="VC gen_phase.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="326"/></proof>
  </goal>
  <goal name="VC gen_phase.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="334"/></proof>
  </goal>
  <goal name="VC gen_phase.4" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H1">
  </transf>
  </goal>
  <goal name="VC gen_phase.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.58"/></proof>
  </goal>
  <goal name="VC gen_phase.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H">
  </transf>
  </goal>
  <goal name="VC gen_phase.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.25"/></proof>
  <transf name="compute_specified" proved="true" >
   <goal name="VC gen_phase.7.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.94"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC crzp" expl="VC for crzp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC crzp.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.41" steps="336"/></proof>
  </goal>
  <goal name="VC crzp.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.46" steps="336"/></proof>
  </goal>
  <goal name="VC crzp.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="334"/></proof>
  </goal>
  <goal name="VC crzp.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.55" steps="342"/></proof>
   </goal>
   <goal name="VC crzp.3.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.55" steps="342"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.54" steps="342"/></proof>
   </goal>
   <goal name="VC crzp.4.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.52" steps="342"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.55" steps="345"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp.6.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H5">
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp.7.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC crzp.7.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="VC crzp.7.0.0.0" expl="VC for crzp" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC crzp.7.0.0.0.0" expl="precondition" proved="true">
      <proof prover="5"><result status="valid" time="1.35"/></proof>
      </goal>
      <goal name="VC crzp.7.0.0.0.1" expl="precondition" proved="true">
      <transf name="replace" proved="true" arg1="(getbv x @ co)" arg2="1">
       <goal name="VC crzp.7.0.0.0.1.0" expl="precondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC crzp.7.0.0.0.1.0.0" expl="precondition" proved="true">
        <proof prover="5"><result status="valid" time="1.35"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC crzp.7.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="1.52"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.57" steps="352"/></proof>
  </goal>
  <goal name="VC crzp.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="353"/></proof>
  </goal>
  <goal name="VC crzp.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.53" steps="354"/></proof>
  </goal>
  <goal name="VC crzp.11" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H3">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC przp" expl="VC for przp" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC przp.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="332"/></proof>
  </goal>
  <goal name="VC przp.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="332"/></proof>
  <proof prover="5"><result status="valid" time="0.59"/></proof>
  </goal>
  <goal name="VC przp.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.61" steps="330"/></proof>
  </goal>
  <goal name="VC przp.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.44" steps="338"/></proof>
  </goal>
  <goal name="VC przp.4" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H1">
  </transf>
  </goal>
  <goal name="VC przp.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC przp.5.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="htpart_value">
    <goal name="VC przp.5.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="VC przp.5.0.0.0" expl="VC for przp" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC przp.5.0.0.0.0" expl="precondition" proved="true">
      <transf name="case" proved="true" arg1="(getbv x k = 0)">
       <goal name="VC przp.5.0.0.0.0.0" expl="true case (precondition)" proved="true">
       <proof prover="0"><result status="valid" time="1.05"/></proof>
       </goal>
       <goal name="VC przp.5.0.0.0.0.1" expl="false case (precondition)" proved="true">
       <transf name="replace" proved="true" arg1="(getbv x @ (k + 0))" arg2="1">
        <goal name="VC przp.5.0.0.0.0.1.0" expl="false case (precondition)" proved="true">
        <transf name="replace" proved="true" arg1="(int_to_ang ((getbv x @ k) * power_ 2 (n - i)) n )" arg2="(int_to_ang ((getbv x @ k) * power_ 2 (n - i)) (i+(n-i)) )">
         <goal name="VC przp.5.0.0.0.0.1.0.0" expl="false case (precondition)" proved="true">
         <transf name="rewrite" proved="true" arg1="int_to_ang_up">
          <goal name="VC przp.5.0.0.0.0.1.0.0.0" expl="false case (precondition)" proved="true">
          <proof prover="5"><result status="valid" time="1.34"/></proof>
          </goal>
          <goal name="VC przp.5.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="0.66"/></proof>
          </goal>
          <goal name="VC przp.5.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="0.54" steps="346"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC przp.5.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
         <proof prover="5"><result status="valid" time="0.67"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC przp.5.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="5"><result status="valid" time="1.37"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC przp.5.0.0.0.1" expl="precondition" proved="true">
      <proof prover="2"><result status="valid" time="0.52" steps="343"/></proof>
      <proof prover="5"><result status="valid" time="0.77"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC przp.5.0.1" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.63" steps="343"/></proof>
    <proof prover="5"><result status="valid" time="0.58"/></proof>
    </goal>
    <goal name="VC przp.5.0.2" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.55" steps="343"/></proof>
    <proof prover="5"><result status="valid" time="0.71"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC przp.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="348"/></proof>
  </goal>
  <goal name="VC przp.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="349"/></proof>
  <proof prover="5"><result status="valid" time="0.69"/></proof>
  </goal>
  <goal name="VC przp.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="350"/></proof>
  <proof prover="5"><result status="valid" time="0.56"/></proof>
  </goal>
  <goal name="VC przp.9" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H3">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC crzn" expl="VC for crzn" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC crzn.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="336"/></proof>
  </goal>
  <goal name="VC crzn.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.03"/></proof>
  </goal>
  <goal name="VC crzn.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.86" steps="334"/></proof>
  </goal>
  <goal name="VC crzn.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.50" steps="342"/></proof>
   </goal>
   <goal name="VC crzn.3.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.67" steps="342"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn.4.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.67" steps="342"/></proof>
   </goal>
   <goal name="VC crzn.4.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.47" steps="342"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn.5.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.53" steps="345"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn.6.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H5">
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn.7.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC crzn.7.0.0" expl="precondition" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="VC crzn.7.0.0.0" expl="VC for crzn" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC crzn.7.0.0.0.0" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="1.39"/></proof>
      </goal>
      <goal name="VC crzn.7.0.0.0.1" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC crzn.7.0.0.0.1.0" expl="precondition" proved="true">
       <transf name="apply" proved="true" arg1="int_to_ang_eq">
        <goal name="VC crzn.7.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="VC crzn.7.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="htpart_spec">
          <goal name="VC crzn.7.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(getbv x @ co)" arg2="1">
           <goal name="VC crzn.7.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="1.10"/></proof>
           </goal>
           <goal name="VC crzn.7.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="5"><result status="valid" time="2.03"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC crzn.7.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.02"/></proof>
          </goal>
          <goal name="VC crzn.7.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.39"/></proof>
          </goal>
          <goal name="VC crzn.7.0.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.26"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC crzn.7.0.0.0.1.0.1" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.52" steps="349"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="352"/></proof>
  </goal>
  <goal name="VC crzn.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="353"/></proof>
  </goal>
  <goal name="VC crzn.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.46" steps="354"/></proof>
  </goal>
  <goal name="VC crzn.11" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H3">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC crzp_up" expl="VC for crzp_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC crzp_up.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp_up.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.58" steps="336"/></proof>
   </goal>
   <goal name="VC crzp_up.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.51" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp_up.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp_up.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.53" steps="336"/></proof>
   </goal>
   <goal name="VC crzp_up.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.53" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp_up.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp_up.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.55" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp_up.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzp_up.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.59" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzp_up.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.61" steps="344"/></proof>
  </goal>
  <goal name="VC crzp_up.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.46" steps="344"/></proof>
  </goal>
  <goal name="VC crzp_up.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.58" steps="344"/></proof>
  </goal>
  <goal name="VC crzp_up.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC crzp_up.7.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC crzp_up.7.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC crzp_up.7.0.0.0" expl="apply premises" proved="true">
     <transf name="instantiate" proved="true" arg1="get_diagonal" arg2="result,(fun (x1:bitvec) -&gt; int_to_ang ((getbv x1 @ co) * (getbv x1 @ t)) k)">
      <goal name="VC crzp_up.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="VC crzp_up.7.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="VC crzp_up.7.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="0.57"/></proof>
        </goal>
        <goal name="VC crzp_up.7.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC crzp_up.7.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="5"><result status="valid" time="1.36"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC crzp_up.7.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="H4">
       </transf>
       </goal>
       <goal name="VC crzp_up.7.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="0.57"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC crzn_up" expl="VC for crzn_up" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC crzn_up.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn_up.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.48" steps="336"/></proof>
   </goal>
   <goal name="VC crzn_up.0.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.64" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn_up.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn_up.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.54" steps="336"/></proof>
   </goal>
   <goal name="VC crzn_up.1.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.50" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn_up.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn_up.2.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.50" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn_up.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC crzn_up.3.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.52" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC crzn_up.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="344"/></proof>
  </goal>
  <goal name="VC crzn_up.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="344"/></proof>
  </goal>
  <goal name="VC crzn_up.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="344"/></proof>
  </goal>
  <goal name="VC crzn_up.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC crzn_up.7.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC crzn_up.7.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC crzn_up.7.0.0.0" expl="apply premises" proved="true">
     <transf name="instantiate" proved="true" arg1="get_diagonal" arg2="result,(fun (x1:bitvec) -&gt; int_to_ang ((- (getbv x1 @ co)) * (getbv x1 @ t)) (-k))">
      <goal name="VC crzn_up.7.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="VC crzn_up.7.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="VC crzn_up.7.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="0.59"/></proof>
        </goal>
        <goal name="VC crzn_up.7.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC crzn_up.7.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="instantiate" proved="true" arg1="int_to_ang_up" arg2="(-((getbv x @ co) * (getbv x @ t))),(-k),den">
          <goal name="VC crzn_up.7.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="5"><result status="valid" time="1.30"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC crzn_up.7.0.0.0.0.1" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="H4">
       </transf>
       </goal>
       <goal name="VC crzn_up.7.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="0.70"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC c_rzp_one" expl="VC for c_rzp_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC c_rzp_one.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.89"/></proof>
  </goal>
  <goal name="VC c_rzp_one.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.11"/></proof>
  </goal>
  <goal name="VC c_rzp_one.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="2.23"/></proof>
  </goal>
  <goal name="VC c_rzp_one.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.66"/></proof>
  </goal>
  <goal name="VC c_rzp_one.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.57"/></proof>
  </goal>
  <goal name="VC c_rzp_one.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.57"/></proof>
  </goal>
  <goal name="VC c_rzp_one.6" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.58"/></proof>
  </goal>
  <goal name="VC c_rzp_one.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H3">
  </transf>
  </goal>
  <goal name="VC c_rzp_one.8" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC c_rzp_one.8.0" expl="apply premises" proved="true">
   <transf name="instantiate" proved="true" arg1="get_diagonal" arg2="result,(fun (x:bitvec) -&gt; int_to_ang ((getbv x @ co) * (getbv x @ t)) 1)">
    <goal name="VC c_rzp_one.8.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC c_rzp_one.8.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="Hinst">
      <goal name="VC c_rzp_one.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="VC c_rzp_one.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="5"><result status="valid" time="0.61"/></proof>
       </goal>
       <goal name="VC c_rzp_one.8.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC c_rzp_one.8.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="1.74"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC c_rzp_one.8.0.0.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="H1">
      </transf>
      </goal>
      <goal name="VC c_rzp_one.8.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="0.60"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Flat_circuit">
 <goal name="VC flat" expl="VC for flat" proved="true">
 <proof prover="0"><result status="valid" time="1.25"/></proof>
 </goal>
 <goal name="VC set_flat" expl="VC for set_flat" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC set_flat.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC set_flat.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="flat_def">
    <goal name="VC set_flat.0.0.0" expl="VC for set_flat" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC set_flat.0.0.0.0" expl="VC for set_flat" proved="true">
     <transf name="apply" proved="true" arg1="correct_path_sum_to_bv">
      <goal name="VC set_flat.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC set_flat.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC set_flat.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="5"><result status="valid" time="1.63"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC set_flat.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="set_correct_pps">
       <goal name="VC set_flat.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
        <goal name="VC set_flat.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="0.88" steps="290"/></proof>
        </goal>
        <goal name="VC set_flat.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="1.57"/></proof>
        </goal>
        <goal name="VC set_flat.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="0.75" steps="290"/></proof>
        </goal>
        <goal name="VC set_flat.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC set_flat.0.0.0.0.1.0.3.0" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC set_flat.0.0.0.0.1.0.3.0.0" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.44"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC set_flat.0.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC set_flat.0.0.0.0.1.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
         <goal name="VC set_flat.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="pps_apply_basis_def">
          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="build_pps_bv_spec2">
            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(path_sem_basis c x)" arg2="(path_sem c (bv_to_ket (ket_to_bv x)))">
             <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
              <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
               <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="H2">
                 <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="scalar_eq_gen">
                  <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length">
                    <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.62"/></proof>
                    </goal>
                    <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.92"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.90"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="0.81"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.24"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="0.79"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.3" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.3.0" expl="rewrite premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.3.0.0" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.43"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.57"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.62"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.56"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.1.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.60"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="0.80"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="0.79"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.1" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.23"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.2" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="0.78"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.3" expl="rewrite premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.1.1.2.1.3.0" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.50"/></proof>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="5"><result status="valid" time="1.56"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="build_pps_bv_spec1">
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                      </transf>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.51"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="0.84"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
                      <transf name="compute_specified" proved="true" >
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3.0" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.44"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.4" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.45"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.5" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.49"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.0" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="0.78"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.93"/></proof>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.1" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.93"/></proof>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="0.80"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.1" expl="rewrite premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.20"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.2" expl="rewrite premises" proved="true">
                          <proof prover="5"><result status="valid" time="0.78"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.3" expl="rewrite premises" proved="true">
                          <transf name="split_vc" proved="true" >
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.3.0" expl="rewrite premises" proved="true">
                           <transf name="compute_specified" proved="true" >
                            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.0.2.3.0.0" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.57"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.0" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.0.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.52"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.0.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.54"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.1" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.1.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.64"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.1.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.65"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="0.80"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="0.80"/></proof>
                           </goal>
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.1" expl="rewrite premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.21"/></proof>
                           </goal>
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.2" expl="rewrite premises" proved="true">
                           <proof prover="5"><result status="valid" time="0.80"/></proof>
                           </goal>
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.3" expl="rewrite premises" proved="true">
                           <transf name="compute_specified" proved="true" >
                            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.1.1.2.1.3.0" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.55"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.6.2" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.48"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.57"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.59"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.56"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.1.1" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.54"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2" expl="apply premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="0.76"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.1" expl="apply premises" proved="true">
                        <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.1.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="0.81"/></proof>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.1.1" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.26"/></proof>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.1.2" expl="rewrite premises" proved="true">
                         <proof prover="5"><result status="valid" time="0.81"/></proof>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.1.3" expl="rewrite premises" proved="true">
                         <transf name="compute_specified" proved="true" >
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.1.3.0" expl="rewrite premises" proved="true">
                          <transf name="split_vc" proved="true" >
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.2.1.3.0.0" expl="rewrite premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.48"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                      <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.89"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.1" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.90"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.2" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.2.0" expl="apply premises" proved="true">
                        <proof prover="5"><result status="valid" time="0.82"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.2.1" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.90"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.2.2" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="0.84"/></proof>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.2.3" expl="rewrite premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.2.3.0" expl="rewrite premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.1.1.2.3.0.0" expl="rewrite premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.72"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0" expl="rewrite premises" proved="true">
                      <proof prover="2"><result status="valid" time="1.44" steps="298"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="0.82"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.96"/></proof>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.1" expl="apply premises" proved="true">
                         <proof prover="5"><result status="valid" time="1.97"/></proof>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.2" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.2.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="0.79"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.2.1" expl="rewrite premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.27"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.2.2" expl="rewrite premises" proved="true">
                          <proof prover="5"><result status="valid" time="0.82"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.2.3" expl="rewrite premises" proved="true">
                          <transf name="split_vc" proved="true" >
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.2.3.0" expl="rewrite premises" proved="true">
                           <transf name="compute_specified" proved="true" >
                            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.0.2.3.0.0" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.72"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1" expl="rewrite premises" proved="true">
                        <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.0" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.0.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="2.14"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.0.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.71"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.1" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.1.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="2.53"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.1.1" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="1.76"/></proof>
                          </goal>
                         </transf>
                         </goal>
                         <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.2" expl="apply premises" proved="true">
                         <transf name="split_vc" proved="true" >
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.2.0" expl="apply premises" proved="true">
                          <proof prover="5"><result status="valid" time="0.96"/></proof>
                          </goal>
                          <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.2.1" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.2.1.0" expl="apply premises" proved="true">
                           <proof prover="5"><result status="valid" time="0.87"/></proof>
                           </goal>
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.2.1.1" expl="rewrite premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.50"/></proof>
                           </goal>
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.2.1.2" expl="rewrite premises" proved="true">
                           <proof prover="5"><result status="valid" time="1.34"/></proof>
                           </goal>
                           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.2.1.3" expl="rewrite premises" proved="true">
                           <transf name="compute_specified" proved="true" >
                            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.1.1.2.1.3.0" expl="rewrite premises" proved="true">
                            <proof prover="5"><result status="valid" time="1.75"/></proof>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1.0.2.1.2" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.59"/></proof>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="build_pps_bv_spec">
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                   </transf>
                   </goal>
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.52"/></proof>
                   </goal>
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="0.83"/></proof>
                   </goal>
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.3.0" expl="rewrite premises" proved="true">
                    <transf name="compute_specified" proved="true" >
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.3.0.0" expl="rewrite premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.44"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.4" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.51"/></proof>
                   </goal>
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.1.5" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.57"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="5"><result status="valid" time="1.44"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="1.36"/></proof>
               </goal>
               <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="0.62" steps="294"/></proof>
               </goal>
               <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                <transf name="apply" proved="true" arg1="scalar_ket_l">
                 <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
                  <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="make_bv_length">
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="5"><result status="valid" time="0.78"/></proof>
                   </goal>
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
                   <transf name="split_vc" proved="true" >
                    <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.92"/></proof>
                     </goal>
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.1" expl="apply premises" proved="true">
                     <proof prover="5"><result status="valid" time="1.89"/></proof>
                     </goal>
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="0.78"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2.1" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.25"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2.2" expl="rewrite premises" proved="true">
                      <proof prover="5"><result status="valid" time="0.84"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2.3" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2.3.0" expl="rewrite premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.0.2.3.0.0" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.55"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.0" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.61"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.68"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.1" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.86"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.1.1" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="1.76"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.2" expl="apply premises" proved="true">
                     <transf name="split_vc" proved="true" >
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.2.0" expl="apply premises" proved="true">
                      <proof prover="5"><result status="valid" time="0.83"/></proof>
                      </goal>
                      <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.2.1" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.2.1.0" expl="apply premises" proved="true">
                       <proof prover="5"><result status="valid" time="0.81"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.2.1.1" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="1.23"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.2.1.2" expl="rewrite premises" proved="true">
                       <proof prover="5"><result status="valid" time="0.82"/></proof>
                       </goal>
                       <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.2.1.3" expl="rewrite premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.1.1.2.1.3.0" expl="rewrite premises" proved="true">
                        <proof prover="5"><result status="valid" time="1.55"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.0.3.0.0.0.2" expl="rewrite premises" proved="true">
                   <proof prover="5"><result status="valid" time="1.48"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="3.77"/></proof>
              <proof prover="4"><result status="valid" time="4.09"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="5"><result status="valid" time="1.62"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="1.54"/></proof>
            </goal>
            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="0.67" steps="294"/></proof>
            </goal>
            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
              <proof prover="5"><result status="valid" time="1.69"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.54"/></proof>
           </goal>
           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="0.57" steps="294"/></proof>
           </goal>
           <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.3" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.3.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="VC set_flat.0.0.0.0.1.1.0.0.0.3.0.0" expl="rewrite premises" proved="true">
             <proof prover="5"><result status="valid" time="1.51"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC set_flat.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
           <goal name="VC set_flat.0.0.0.0.1.1.0.0.1.0" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.52"/></proof>
           </goal>
           <goal name="VC set_flat.0.0.0.0.1.1.0.0.1.1" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.51"/></proof>
           </goal>
           <goal name="VC set_flat.0.0.0.0.1.1.0.0.1.2" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="0.80"/></proof>
           </goal>
           <goal name="VC set_flat.0.0.0.0.1.1.0.0.1.3" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC set_flat.0.0.0.0.1.1.0.0.1.3.0" expl="rewrite premises" proved="true">
            <proof prover="5"><result status="valid" time="1.47"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC set_flat.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
          <goal name="VC set_flat.0.0.0.0.1.1.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="0.77"/></proof>
          </goal>
          <goal name="VC set_flat.0.0.0.0.1.1.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="1.49"/></proof>
          </goal>
          <goal name="VC set_flat.0.0.0.0.1.1.0.1.2" expl="rewrite premises" proved="true">
          <proof prover="5"><result status="valid" time="0.81"/></proof>
          </goal>
          <goal name="VC set_flat.0.0.0.0.1.1.0.1.3" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC set_flat.0.0.0.0.1.1.0.1.3.0" expl="rewrite premises" proved="true">
           <proof prover="5"><result status="valid" time="1.38"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC set_flat.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="0.68" steps="294"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC set_flat.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="3.79"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_flat" expl="VC for get_flat" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.71"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.78"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="VC get_flat.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <transf name="replace" proved="true" arg1="(path_sem_basis c (bv_to_ket x))" arg2="(path_sem c (bv_to_ket x))">
   <goal name="VC get_flat.0.0" expl="postcondition" proved="true">
   <transf name="instantiate" proved="true" arg1="correct_path_sum_bv_apply" arg2="c,0,(fun (x1:bitvec) (_:bitvec) -&gt; f x1),(fun (x1:bitvec) (_:bitvec) -&gt; g @ x1),x
">
    <goal name="VC get_flat.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="VC get_flat.0.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC get_flat.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_c_one_gen">
       <goal name="VC get_flat.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_bitvec_zero">
        <goal name="VC get_flat.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC get_flat.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="1.41"/></proof>
        </goal>
        <goal name="VC get_flat.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="valid" time="0.60"/></proof>
        </goal>
        <goal name="VC get_flat.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="5"><result status="timeout" time="5.00"/></proof>
        <transf name="compute_specified" proved="true" >
         <goal name="VC get_flat.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="1.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC get_flat.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="timeout" time="5.00"/></proof>
       <proof prover="1"><result status="valid" time="0.35"/></proof>
       <proof prover="2"><result status="timeout" time="5.00"/></proof>
       <proof prover="3"><result status="unknown" time="0.59"/></proof>
       <proof prover="4"><result status="unknown" time="0.62"/></proof>
       <proof prover="5"><result status="timeout" time="5.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC get_flat.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="timeout" time="5.00"/></proof>
     <transf name="compute_specified" proved="true" >
      <goal name="VC get_flat.0.0.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="5"><result status="valid" time="1.35"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC get_flat.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="0.74"/></proof>
     </goal>
     <goal name="VC get_flat.0.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="timeout" time="5.00"/></proof>
     <transf name="eliminate_definition" proved="true" >
      <goal name="VC get_flat.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="flat_def" arg2="in" arg3="H1">
       <goal name="VC get_flat.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="timeout" time="5.00"/></proof>
       <proof prover="5"><result status="timeout" time="5.00"/></proof>
       <transf name="apply" proved="true" arg1="H1">
       </transf>
       </goal>
       <goal name="VC get_flat.0.0.0.3.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="1.33"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC get_flat.0.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="0.95"/></proof>
   <proof prover="5"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_flat_basis" expl="VC for get_flat_basis" proved="true">
 <proof prover="0"><result status="valid" time="1.33"/></proof>
 </goal>
 <goal name="VC diag_to_flat" expl="VC for diag_to_flat">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.74"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.80"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC diag_to_flat.0" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC flat_to_diag" expl="VC for flat_to_diag">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.74"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.81"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC flat_to_diag.0" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC flat_cnot" expl="VC for flat_cnot">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.73"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.82"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC flat_cnot.0" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC flat_parallel" expl="VC for flat_parallel">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.75"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.83"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC flat_parallel.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="338"/></proof>
  </goal>
  <goal name="VC flat_parallel.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="338"/></proof>
  </goal>
  <goal name="VC flat_parallel.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="338"/></proof>
  </goal>
  <goal name="VC flat_parallel.3" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_parallel.4" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_parallel.5" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC flat_place" expl="VC for flat_place">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.77"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.89"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC flat_place.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="330"/></proof>
  </goal>
  <goal name="VC flat_place.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="330"/></proof>
  </goal>
  <goal name="VC flat_place.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.65" steps="338"/></proof>
  </goal>
  <goal name="VC flat_place.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="338"/></proof>
  </goal>
  <goal name="VC flat_place.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="338"/></proof>
  </goal>
  <goal name="VC flat_place.5" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC flat_cont" expl="VC for flat_cont">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.74"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.90"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC flat_cont.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="332"/></proof>
  </goal>
  <goal name="VC flat_cont.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="332"/></proof>
  </goal>
  <goal name="VC flat_cont.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="336"/></proof>
  </goal>
  <goal name="VC flat_cont.3" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_cont.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="342"/></proof>
  </goal>
  <goal name="VC flat_cont.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="342"/></proof>
  </goal>
  <goal name="VC flat_cont.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="342"/></proof>
  </goal>
  <goal name="VC flat_cont.7" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC xx" expl="VC for xx">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.86"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.98"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC xx.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="339"/></proof>
  </goal>
  <goal name="VC xx.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="340"/></proof>
  </goal>
  <goal name="VC xx.2" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC xx.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="342"/></proof>
  </goal>
  <goal name="VC xx.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="345"/></proof>
  </goal>
  <goal name="VC xx.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.53" steps="355"/></proof>
  </goal>
  <goal name="VC xx.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="356"/></proof>
  </goal>
  <goal name="VC xx.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="356"/></proof>
  </goal>
  <goal name="VC xx.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.56" steps="356"/></proof>
  </goal>
  <goal name="VC xx.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="361"/></proof>
  </goal>
  <goal name="VC xx.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="362"/></proof>
  </goal>
  <goal name="VC xx.11" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC xx.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="364"/></proof>
  </goal>
  <goal name="VC xx.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.53" steps="367"/></proof>
  </goal>
  <goal name="VC xx.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="367"/></proof>
  </goal>
  <goal name="VC xx.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="368"/></proof>
  </goal>
  <goal name="VC xx.16" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="368"/></proof>
  </goal>
  <goal name="VC xx.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="368"/></proof>
  </goal>
  <goal name="VC xx.18" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC xx.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="369"/></proof>
  </goal>
  <goal name="VC xx.20" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.86" steps="373"/></proof>
  </goal>
  <goal name="VC xx.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="383"/></proof>
  </goal>
  <goal name="VC xx.22" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC xx.23" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC xx.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.61" steps="399"/></proof>
  </goal>
  <goal name="VC xx.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.58" steps="399"/></proof>
  </goal>
  <goal name="VC xx.26" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.90" steps="409"/></proof>
  </goal>
  <goal name="VC xx.27" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5"><result status="valid" time="1.68"/></proof>
  </goal>
  <goal name="VC xx.28" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.60" steps="412"/></proof>
  </goal>
  <goal name="VC xx.29" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC flat_sequence" expl="VC for flat_sequence">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.78"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.82"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC flat_sequence.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.23"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_sequence.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.12"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_sequence.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.42"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_sequence.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="338"/></proof>
  </goal>
  <goal name="VC flat_sequence.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="338"/></proof>
  </goal>
  <goal name="VC flat_sequence.5" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_sequence.6" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_sequence.7" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_sequence.8" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC flat_sequence.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.58" steps="350"/></proof>
  </goal>
  <goal name="VC flat_sequence.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="350"/></proof>
  </goal>
  <goal name="VC flat_sequence.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="350"/></proof>
  </goal>
  <goal name="VC flat_sequence.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.58" steps="350"/></proof>
  </goal>
  <goal name="VC flat_sequence.13" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC place_xx" expl="VC for place_xx">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.74"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.79"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC place_xx.0" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC place_xx.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="336"/></proof>
  </goal>
  <goal name="VC place_xx.2" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC place_xx.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="340"/></proof>
  </goal>
  <goal name="VC place_xx.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="338"/></proof>
  </goal>
  <goal name="VC place_xx.5" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC place_xx.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.27"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC place_xx.7" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC place_xx.8" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC place_xx.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="350"/></proof>
  </goal>
  <goal name="VC place_xx.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="351"/></proof>
  </goal>
  <goal name="VC place_xx.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="352"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC x_kron" expl="VC for x_kron">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.72"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.83"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC x_kron.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="340"/></proof>
  </goal>
  <goal name="VC x_kron.1" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC x_kron.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="336"/></proof>
  </goal>
  <goal name="VC x_kron.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="340"/></proof>
  </goal>
  <goal name="VC x_kron.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="338"/></proof>
  </goal>
  <goal name="VC x_kron.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="338"/></proof>
  </goal>
  <goal name="VC x_kron.6" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC x_kron.7" expl="precondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC x_kron.8" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC x_kron.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="338"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC flat_permutation" expl="VC for flat_permutation">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.74"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.82"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC flat_permutation.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="338"/></proof>
  </goal>
  <goal name="VC flat_permutation.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="338"/></proof>
  </goal>
  <goal name="VC flat_permutation.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="344"/></proof>
  </goal>
  <goal name="VC flat_permutation.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.65" steps="344"/></proof>
  </goal>
  <goal name="VC flat_permutation.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.68" steps="344"/></proof>
  </goal>
  <goal name="VC flat_permutation.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.27" steps="350"/></proof>
  </goal>
  <goal name="VC flat_permutation.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.21" steps="350"/></proof>
  </goal>
  <goal name="VC flat_permutation.7" expl="postcondition">
  <proof prover="0"><result status="timeout" time="5.00"/></proof>
  <proof prover="2"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Circuit_macros">
 <goal name="VC repeat_had" expl="VC for repeat_had">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.75"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.84"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC repeat_had.0" expl="variant decrease">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC repeat_had.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="338"/></proof>
  </goal>
  <goal name="VC repeat_had.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="338"/></proof>
  </goal>
  <goal name="VC repeat_had.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="340"/></proof>
  </goal>
  <goal name="VC repeat_had.4" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5"><result status="valid" time="1.64"/></proof>
  </goal>
  <goal name="VC repeat_had.5" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC repeat_had.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.92" steps="370"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_repeat_had_superposition" expl="VC for path_sem_repeat_had_superposition">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.71"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.77"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC path_sem_repeat_had_superposition.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.57" steps="338"/></proof>
  </goal>
  <goal name="VC path_sem_repeat_had_superposition.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ind_cnot" expl="VC for ind_cnot">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.76"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.84"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC ind_cnot.0" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_cnot.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.52" steps="354"/></proof>
  </goal>
  <goal name="VC ind_cnot.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_cnot.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="346"/></proof>
  </goal>
  <goal name="VC ind_cnot.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="348"/></proof>
  </goal>
  <goal name="VC ind_cnot.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="348"/></proof>
  </goal>
  <goal name="VC ind_cnot.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.47" steps="351"/></proof>
  </goal>
  <goal name="VC ind_cnot.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.16"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_cnot.8" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_cnot.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="360"/></proof>
  </goal>
  <goal name="VC ind_cnot.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.48" steps="361"/></proof>
  </goal>
  <goal name="VC ind_cnot.11" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_cnot.12" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_cnot.13" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_cnot.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.56" steps="364"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sem_ind_cnot" expl="VC for sem_ind_cnot">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.74"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.74"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC sem_ind_cnot.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.28"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC sem_ind_cnot.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ind_neg_cnot" expl="VC for ind_neg_cnot">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.78"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.80"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC ind_neg_cnot.0" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="368"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.2" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.69" steps="364"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.4" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.70" steps="364"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.6" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.53" steps="360"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="356"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="356"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="356"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="364"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.12" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.13" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.14" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="372"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.16" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.17" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.20"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.19" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.20" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="4.74" steps="386"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.21" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="386"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.22" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.23" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.49" steps="389"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.24" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.81" steps="354"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.26" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.23" steps="350"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.28" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.08" steps="358"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.30" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.19" steps="354"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.32" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.07" steps="346"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.33" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.93" steps="354"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.34" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.96" steps="354"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.35" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="354"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.36" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.37" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.38" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.39" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.18" steps="362"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.40" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.41" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.42" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.75"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.43" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.44" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="4.80" steps="376"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.45" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.88" steps="376"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.46" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC ind_neg_cnot.47" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.75" steps="379"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sem_ind_neg_cnot" expl="VC for sem_ind_neg_cnot">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.71"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.73"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC sem_ind_neg_cnot.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC sem_ind_neg_cnot.1" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC sem_ind_neg_cnot.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC sem_ind_neg_cnot.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC swap_lists" expl="VC for swap_lists">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.75"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.75"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC swap_lists.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="348"/></proof>
  </goal>
  <goal name="VC swap_lists.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="VC swap_lists.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="358"/></proof>
  </goal>
  <goal name="VC swap_lists.3" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.52" steps="360"/></proof>
  </goal>
  <goal name="VC swap_lists.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="360"/></proof>
  </goal>
  <goal name="VC swap_lists.5" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC swap_lists_kets" expl="VC for swap_lists_kets">
 <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.65"/></proof>
 <proof prover="4" obsolete="true"><result status="unknown" time="0.65"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 <transf name="split_vc" >
  <goal name="VC swap_lists_kets.0" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

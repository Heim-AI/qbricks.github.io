<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.4.1" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="measure.mlw"/>
<theory name="Measure" proved="true">
 <goal name="VC discard" expl="VC for discard" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC discard.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.24" steps="167"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure" expl="VC for proba_measure" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="171"/></proof>
  </goal>
  <goal name="VC proba_measure.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.65" steps="173"/></proof>
  </goal>
  <goal name="VC proba_measure.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.37" steps="173"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_extension" expl="VC for proba_measure_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_extension.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.34" steps="167"/></proof>
  </goal>
  <goal name="VC proba_measure_extension.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC proba_measure_extension.1.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.26" steps="167"/></proof>
   </goal>
   <goal name="VC proba_measure_extension.1.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.25" steps="167"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_extension.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.48" steps="168"/></proof>
  </goal>
  <goal name="VC proba_measure_extension.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="167"/></proof>
  </goal>
  <goal name="VC proba_measure_extension.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC proba_measure_extension.4.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.24" steps="175"/></proof>
   </goal>
   <goal name="VC proba_measure_extension.4.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.25" steps="172"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_extension.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC proba_measure_extension.5.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.24" steps="175"/></proof>
   </goal>
   <goal name="VC proba_measure_extension.5.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.25" steps="172"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_sum_from_extension" expl="VC for proba_measure_sum_from_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_sum_from_extension.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="sum_eq">
   <goal name="VC proba_measure_sum_from_extension.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC proba_measure_sum_from_extension.0.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC proba_measure_sum_from_extension.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.48" steps="167"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_sum_to_extension" expl="VC for proba_measure_sum_to_extension" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_sum_to_extension.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="163"/></proof>
  </goal>
  <goal name="VC proba_measure_sum_to_extension.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC proba_measure_sum_to_extension.1.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.64" steps="167"/></proof>
   </goal>
   <goal name="VC proba_measure_sum_to_extension.1.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.49" steps="167"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_sum_to_extension.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="sum_eq">
   <goal name="VC proba_measure_sum_to_extension.2.0" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC proba_measure_sum_to_extension.2.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.49" steps="169"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC positive_proba_measure" expl="VC for positive_proba_measure" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC positive_proba_measure.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="proba_measure_def">
   <goal name="VC positive_proba_measure.0.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.50" steps="169"/></proof>
   </goal>
   <goal name="VC positive_proba_measure.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.26" steps="167"/></proof>
   </goal>
   <goal name="VC positive_proba_measure.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.25" steps="167"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_scal" expl="VC for proba_measure_scal" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_scal.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC proba_measure_scal.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="proba_measure_def">
    <goal name="VC proba_measure_scal.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="proba_measure_def">
     <goal name="VC proba_measure_scal.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_ket_scalar">
      <goal name="VC proba_measure_scal.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_modulus">
       <goal name="VC proba_measure_scal.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="1.25"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC proba_measure_scal.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.26" steps="178"/></proof>
     </goal>
     <goal name="VC proba_measure_scal.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.24" steps="178"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_scal.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.46" steps="180"/></proof>
    </goal>
    <goal name="VC proba_measure_scal.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.25" steps="178"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_add_ket_l_null_right" expl="VC for proba_measure_add_ket_l_null_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_add_ket_l_null_right.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="6.50"/></proof>
  </goal>
  <goal name="VC proba_measure_add_ket_l_null_right.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.85"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_add_ket_l_null_left" expl="VC for proba_measure_add_ket_l_null_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_add_ket_l_null_left.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="6.26"/></proof>
  </goal>
  <goal name="VC proba_measure_add_ket_l_null_left.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_cond" expl="VC for proba_measure_cond" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_cond.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.28" steps="163"/></proof>
  </goal>
  <goal name="VC proba_measure_cond.1" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC proba_measure_cond.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC proba_measure_cond.1.0.0" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(cardinal (my_filter (to_fset 0 (power_ 2 n)) p) &gt;&#39; 0)">
     <goal name="VC proba_measure_cond.1.0.0.0" expl="true case (postcondition)" proved="true">
     <transf name="apply" proved="true" arg1="sum_real">
      <goal name="VC proba_measure_cond.1.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.50" steps="186"/></proof>
      </goal>
      <goal name="VC proba_measure_cond.1.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.23" steps="180"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC proba_measure_cond.1.0.0.1" expl="false case (postcondition)" proved="true">
     <proof prover="2"><result status="valid" time="4.32"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_cond.2" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC proba_measure_cond.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC proba_measure_cond.2.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sum_eq">
     <goal name="VC proba_measure_cond.2.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC proba_measure_cond.2.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC proba_measure_cond.2.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="4.07"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_from_sum" expl="VC for proba_measure_from_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_from_sum.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.49" steps="171"/></proof>
  </goal>
  <goal name="VC proba_measure_from_sum.1" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="proba_measure_def">
   <goal name="VC proba_measure_from_sum.1.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H2">
    <goal name="VC proba_measure_from_sum.1.0.0" expl="postcondition" proved="true">
    <transf name="eliminate_definition" proved="true" >
     <goal name="VC proba_measure_from_sum.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="get_ket_def">
      <goal name="VC proba_measure_from_sum.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H">
       <goal name="VC proba_measure_from_sum.1.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="3"><result status="valid" time="0.25" steps="180"/></proof>
       </goal>
       <goal name="VC proba_measure_from_sum.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.25" steps="180"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_from_sum.1.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.26" steps="171"/></proof>
   </goal>
   <goal name="VC proba_measure_from_sum.1.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.27" steps="171"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_from_scal_sum_sum_fun" expl="VC for proba_measure_from_scal_sum_sum_fun" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_from_scal_sum_sum_fun.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="187"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.25" steps="199"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.40" steps="183"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="185"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.25" steps="183"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.27" steps="183"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.25" steps="183"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.7" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC proba_measure_from_scal_sum_sum_fun.7.0" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(not (fun (j:int) -&gt; not (g&#39; @ j) = (g&#39; @ i)) e)">
    <goal name="VC proba_measure_from_scal_sum_sum_fun.7.0.0" expl="asserted formula" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC proba_measure_from_scal_sum_sum_fun.7.0.0.0" expl="asserted formula" proved="true">
     <proof prover="3"><result status="valid" time="0.54" steps="200"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_from_scal_sum_sum_fun.7.0.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.78"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="206"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.9" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal">
   <goal name="VC proba_measure_from_scal_sum_sum_fun.9.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC proba_measure_from_scal_sum_sum_fun.9.0.0" expl="apply premises" proved="true">
    <transf name="case" proved="true" arg1="(g&#39; e = g&#39; i)">
     <goal name="VC proba_measure_from_scal_sum_sum_fun.9.0.0.0" expl="true case (apply premises)" proved="true">
     <transf name="assert" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n&#39;)) (fun (j:int) -&gt; (g&#39; @ j) = (g&#39; @ i))))">
      <goal name="VC proba_measure_from_scal_sum_sum_fun.9.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="3"><result status="valid" time="0.76" steps="212"/></proof>
      </goal>
      <goal name="VC proba_measure_from_scal_sum_sum_fun.9.0.0.0.1" expl="true case (apply premises)" proved="true">
      <proof prover="1"><result status="valid" time="1.06"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC proba_measure_from_scal_sum_sum_fun.9.0.0.1" expl="false case (apply premises)" proved="true">
     <transf name="assert" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n&#39;))
    (fun (j:int) -&gt; not (g&#39; @ j) = (g&#39; @ i))))">
      <goal name="VC proba_measure_from_scal_sum_sum_fun.9.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="3"><result status="valid" time="0.62" steps="212"/></proof>
      </goal>
      <goal name="VC proba_measure_from_scal_sum_sum_fun.9.0.0.1.1" expl="false case (apply premises)" proved="true">
      <proof prover="1"><result status="valid" time="0.96"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_from_scal_sum_sum_fun.9.1" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="1.33"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.10" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall s: (set1 int). is_empty s -&gt; s = empty)">
   <goal name="VC proba_measure_from_scal_sum_sum_fun.10.0" expl="asserted formula" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC proba_measure_from_scal_sum_sum_fun.10.0.0" expl="asserted formula" proved="true">
    <proof prover="1"><result status="valid" time="0.78"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_from_scal_sum_sum_fun.10.1" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="h">
    <goal name="VC proba_measure_from_scal_sum_sum_fun.10.1.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="H19">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.11" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
    <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="sum_null_">
      <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="scalar_ket_value">
         <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(bv_to_int (int_to_bv i n&#39;))" arg2="i">
          <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mult_zero_t">
           <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
            <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ i)))" arg2="(power_ 2 n1)">
             <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="mult_zero_t">
              <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="get_mod">
               <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="assert" proved="true" arg1="((fun (j:int) -&gt; not (g&#39; @ j) = (g&#39; @ i)) e1)">
                <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                <proof prover="0"><result status="valid" time="1.16"/></proof>
                </goal>
                <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="get__ket_value">
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="h">
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.66" steps="220"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="3"><result status="valid" time="0.28" steps="218"/></proof>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="power_to_">
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0" expl="rewrite premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.77" steps="219"/></proof>
                  </goal>
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1" expl="rewrite premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.30" steps="218"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="power_to_">
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="H49">
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3.0.0" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="0.83"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3.1" expl="rewrite premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.29" steps="218"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.70" steps="218"/></proof>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="H49">
                <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.06"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="0"><result status="valid" time="1.24"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.66" steps="218"/></proof>
            </goal>
            <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.75" steps="218"/></proof>
            </goal>
            <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
             <proof prover="1"><result status="valid" time="0.87"/></proof>
             </goal>
             <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(rows (ket n&#39; (bv_to_int e)) *&#39; rows (ket n1 (g&#39; @ i)))" arg2="(power_ 2 n)">
              <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.0" expl="rewrite premises" proved="true">
              <transf name="assert" proved="true" arg1="((y *&#39; power_ 2 n1) &lt;=&#39; (power_ 2 n&#39; -&#39;&#39; 1) *&#39; power_ 2 n1)">
               <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.0.0" expl="asserted formula" proved="true">
               <proof prover="0"><result status="valid" time="1.11"/></proof>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="25.93"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.1" expl="equality hypothesis" proved="true">
              <transf name="replace" proved="true" arg1="n" arg2="(n&#39; +&#39; n1)">
               <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.1.0" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="power__sum">
                <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.1.0.0" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="mult_eq">
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.1.0.0.0" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.73"/></proof>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.1.0.0.1" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.12"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.1.0.1" expl="rewrite premises" proved="true">
                <proof prover="3"><result status="valid" time="0.28" steps="216"/></proof>
                </goal>
                <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.1.0.2" expl="rewrite premises" proved="true">
                <proof prover="3"><result status="valid" time="0.37" steps="216"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.0.0.3.1.1.1" expl="equality hypothesis" proved="true">
               <proof prover="3"><result status="valid" time="0.47" steps="216"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="3"><result status="valid" time="1.31" steps="218"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.63" steps="214"/></proof>
    </goal>
    <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.0" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(forall a b. 0&lt;=&#39;a-&gt; 0&lt;=&#39;b -&gt; 0&lt;=&#39; a+&#39;b)">
      <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.0.0" expl="asserted formula" proved="true">
      <proof prover="3"><result status="valid" time="0.63" steps="218"/></proof>
      </goal>
      <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.0.1" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.0.1.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="1.48" steps="216"/></proof>
       </goal>
       <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.0.1.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.25"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="((y *&#39; power_ 2 n1) &lt;=&#39; (power_ 2 n&#39; -&#39;&#39; 1) *&#39; power_ 2 n1)">
      <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="compat_int_order_mult">
       <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.47" steps="214"/></proof>
       </goal>
       <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.84" steps="216"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.1" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="(g&#39; e &lt;&#39; power_ 2 n1)">
       <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.1.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.27"/></proof>
       </goal>
       <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.1.1" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(power 2 n)" arg2="(power_ 2 n&#39; *&#39; power_ 2 n1)">
        <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.1.1.0" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="0.38" steps="218"/></proof>
        </goal>
        <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.1.1.1" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="power_to_">
         <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.1.1.1.0" expl="equality hypothesis" proved="true">
         <proof prover="3"><result status="valid" time="0.92" steps="220"/></proof>
         </goal>
         <goal name="VC proba_measure_from_scal_sum_sum_fun.11.0.2.1.1.1.1.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.28" steps="218"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="214"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.80"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.39" steps="216"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.15" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC proba_measure_from_scal_sum_sum_fun.15.0" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b. 0&lt;=&#39;a-&gt; 0&lt;=&#39;b -&gt; 0&lt;=&#39; a+&#39;b)">
    <goal name="VC proba_measure_from_scal_sum_sum_fun.15.0.0" expl="asserted formula" proved="true">
    <proof prover="3"><result status="valid" time="0.26" steps="220"/></proof>
    </goal>
    <goal name="VC proba_measure_from_scal_sum_sum_fun.15.0.1" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="h">
     <goal name="VC proba_measure_from_scal_sum_sum_fun.15.0.1.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.94" steps="220"/></proof>
     </goal>
     <goal name="VC proba_measure_from_scal_sum_sum_fun.15.0.1.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.91" steps="220"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="((y *&#39; power_ 2 n1) &lt;=&#39; (power_ 2 n&#39; -&#39;&#39; 1) *&#39; power_ 2 n1)">
    <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1.0" expl="asserted formula" proved="true">
    <transf name="apply" proved="true" arg1="compat_int_order_mult">
     <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.28" steps="216"/></proof>
     </goal>
     <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.79" steps="220"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1.1" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(g&#39; i &lt;&#39; power_ 2 n1)">
     <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1.1.0" expl="asserted formula" proved="true">
     <proof prover="3"><result status="valid" time="0.86" steps="222"/></proof>
     </goal>
     <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1.1.1" expl="precondition" proved="true">
     <transf name="replace" proved="true" arg1="(power_ 2 n)" arg2="(power_ 2 n&#39; *&#39; power_ 2 n1)">
      <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1.1.1.0" expl="precondition" proved="true">
      <proof prover="3"><result status="valid" time="0.25" steps="220"/></proof>
      </goal>
      <goal name="VC proba_measure_from_scal_sum_sum_fun.15.1.1.1.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="0.89" steps="224"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.16" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.27" steps="222"/></proof>
  </goal>
  <goal name="VC proba_measure_from_scal_sum_sum_fun.17" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H53">
     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="proba_measure_scal">
      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="mult_eq_t">
       <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.29" steps="233"/></proof>
       </goal>
       <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="eliminate_let" proved="true" >
        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_sum_l_to_fset">
         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="H16">
           <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="proba_measure_def">
            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="add_ket_l_value">
             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(my_filter (to_fset 0 (power_ 2 n&#39;))
      (fun (j:int) -&gt; (g&#39; @ j) = (g&#39; @ i)))" arg2="(map g (to_fset 0 k))">
              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="H4">
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="add_zero_t">
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="cpower_eq">
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="modulus_itself">
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="apply" proved="true" arg1="sum_eq">
                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="compute_specified" proved="true" >
                      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
                        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="compute_specified" proved="true" >
                         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="instantiate" proved="true" arg1="sum_null_but_maybe_one_elt" arg2="(fun (e:bitvec) -&gt;
    get_ket
    (((f @ bv_to_int (int_to_bv (g @ x) n&#39;)) @ bv_to_int e)
     *.. kronecker (ket n&#39; (bv_to_int e))
         (ket n1 (g&#39; @ bv_to_int (int_to_bv (g @ x) n&#39;))))
    ((y *&#39; power_ 2 n1) +&#39; (g&#39; @ i))),(n_bvs n&#39;),(int_to_bv y n&#39;)">
                          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="rewrite" proved="true" arg1="Hinst">
                           <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="compute_specified" proved="true" >
                            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="rewrite" proved="true" arg1="get_ket_scalar">
                             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="mult_one_t">
                              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <proof prover="3"><result status="valid" time="0.33" steps="235"/></proof>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                <proof prover="3"><result status="valid" time="0.34" steps="235"/></proof>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                <proof prover="2"><result status="valid" time="1.10"/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                               <proof prover="3"><result status="valid" time="0.33" steps="235"/></proof>
                               </goal>
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                               <proof prover="2"><result status="valid" time="1.48"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                               <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                                <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="rewrite premises" proved="true">
                                 <transf name="rewrite" proved="true" arg1="g_ket_value">
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="rewrite premises" proved="true">
                                  <transf name="rewrite" proved="true" arg1="g_ket_value">
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="rewrite premises" proved="true">
                                   <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ (g @ x))))" arg2="(power_ 2 n1)">
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                                    <transf name="rewrite" proved="true" arg1="get_div">
                                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                                     <transf name="rewrite" proved="true" arg1="get_mod">
                                      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="rewrite premises" proved="true">
                                      <proof prover="3"><result status="valid" time="0.97" steps="240"/></proof>
                                      </goal>
                                      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                      <proof prover="3"><result status="valid" time="0.77" steps="240"/></proof>
                                      </goal>
                                      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                      <proof prover="3"><result status="valid" time="0.71" steps="239"/></proof>
                                      </goal>
                                     </transf>
                                     </goal>
                                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                     <proof prover="3"><result status="valid" time="0.71" steps="240"/></proof>
                                     </goal>
                                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                     <proof prover="3"><result status="valid" time="0.78" steps="239"/></proof>
                                     </goal>
                                    </transf>
                                    </goal>
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                    <proof prover="2"><result status="valid" time="1.77"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                                   <proof prover="3"><result status="valid" time="0.30" steps="235"/></proof>
                                   </goal>
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
                                   <proof prover="2"><result status="valid" time="1.25"/></proof>
                                   </goal>
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
                                   <proof prover="2"><result status="valid" time="1.41"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                                  <proof prover="3"><result status="valid" time="0.25" steps="235"/></proof>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                                  <proof prover="2"><result status="valid" time="1.20"/></proof>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                                  <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ (g @ x))))" arg2="(power_ 2 n1)">
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3.0" expl="rewrite premises" proved="true">
                                   <transf name="rewrite" proved="true" arg1="get_div">
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                                    <proof prover="2"><result status="valid" time="1.46"/></proof>
                                    </goal>
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3.0.1" expl="rewrite premises" proved="true">
                                    <proof prover="3"><result status="valid" time="0.71" steps="240"/></proof>
                                    </goal>
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="3"><result status="valid" time="0.69" steps="239"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.3.1" expl="equality hypothesis" proved="true">
                                   <proof prover="2"><result status="valid" time="1.31"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                                 <proof prover="3"><result status="valid" time="0.68" steps="240"/></proof>
                                 </goal>
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                                 <proof prover="3"><result status="valid" time="0.70" steps="240"/></proof>
                                 </goal>
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
                                 <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ (g @ x))))" arg2="(power_ 2 n1)">
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3.0" expl="rewrite premises" proved="true">
                                  <transf name="replace" proved="true" arg1="(rows (ket n&#39; y))" arg2="(power_ 2 n&#39;)">
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3.0.0" expl="rewrite premises" proved="true">
                                   <transf name="split_vc" proved="true" >
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3.0.0.0" proved="true">
                                    <proof prover="1"><result status="valid" time="30.07"/></proof>
                                    </goal>
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3.0.0.1" proved="true">
                                    <proof prover="3"><result status="valid" time="0.69" steps="240"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3.0.1" expl="equality hypothesis" proved="true">
                                   <proof prover="2"><result status="valid" time="1.63"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.3.1" expl="equality hypothesis" proved="true">
                                  <proof prover="2"><result status="valid" time="1.84"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                                <proof prover="3"><result status="valid" time="0.25" steps="235"/></proof>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                                <proof prover="2"><result status="valid" time="1.68"/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                               <proof prover="3"><result status="valid" time="0.26" steps="235"/></proof>
                               </goal>
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                               <proof prover="2"><result status="valid" time="1.20"/></proof>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                           <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                           <proof prover="3"><result status="valid" time="0.67" steps="239"/></proof>
                           </goal>
                           <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                           <transf name="compute_specified" proved="true" >
                            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                            <transf name="split_vc" proved="true" >
                             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                             <transf name="rewrite" proved="true" arg1="scalar_ket_value">
                              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                              <transf name="apply" proved="true" arg1="mult_zero_t">
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
                                <transf name="apply" proved="true" arg1="zero_mult_t">
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                                 <transf name="rewrite" proved="true" arg1="g_ket_value">
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                  <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ bv_to_int (int_to_bv (g @ x) n&#39;))))" arg2="(power_ 2 n1)">
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                   <transf name="rewrite" proved="true" arg1="get_div">
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                    <proof prover="3"><result status="valid" time="0.71" steps="244"/></proof>
                                    </goal>
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                    <proof prover="3"><result status="valid" time="0.71" steps="244"/></proof>
                                    </goal>
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="3"><result status="valid" time="0.70" steps="243"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                                   <proof prover="2"><result status="valid" time="1.82"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                  <proof prover="3"><result status="valid" time="0.27" steps="239"/></proof>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                  <proof prover="2"><result status="valid" time="1.18"/></proof>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                                  <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ bv_to_int (int_to_bv (g @ x) n&#39;))))" arg2="(power_ 2 n1)">
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                                   <transf name="rewrite" proved="true" arg1="get_div">
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                                    <proof prover="2"><result status="valid" time="1.34"/></proof>
                                    </goal>
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
                                    <proof prover="3"><result status="valid" time="0.70" steps="244"/></proof>
                                    </goal>
                                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
                                    <proof prover="3"><result status="valid" time="0.69" steps="243"/></proof>
                                    </goal>
                                   </transf>
                                   </goal>
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
                                   <proof prover="2"><result status="valid" time="1.39"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
                                <proof prover="3"><result status="valid" time="0.83" steps="244"/></proof>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.2" expl="rewrite premises" proved="true">
                                <proof prover="3"><result status="valid" time="0.82" steps="244"/></proof>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.3" expl="rewrite premises" proved="true">
                                <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ bv_to_int (int_to_bv (g @ x) n&#39;))))" arg2="(power_ 2 n1)">
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                                 <transf name="replace" proved="true" arg1="(rows(ket n&#39; (bv_to_int k)))" arg2="(power_ 2 n&#39;)">
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                                  <transf name="split_vc" proved="true" >
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
                                   <proof prover="1"><result status="valid" time="26.38"/></proof>
                                   </goal>
                                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
                                   <proof prover="3"><result status="valid" time="0.71" steps="244"/></proof>
                                   </goal>
                                  </transf>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
                                  <proof prover="2"><result status="valid" time="1.24"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
                                 <proof prover="2"><result status="valid" time="1.32"/></proof>
                                 </goal>
                                </transf>
                                </goal>
                               </transf>
                               </goal>
                              </transf>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.28" steps="235"/></proof>
                        </goal>
                        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                         <proof prover="1"><result status="valid" time="1.83"/></proof>
                         </goal>
                         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                         <transf name="replace" proved="true" arg1="(power 2 n)" arg2="(power_ 2 n&#39; *&#39; power_ 2 n1)">
                          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1.0" expl="rewrite premises" proved="true">
                          <proof prover="3"><result status="valid" time="0.72" steps="239"/></proof>
                          </goal>
                          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1.1" expl="equality hypothesis" proved="true">
                          <transf name="rewrite" proved="true" arg1="power_to_">
                           <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1.1.0" expl="equality hypothesis" proved="true">
                           <proof prover="3"><result status="valid" time="0.71" steps="239"/></proof>
                           </goal>
                           <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1.1.1" expl="rewrite premises" proved="true">
                           <proof prover="3"><result status="valid" time="0.40" steps="235"/></proof>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                   <proof prover="3"><result status="valid" time="0.27" steps="233"/></proof>
                   </goal>
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                   <transf name="replace" proved="true" arg1="(power 2 n)" arg2="(power_ 2 n&#39; *&#39; power_ 2 n1)">
                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                     <proof prover="1"><result status="valid" time="1.82"/></proof>
                     </goal>
                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                     <proof prover="3"><result status="valid" time="0.69" steps="237"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
                    <transf name="rewrite" proved="true" arg1="power_to_">
                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.1.0" expl="equality hypothesis" proved="true">
                     <proof prover="3"><result status="valid" time="0.74" steps="237"/></proof>
                     </goal>
                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.1.1" expl="rewrite premises" proved="true">
                     <proof prover="3"><result status="valid" time="0.24" steps="233"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="0.33" steps="233"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
                  <transf name="apply" proved="true" arg1="sum_null_">
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
                      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                      <transf name="apply" proved="true" arg1="sum_null_">
                       <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="scalar_ket_value">
                          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                          <transf name="apply" proved="true" arg1="mult_zero_t">
                           <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                           <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
                            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                            <transf name="apply" proved="true" arg1="mult_zero_t">
                             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                             <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ bv_to_int (int_to_bv e1 n&#39;))))" arg2="(power_ 2 n1)">
                              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                              <transf name="rewrite" proved="true" arg1="get_mod">
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                               <transf name="rewrite" proved="true" arg1="g_ket_value">
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                                <proof prover="1"><result status="valid" time="0.47"/></proof>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                                <proof prover="3"><result status="valid" time="0.25" steps="237"/></proof>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                                <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                                 <transf name="split_vc" proved="true" >
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                                  <proof prover="1"><result status="valid" time="0.50"/></proof>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                                  <proof prover="1"><result status="valid" time="0.56"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                                 <proof prover="3"><result status="valid" time="0.25" steps="237"/></proof>
                                 </goal>
                                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.2" expl="rewrite premises" proved="true">
                                 <transf name="split_vc" proved="true" >
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.2.0" expl="rewrite premises" proved="true">
                                  <proof prover="1"><result status="valid" time="0.50"/></proof>
                                  </goal>
                                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.2.1" expl="rewrite premises" proved="true">
                                  <proof prover="1"><result status="valid" time="0.50"/></proof>
                                  </goal>
                                 </transf>
                                 </goal>
                                </transf>
                                </goal>
                                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                                <proof prover="2"><result status="valid" time="0.94"/></proof>
                                </goal>
                               </transf>
                               </goal>
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                               <proof prover="3"><result status="valid" time="0.69" steps="241"/></proof>
                               </goal>
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                               <proof prover="3"><result status="valid" time="0.69" steps="240"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                              <proof prover="1"><result status="valid" time="0.38"/></proof>
                              </goal>
                             </transf>
                             </goal>
                            </transf>
                            </goal>
                            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                            <proof prover="3"><result status="valid" time="0.71" steps="241"/></proof>
                            </goal>
                            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                            <proof prover="3"><result status="valid" time="0.77" steps="241"/></proof>
                            </goal>
                            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
                            <transf name="replace" proved="true" arg1="(rows (ket n1 (g&#39; @ bv_to_int (int_to_bv e1 n&#39;))))" arg2="(power_ 2 n1)">
                             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
                             <transf name="replace" proved="true" arg1="(rows (ket n&#39; (bv_to_int e)))" arg2="(power_ 2 n&#39;)">
                              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
                              <transf name="split_vc" proved="true" >
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="rewrite premises" proved="true">
                               <proof prover="1"><result status="valid" time="1.55"/></proof>
                               </goal>
                               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
                               <proof prover="3"><result status="valid" time="0.84" steps="241"/></proof>
                               </goal>
                              </transf>
                              </goal>
                              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.0.1" expl="equality hypothesis" proved="true">
                              <proof prover="2"><result status="valid" time="1.46"/></proof>
                              </goal>
                             </transf>
                             </goal>
                             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.1" expl="equality hypothesis" proved="true">
                             <proof prover="1"><result status="valid" time="0.51"/></proof>
                             </goal>
                            </transf>
                            </goal>
                           </transf>
                           </goal>
                          </transf>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                      <proof prover="3"><result status="valid" time="0.26" steps="235"/></proof>
                      </goal>
                      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                      <transf name="replace" proved="true" arg1="(power 2 n)" arg2="(power_ 2 n&#39; *&#39; power_ 2 n1)">
                       <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                       <transf name="split_vc" proved="true" >
                        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                        <proof prover="1"><result status="valid" time="1.33"/></proof>
                        </goal>
                        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.74" steps="239"/></proof>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
                       <transf name="rewrite" proved="true" arg1="power_to_">
                        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.1.0" expl="equality hypothesis" proved="true">
                        <proof prover="3"><result status="valid" time="0.75" steps="239"/></proof>
                        </goal>
                        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.1.1" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.25" steps="235"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                 <proof prover="3"><result status="valid" time="0.25" steps="233"/></proof>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="(power 2 n)" arg2="(power_ 2 n&#39; *&#39; power_ 2 n1)">
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.0" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.0.0" expl="rewrite premises" proved="true">
                   <proof prover="1"><result status="valid" time="1.28"/></proof>
                   </goal>
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.0.1" expl="rewrite premises" proved="true">
                   <proof prover="3"><result status="valid" time="0.74" steps="237"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1" expl="equality hypothesis" proved="true">
                  <transf name="rewrite" proved="true" arg1="power_to_">
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.0" expl="equality hypothesis" proved="true">
                   <proof prover="3"><result status="valid" time="0.71" steps="237"/></proof>
                   </goal>
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.1.1" expl="rewrite premises" proved="true">
                   <proof prover="3"><result status="valid" time="0.25" steps="233"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="apply" proved="true" arg1="set_equal">
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="set_map_mem">
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="instantiate" proved="true" arg1="H51" arg2="e">
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="destruct" proved="true" arg1="Hinst">
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
                   <transf name="assert" proved="true" arg1="(mem e (to_fset 0 (power_ 2 n&#39;)))">
                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                    <proof prover="3"><result status="valid" time="0.72" steps="239"/></proof>
                    </goal>
                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.1" expl="destruct premise" proved="true">
                    <proof prover="3"><result status="valid" time="0.71" steps="240"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                   <transf name="destruct" proved="true" arg1="Hinst">
                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.0" expl="destruct premise" proved="true">
                    <proof prover="3"><result status="valid" time="0.70" steps="239"/></proof>
                    </goal>
                    <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
                    <proof prover="1"><result status="valid" time="1.33"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="in_my_filter">
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                 <transf name="instantiate" proved="true" arg1="map_antec" arg2="g,(to_fset 0 k),e">
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.72"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                  <transf name="instantiate" proved="true" arg1="map_antec" arg2="g,(to_fset 0 k),e">
                   <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.0.1.1.0.1.0.0" expl="apply premises" proved="true">
                   <proof prover="3"><result status="valid" time="0.74" steps="245"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="(power 2 n)" arg2="(power_ 2 n1 *&#39; power_ 2 n&#39;)">
              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.14"/></proof>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <transf name="assert" proved="true" arg1="((y *&#39; power_ 2 n1) &lt;=&#39; (power_ 2 n1 *&#39; (power_ 2 n&#39; -&#39;&#39;1)))">
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
                <transf name="assert" proved="true" arg1="(forall a b c . 0&lt;=&#39;a -&gt;0&lt;=&#39;b -&gt;0&lt;=&#39;c -&gt; a &lt;=&#39; b -&gt; a*&#39;c&lt;=&#39; c*&#39;b )">
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
                 <transf name="split_vc" proved="true" >
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
                  <proof prover="1"><result status="valid" time="0.27"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.0.1" expl="asserted formula" proved="true">
                 <transf name="apply" proved="true" arg1="h1">
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.26" steps="233"/></proof>
                  </goal>
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.0.1.1" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.25" steps="233"/></proof>
                  </goal>
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.0.1.2" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.74" steps="237"/></proof>
                  </goal>
                  <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.0.1.3" expl="apply premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.28" steps="233"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="1.22"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="power_to_">
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
               <proof prover="3"><result status="valid" time="0.69" steps="237"/></proof>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.26" steps="233"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="0.38" steps="233"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.90" steps="237"/></proof>
            </goal>
            <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="(power_ 2 n)" arg2="(power_ 2 n1 *&#39; power_ 2 n&#39;)">
             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0" expl="rewrite premises" proved="true">
             <transf name="assert" proved="true" arg1="((y *&#39; power_ 2 n1) &lt;=&#39; (power_ 2 n1 *&#39; (power_ 2 n&#39; -&#39;&#39;1)))">
              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.0" expl="asserted formula" proved="true">
              <transf name="assert" proved="true" arg1="(forall a b c . 0&lt;=&#39;a -&gt;0&lt;=&#39;b -&gt;0&lt;=&#39;c -&gt; a &lt;=&#39; b -&gt; a*&#39;c&lt;=&#39; c*&#39;b )">
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.0.0" expl="asserted formula" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.0.0.0" expl="asserted formula" proved="true">
                <proof prover="1"><result status="valid" time="0.26"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.0.1" expl="asserted formula" proved="true">
               <transf name="apply" proved="true" arg1="h1">
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="0.25" steps="233"/></proof>
                </goal>
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.0.1.1" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="0.26" steps="233"/></proof>
                </goal>
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.0.1.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="0.70" steps="237"/></proof>
                </goal>
                <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.0.1.3" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="0.26" steps="233"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.1.0" proved="true">
               <proof prover="1"><result status="valid" time="17.23"/></proof>
               </goal>
               <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.0.1.1" proved="true">
               <proof prover="2"><result status="valid" time="1.94"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.0.0.0.2.1" expl="equality hypothesis" proved="true">
             <proof prover="3"><result status="valid" time="0.66" steps="237"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.27" steps="233"/></proof>
         </goal>
         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.24" steps="233"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.68" steps="237"/></proof>
      </goal>
      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(power_ 2 n)" arg2="(power_ 2 n1 *&#39; power_ 2 n&#39;)">
       <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0" expl="rewrite premises" proved="true">
       <transf name="assert" proved="true" arg1="((y *&#39; power_ 2 n1) &lt;=&#39; (power_ 2 n1 *&#39; (power_ 2 n&#39; -&#39;&#39;1)))">
        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.0" expl="asserted formula" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b c . 0&lt;=&#39;a -&gt;0&lt;=&#39;b -&gt;0&lt;=&#39;c -&gt; a &lt;=&#39; b -&gt; a*&#39;c&lt;=&#39; c*&#39;b )">
         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.0.0" expl="asserted formula" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.0.0.0" expl="asserted formula" proved="true">
          <proof prover="1"><result status="valid" time="0.25"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.0.1" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="h1">
          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.26" steps="233"/></proof>
          </goal>
          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.26" steps="233"/></proof>
          </goal>
          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.0.1.2" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.68" steps="237"/></proof>
          </goal>
          <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.0.1.3" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.27" steps="233"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.1.0" proved="true">
         <proof prover="1"><result status="valid" time="16.38"/></proof>
         </goal>
         <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.0.1.1" proved="true">
         <proof prover="2"><result status="valid" time="1.05"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.2.1" expl="equality hypothesis" proved="true">
       <proof prover="3"><result status="valid" time="0.71" steps="237"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC proba_measure_from_scal_sum_sum_fun.17.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.25" steps="233"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_from_scal_ind_sum" expl="VC for proba_measure_from_scal_ind_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_from_scal_ind_sum.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H1">
   <goal name="VC proba_measure_from_scal_ind_sum.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="proba_measure_scal">
    <goal name="VC proba_measure_from_scal_ind_sum.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.26" steps="173"/></proof>
     </goal>
     <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="proba_measure_def">
      <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="cpower_eq">
       <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="modulus_itself">
        <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_sum_l_to_fset">
         <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
          <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
           <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="sum_eq">
            <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
               <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="compute_specified" proved="true" >
                <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="instantiate" proved="true" arg1="sum_null_but_maybe_one_elt" arg2="(fun (e:bitvec) -&gt;
    get_ket (((f @ bv_to_int (int_to_bv x n)) @ bv_to_int e) *.. bv_to_ket e)
    i),(n_bvs n),(int_to_bv i n)">
                 <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="Hinst">
                  <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="compute_specified" proved="true" >
                   <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="scalar_ket_value">
                    <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="mult_one_t">
                     <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="2.01"/></proof>
                     </goal>
                     <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="0"><result status="valid" time="0.69"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.48" steps="177"/></proof>
                  </goal>
                  <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
                  <transf name="split_vc" proved="true" >
                   <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="scalar_ket_value">
                     <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
                     <proof prover="2"><result status="valid" time="6.11"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.49" steps="177"/></proof>
               </goal>
               <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="0"><result status="valid" time="0.80"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="0.49" steps="175"/></proof>
           </goal>
           <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.93"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.47" steps="175"/></proof>
         </goal>
         <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.47" steps="175"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.24" steps="173"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.52" steps="175"/></proof>
      </goal>
      <goal name="VC proba_measure_from_scal_ind_sum.0.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.25" steps="173"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_from_scal_ind_sum.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.51" steps="175"/></proof>
    </goal>
    <goal name="VC proba_measure_from_scal_ind_sum.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.38" steps="173"/></proof>
    </goal>
    <goal name="VC proba_measure_from_scal_ind_sum.0.0.3" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.26" steps="173"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC top_proba_measure_from_scal_ind_sum" expl="VC for top_proba_measure_from_scal_ind_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC top_proba_measure_from_scal_ind_sum.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.52" steps="179"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.50" steps="183"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.24" steps="177"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.28" steps="177"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.25" steps="177"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC top_proba_measure_from_scal_ind_sum.5.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H4">
    <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq">
     <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.52" steps="179"/></proof>
      </goal>
      <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.26" steps="177"/></proof>
      </goal>
      <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.51" steps="181"/></proof>
         </goal>
         <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.2.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.25" steps="179"/></proof>
         </goal>
         <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.2.0.0.2" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC top_proba_measure_from_scal_ind_sum.5.0.0.0.2.0.0.2.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.89"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.35" steps="179"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="179"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.23" steps="179"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.70"/></proof>
  </goal>
  <goal name="VC top_proba_measure_from_scal_ind_sum.10" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC top_proba_measure_from_scal_ind_sum.10.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="discard_def">
    <goal name="VC top_proba_measure_from_scal_ind_sum.10.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="VC top_proba_measure_from_scal_ind_sum.10.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC top_proba_measure_from_scal_ind_sum.10.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.25" steps="187"/></proof>
    </goal>
    <goal name="VC top_proba_measure_from_scal_ind_sum.10.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.61" steps="189"/></proof>
    </goal>
    <goal name="VC top_proba_measure_from_scal_ind_sum.10.0.3" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.26" steps="187"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_cond_eq" expl="VC for proba_measure_cond_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_cond_eq.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="proba_measure_cond_def">
   <goal name="VC proba_measure_cond_eq.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="proba_measure_cond_def">
    <goal name="VC proba_measure_cond_eq.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(my_filter (to_fset 0 (power_ 2 n)) p)" arg2="(my_filter (to_fset 0 (power_ 2 n)) p&#39;)">
     <goal name="VC proba_measure_cond_eq.0.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="VC proba_measure_cond_eq.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal">
      <goal name="VC proba_measure_cond_eq.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC proba_measure_cond_eq.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="in_my_filter">
        <goal name="VC proba_measure_cond_eq.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.44" steps="167"/></proof>
        </goal>
        <goal name="VC proba_measure_cond_eq.0.0.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="1.20"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC proba_measure_cond_eq.0.0.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC proba_measure_cond_eq.0.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="in_my_filter">
        <goal name="VC proba_measure_cond_eq.0.0.0.1.1.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.46" steps="167"/></proof>
        </goal>
        <goal name="VC proba_measure_cond_eq.0.0.0.1.1.0.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.96"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_cond_eq.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.24" steps="163"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_cond_eq.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.24" steps="163"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_cond_entails" expl="VC for proba_measure_cond_entails" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_cond_entails.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.25" steps="163"/></proof>
  </goal>
  <goal name="VC proba_measure_cond_entails.1" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(not (fun (i:int) -&gt; (p&#39; @ i) = True /\ not (p @ i) = True) e)">
   <goal name="VC proba_measure_cond_entails.1.0" expl="asserted formula" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC proba_measure_cond_entails.1.0.0" expl="asserted formula" proved="true">
    <proof prover="3"><result status="valid" time="0.49" steps="179"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_cond_entails.1.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.57"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_cond_entails.2" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="( sum
  (union (my_filter (to_fset 0 (power_ 2 n)) p)
   (my_filter (to_fset 0 (power_ 2 n))
    (fun (i:int) -&gt; (p&#39; @ i) = True /\ not (p @ i) = True)))
  (((fun (y0:matrix complex) (y1:int) (y2:int) -&gt;
      proba_measure_extension y0 y1 y2)
    @ x)
   @ n))" arg2="(proba_measure_cond x n p&#39;)" arg3="in" arg4="H">
   <goal name="VC proba_measure_cond_entails.2.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(sum (my_filter (to_fset 0 (power_ 2 n)) p)
     (((fun (y0:matrix complex) (y1:int) (y2:int) -&gt;
         proba_measure_extension y0 y1 y2)
       @ x)
      @ n))" arg2="(proba_measure_cond x n p)" arg3="in" arg4="H">
    <goal name="VC proba_measure_cond_entails.2.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b c. real_ b -&gt; c_zero &lt;=. c -&gt; a = b +. c -&gt; b &lt;=.a)">
     <goal name="VC proba_measure_cond_entails.2.0.0.0" expl="asserted formula" proved="true">
     <proof prover="3"><result status="valid" time="0.58" steps="183"/></proof>
     </goal>
     <goal name="VC proba_measure_cond_entails.2.0.0.1" expl="postcondition" proved="true">
     <transf name="instantiate" proved="true" arg1="h" arg2="(proba_measure_cond x n p&#39;),(proba_measure_cond x n p),(sum
        (my_filter (to_fset 0 (power_ 2 n))
         (fun (i:int) -&gt; (p&#39; @ i) = True /\ not (p @ i) = True))
        (((fun (y0:matrix complex) (y1:int) (y2:int) -&gt;
            proba_measure_extension y0 y1 y2)
          @ x)
         @ n))">
      <goal name="VC proba_measure_cond_entails.2.0.0.1.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="Hinst">
       <goal name="VC proba_measure_cond_entails.2.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.55" steps="177"/></proof>
       </goal>
       <goal name="VC proba_measure_cond_entails.2.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC proba_measure_cond_entails.2.0.0.1.0.1.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="positive_sum">
         <goal name="VC proba_measure_cond_entails.2.0.0.1.0.1.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC proba_measure_cond_entails.2.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC proba_measure_cond_entails.2.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="0.56" steps="180"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC proba_measure_cond_entails.2.0.0.1.0.2" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="H">
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_cond_entails.2.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="0.53" steps="177"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_cond_entails.2.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="proba_measure_cond_def">
    <goal name="VC proba_measure_cond_entails.2.1.0" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="sum_eq_gen">
     <goal name="VC proba_measure_cond_entails.2.1.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="set_equal">
      <goal name="VC proba_measure_cond_entails.2.1.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n)) p))">
        <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="apply" proved="true" arg1="in_my_filter">
         <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.53" steps="181"/></proof>
         </goal>
         <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="H20">
          <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="0.21"/></proof>
          </goal>
          <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.53" steps="181"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1" expl="false case (apply premises)" proved="true">
        <transf name="assert" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n))
    (fun (i:int) -&gt; (p&#39; @ i) = True /\ not (p @ i) = True)))">
         <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(forall a b : (set1 int). forall i. mem i (union a b) -&gt; not (mem i a) -&gt; mem i b)">
          <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
           <proof prover="3"><result status="valid" time="0.58" steps="185"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.0.1" expl="asserted formula" proved="true">
          <transf name="instantiate" proved="true" arg1="h1" arg2="(my_filter (to_fset 0 (power_ 2 n)) p),(my_filter (to_fset 0 (power_ 2 n))
    (fun (i:int) -&gt; (p&#39; @ i) = True /\ not (p @ i) = True)),e">
           <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="Hinst">
            <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="H">
            </transf>
            </goal>
            <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.0.1.0.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.27" steps="177"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
         <transf name="apply" proved="true" arg1="in_my_filter">
          <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.56" steps="183"/></proof>
          </goal>
          <goal name="VC proba_measure_cond_entails.2.1.0.0.0.0.1.1.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.55" steps="183"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC proba_measure_cond_entails.2.1.0.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC proba_measure_cond_entails.2.1.0.0.1.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(p e)">
        <goal name="VC proba_measure_cond_entails.2.1.0.0.1.0.0" expl="true case (apply premises)" proved="true">
        <transf name="assert" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n)) p))">
         <goal name="VC proba_measure_cond_entails.2.1.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <proof prover="3"><result status="valid" time="0.54" steps="181"/></proof>
         </goal>
         <goal name="VC proba_measure_cond_entails.2.1.0.0.1.0.0.1" expl="true case (apply premises)" proved="true">
         <proof prover="3"><result status="valid" time="0.53" steps="183"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC proba_measure_cond_entails.2.1.0.0.1.0.1" expl="false case (apply premises)" proved="true">
        <transf name="assert" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n))
    (fun (i:int) -&gt; (p&#39; @ i) = True /\ not (p @ i) = True)))">
         <goal name="VC proba_measure_cond_entails.2.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
         <proof prover="1"><result status="valid" time="0.25"/></proof>
         </goal>
         <goal name="VC proba_measure_cond_entails.2.1.0.0.1.0.1.1" expl="false case (apply premises)" proved="true">
         <proof prover="1"><result status="valid" time="0.59"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC proba_measure_cond_entails.2.1.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC proba_measure_cond_entails.2.1.0.1.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.23" steps="175"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_cond_entails.2.1.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.26" steps="173"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_cond_add" expl="VC for proba_measure_cond_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_cond_add.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.28" steps="169"/></proof>
  </goal>
  <goal name="VC proba_measure_cond_add.1" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(not (p&#39; e))">
   <goal name="VC proba_measure_cond_add.1.0" expl="asserted formula" proved="true">
   <transf name="apply" proved="true" arg1="H24">
    <goal name="VC proba_measure_cond_add.1.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.52" steps="183"/></proof>
    </goal>
    <goal name="VC proba_measure_cond_add.1.0.1" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.50" steps="183"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_cond_add.1.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.52" steps="185"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_cond_add.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.36" steps="179"/></proof>
  </goal>
  <goal name="VC proba_measure_cond_add.3" expl="precondition" proved="true">
  <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
   <goal name="VC proba_measure_cond_add.3.0" expl="precondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="VC proba_measure_cond_add.3.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="H27">
     <goal name="VC proba_measure_cond_add.3.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.57" steps="190"/></proof>
     </goal>
     <goal name="VC proba_measure_cond_add.3.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.26" steps="185"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_cond_add.3.0.1" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="H26">
     <goal name="VC proba_measure_cond_add.3.0.1.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.57" steps="190"/></proof>
     </goal>
     <goal name="VC proba_measure_cond_add.3.0.1.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.26" steps="185"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_cond_add.4" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="transitive_infeq" arg2="scal2,(proba_measure_cond x n (fun (i:int) -&gt; (p @ i) = True \/ (p&#39; @ i) = True)),(proba_measure_cond x n p2)">
   <goal name="VC proba_measure_cond_add.4.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Hinst">
    <goal name="VC proba_measure_cond_add.4.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(proba_measure_cond x n
      (fun (i:int) -&gt; (p @ i) = True \/ (p&#39; @ i) = True))" arg2="( sum
  (union (my_filter (to_fset 0 (power_ 2 n)) p)
   (my_filter (to_fset 0 (power_ 2 n)) p&#39;))
  (((fun (y0:matrix complex) (y1:int) (y2:int) -&gt;
      proba_measure_extension y0 y1 y2)
    @ x)
   @ n))">
     <goal name="VC proba_measure_cond_add.4.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="H1">
      <goal name="VC proba_measure_cond_add.4.0.0.0.0" expl="apply premises" proved="true">
      <transf name="instantiate" proved="true" arg1="transitive_infeq" arg2="scal2,(scal+.scal&#39;),( (sum (my_filter (to_fset 0 (power_ 2 n)) p)
       (((fun (y0:matrix complex) (y1:int) (y2:int) -&gt;
           proba_measure_extension y0 y1 y2)
         @ x)
        @ n)
       +. sum (my_filter (to_fset 0 (power_ 2 n)) p&#39;)
          (((fun (y0:matrix complex) (y1:int) (y2:int) -&gt;
              proba_measure_extension y0 y1 y2)
            @ x)
           @ n)))">
       <goal name="VC proba_measure_cond_add.4.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="Hinst">
        <goal name="VC proba_measure_cond_add.4.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.23" steps="181"/></proof>
        </goal>
        <goal name="VC proba_measure_cond_add.4.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="compat_order_add_both">
         <goal name="VC proba_measure_cond_add.4.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.17"/></proof>
         </goal>
         <goal name="VC proba_measure_cond_add.4.0.0.0.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.16"/></proof>
         </goal>
         <goal name="VC proba_measure_cond_add.4.0.0.0.0.0.1.2" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.55" steps="187"/></proof>
         </goal>
         <goal name="VC proba_measure_cond_add.4.0.0.0.0.0.1.3" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.37"/></proof>
         </goal>
         <goal name="VC proba_measure_cond_add.4.0.0.0.0.0.1.4" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.55" steps="187"/></proof>
         </goal>
         <goal name="VC proba_measure_cond_add.4.0.0.0.0.0.1.5" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.73"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC proba_measure_cond_add.4.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="rewrite" proved="true" arg1="proba_measure_cond_def">
      <goal name="VC proba_measure_cond_add.4.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="sum_eq_gen">
       <goal name="VC proba_measure_cond_add.4.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="set_equal">
        <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="( p e)">
          <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <transf name="assert" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n)) p))">
           <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="in_my_filter">
            <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.52" steps="190"/></proof>
            </goal>
            <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.35" steps="185"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.0.1" expl="true case (apply premises)" proved="true">
           <proof prover="3"><result status="valid" time="0.75" steps="192"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.1" expl="false case (apply premises)" proved="true">
          <transf name="assert" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n)) p&#39;))">
           <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="apply" proved="true" arg1="in_my_filter">
            <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.57" steps="190"/></proof>
            </goal>
            <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.1.0.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.57" steps="190"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.0.0.1.1" expl="false case (apply premises)" proved="true">
           <proof prover="3"><result status="valid" time="0.68" steps="192"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1.0" expl="apply premises" proved="true">
         <transf name="case" proved="true" arg1="(mem e (my_filter (to_fset 0 (power_ 2 n)) p))">
          <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1.0.0" expl="true case (apply premises)" proved="true">
          <transf name="apply" proved="true" arg1="in_my_filter">
           <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="0.58" steps="190"/></proof>
           </goal>
           <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.64" steps="192"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1.0.1" expl="false case (apply premises)" proved="true">
          <transf name="apply" proved="true" arg1="in_my_filter">
           <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="0.59" steps="190"/></proof>
           </goal>
           <goal name="VC proba_measure_cond_add.4.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.45"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC proba_measure_cond_add.4.0.0.1.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC proba_measure_cond_add.4.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.24" steps="181"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_cond_add.4.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="H">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_cond_const" expl="VC for proba_measure_cond_const" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_cond_const.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.32" steps="165"/></proof>
  </goal>
  <goal name="VC proba_measure_cond_const.1" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC proba_measure_cond_const.1.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(proba_measure_extension x n e)" arg2="(proba_measure x e n)">
    <goal name="VC proba_measure_cond_const.1.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="1.38"/></proof>
    </goal>
    <goal name="VC proba_measure_cond_const.1.0.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="1.15"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_cond_const.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="175"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_set_of_ind_pre" expl="VC for proba_measure_set_of_ind_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_set_of_ind_pre.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="proba_measure_cond_def">
   <goal name="VC proba_measure_set_of_ind_pre.0.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC proba_measure_set_of_ind_pre.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(my_filter (to_fset 0 (power_ 2 n)) p)" arg2="(map f s)">
     <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="sum_scal_rev">
      <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="map_sum_eq">
       <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="sum_inf">
         <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="4.82"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.78" steps="167"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="0.99"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC proba_measure_set_of_ind_pre.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.82"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal">
      <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="set_map_mem">
        <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="H2">
         <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.00"/></proof>
          </goal>
          <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.90"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.68" steps="167"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="map_antec" arg2="f,s,e">
        <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0.0" expl="apply premises" proved="true">
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0.0.0" expl="destruct premise" proved="true">
         <proof prover="3"><result status="valid" time="0.44" steps="165"/></proof>
         </goal>
         <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
         <transf name="destruct" proved="true" arg1="Hinst">
          <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0.0.1.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="e" arg2="(f a)">
           <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="in_my_filter">
            <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0.0.1.0.0.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.73" steps="171"/></proof>
            </goal>
            <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0.0.1.0.0.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.59" steps="171"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC proba_measure_set_of_ind_pre.0.0.0.1.1.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <proof prover="3"><result status="valid" time="0.40" steps="169"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_set_of_ind_pre.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.40" steps="163"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_set_of_ind" expl="VC for proba_measure_set_of_ind" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_set_of_ind.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.48" steps="163"/></proof>
  </goal>
  <goal name="VC proba_measure_set_of_ind.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.01" steps="166"/></proof>
  </goal>
  <goal name="VC proba_measure_set_of_ind.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.06" steps="167"/></proof>
  </goal>
  <goal name="VC proba_measure_set_of_ind.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.85" steps="167"/></proof>
  </goal>
  <goal name="VC proba_measure_set_of_ind.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.89"/></proof>
  </goal>
  <goal name="VC proba_measure_set_of_ind.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.94" steps="171"/></proof>
  </goal>
  <goal name="VC proba_measure_set_of_ind.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="165"/></proof>
  </goal>
  <goal name="VC proba_measure_set_of_ind.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.78" steps="173"/></proof>
  </goal>
  <goal name="VC proba_measure_set_of_ind.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="169"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC proba_measure_sum_of_conds" expl="VC for proba_measure_sum_of_conds" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC proba_measure_sum_of_conds.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.88" steps="173"/></proof>
  </goal>
  <goal name="VC proba_measure_sum_of_conds.1" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC proba_measure_sum_of_conds.1.0" expl="variant decrease" proved="true">
   <proof prover="3"><result status="valid" time="0.46" steps="177"/></proof>
   </goal>
   <goal name="VC proba_measure_sum_of_conds.1.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="1.27"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_sum_of_conds.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.42" steps="177"/></proof>
  </goal>
  <goal name="VC proba_measure_sum_of_conds.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.93" steps="182"/></proof>
  </goal>
  <goal name="VC proba_measure_sum_of_conds.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.97" steps="190"/></proof>
  </goal>
  <goal name="VC proba_measure_sum_of_conds.5" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="compat_order_mult_left">
   <goal name="VC proba_measure_sum_of_conds.5.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="compat_i_to_c_infeq">
    <goal name="VC proba_measure_sum_of_conds.5.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.28"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_sum_of_conds.5.1" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="0.38" steps="177"/></proof>
   </goal>
   <goal name="VC proba_measure_sum_of_conds.5.2" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="1.01" steps="180"/></proof>
   </goal>
   <goal name="VC proba_measure_sum_of_conds.5.3" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="0.25" steps="177"/></proof>
   </goal>
   <goal name="VC proba_measure_sum_of_conds.5.4" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="0.26" steps="177"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC proba_measure_sum_of_conds.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.26" steps="179"/></proof>
  </goal>
  <goal name="VC proba_measure_sum_of_conds.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.44" steps="179"/></proof>
  </goal>
  <goal name="VC proba_measure_sum_of_conds.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="proba_measure_cond_def">
   <goal name="VC proba_measure_sum_of_conds.8.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="VC proba_measure_sum_of_conds.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="sum_empty">
     <goal name="VC proba_measure_sum_of_conds.8.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="0.91"/></proof>
     </goal>
     <goal name="VC proba_measure_sum_of_conds.8.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC proba_measure_sum_of_conds.8.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="set_empty">
       <goal name="VC proba_measure_sum_of_conds.8.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC proba_measure_sum_of_conds.8.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="not_in_my_filter_filter">
         <goal name="VC proba_measure_sum_of_conds.8.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC proba_measure_sum_of_conds.8.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.88" steps="177"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC proba_measure_sum_of_conds.8.0.1" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="proba_measure_cond_add" arg2="(fun i -&gt; (exists k. mem k (remove (choose s) s) &amp;&amp; p k i)),(fun i -&gt;  p (choose s) i),(fun i -&gt; (exists k. mem k s &amp;&amp; p k i)),x,n,(scal *. (i_to_c (cardinal (remove (choose s)s)))),scal,(scal *. (i_to_c (cardinal s)))
">
     <goal name="VC proba_measure_sum_of_conds.8.0.1.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(sum
      (my_filter (to_fset 0 (power_ 2 n))
       (fun (i:int) -&gt; exists k:int. mem k s &amp;&amp; ((p @ k) @ i) = True))
      (fun (y2:int) -&gt; proba_measure_extension x n y2))" arg2="(proba_measure_cond x n
      (fun (i:int) -&gt; exists k:int. mem k s &amp;&amp; ((p @ k) @ i) = True)
)">
       <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0" expl="postcondition" proved="true">
       <transf name="instantiate" proved="true" arg1="transitive_infeq" arg2="scal&#39;,(scal *. i_to_c (cardinal s)),( proba_measure_cond x n
      (fun (i:int) -&gt; exists k:int. mem k s &amp;&amp; ((p @ k) @ i) = True))">
        <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="Hinst">
         <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.44" steps="175"/></proof>
         </goal>
         <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="Hinst1">
          <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.25" steps="175"/></proof>
          </goal>
          <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
             <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
             <transf name="destruct" proved="true" arg1="H">
              <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="instantiate" proved="true" arg1="H6" arg2="k,(choose s),i">
               <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="Hinst">
                <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="0.78" steps="186"/></proof>
                </goal>
                <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
                <proof prover="0"><result status="valid" time="1.19"/></proof>
                </goal>
                <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0.0.0.0.2" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="0.24" steps="181"/></proof>
                </goal>
                <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0.0.0.0.3" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="0.59" steps="186"/></proof>
                </goal>
                <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.1.0.0.0.0.0.4" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="0.50" steps="181"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.2" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.2.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.2.0.0" expl="apply premises" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
             <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.2.0.0.0" expl="apply premises" proved="true">
             <transf name="destruct" proved="true" arg1="H">
              <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.2.0.0.0.0" expl="apply premises" proved="true">
              <transf name="exists" proved="true" arg1="k">
               <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.2.0.0.0.0.0" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.2.0.0.0.0.0.0" proved="true">
                <proof prover="3"><result status="valid" time="0.77" steps="186"/></proof>
                </goal>
                <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.2.0.0.0.0.0.1" proved="true">
                <proof prover="3"><result status="valid" time="0.44" steps="183"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.3" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.3.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.3.0.0" expl="apply premises" proved="true">
            <transf name="exists" proved="true" arg1="(choose s)">
             <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.3.0.0.0" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.3.0.0.0.0" proved="true">
              <proof prover="0"><result status="valid" time="1.14"/></proof>
              </goal>
              <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.3.0.0.0.1" proved="true">
              <proof prover="3"><result status="valid" time="0.48" steps="181"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.4" expl="apply premises" proved="true">
          <transf name="eliminate_let" proved="true" >
           <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.4.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.4.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(cardinal (remove (choose s) s))" arg2="(cardinal s-&#39;&#39;1)">
             <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.4.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="H">
             </transf>
             </goal>
             <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.4.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="0"><result status="valid" time="1.18"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.5" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(fun (i:int) -&gt; (p @ choose s) @ i)" arg2="((p @ choose s) )">
           <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.5.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="H5">
            <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.5.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.39"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.5.1" expl="equality hypothesis" proved="true">
           <proof prover="3"><result status="valid" time="0.39" steps="175"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.6" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(cardinal (remove (choose s) s))" arg2="(cardinal s-&#39;&#39;1)">
           <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.6.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(i_to_c (cardinal s))" arg2="(i_to_c (cardinal s -&#39;&#39; 1) +. c_one)">
            <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.6.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="mult_distr_add_r">
             <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.6.0.0.0" expl="apply premises" proved="true">
             <proof prover="3"><result status="valid" time="1.20" steps="180"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.6.0.1" expl="equality hypothesis" proved="true">
            <proof prover="3"><result status="valid" time="0.79" steps="180"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.0.0.1.6.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="1.22"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="proba_measure_cond_def">
        <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC proba_measure_sum_of_conds.8.0.1.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="0.22" steps="175"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC proba_measure_sum_of_conds.8.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.24" steps="169"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

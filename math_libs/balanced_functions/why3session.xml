<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.4.1" alternative="noBV" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.4.1" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="balanced_functions.mlw"/>
<theory name="Balanced" proved="true">
 <goal name="VC get_balanced_bin_cardeq" expl="VC for get_balanced_bin_cardeq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_balanced_bin_cardeq.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC get_balanced_bin_cardeq.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="balanced_bin_def" arg2="in" arg3="H">
    <goal name="VC get_balanced_bin_cardeq.0.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC get_balanced_bin_cardeq.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H">
      <goal name="VC get_balanced_bin_cardeq.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H1">
       <goal name="VC get_balanced_bin_cardeq.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="1"><result status="valid" time="0.18" steps="164"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.35"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_balanced_bin_zero" expl="VC for get_balanced_bin_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_balanced_bin_zero.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC get_balanced_bin_zero.0.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC get_balanced_bin_zero.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="balanced_bin_def" arg2="in" arg3="H">
     <goal name="VC get_balanced_bin_zero.0.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC get_balanced_bin_zero.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H1">
       <goal name="VC get_balanced_bin_zero.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="1"><result status="valid" time="0.20" steps="164"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.34"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_balanced_bin_one" expl="VC for get_balanced_bin_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_balanced_bin_one.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC get_balanced_bin_one.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC get_balanced_bin_one.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="balanced_bin_def" arg2="in" arg3="H">
     <goal name="VC get_balanced_bin_one.0.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC get_balanced_bin_one.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="H">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_balanced_bin" expl="VC for get_balanced_bin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_balanced_bin.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC get_balanced_bin.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC get_balanced_bin.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="balanced_bin_def" arg2="in" arg3="H">
     <goal name="VC get_balanced_bin.0.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC get_balanced_bin.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="H1">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC get_balanced_bin.1" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC get_balanced_bin.1.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC get_balanced_bin.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="balanced_bin_def" arg2="in" arg3="H1">
     <goal name="VC get_balanced_bin.1.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC get_balanced_bin.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="H1">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC set_balanced_bin" expl="VC for set_balanced_bin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC set_balanced_bin.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC set_balanced_bin.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="balanced_bin_def">
    <goal name="VC set_balanced_bin.0.0.0" expl="VC for set_balanced_bin" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC set_balanced_bin.0.0.0.0" expl="VC for set_balanced_bin" proved="true">
     <proof prover="1"><result status="valid" time="0.32" steps="164"/></proof>
     </goal>
     <goal name="VC set_balanced_bin.0.0.0.1" expl="VC for set_balanced_bin" proved="true">
     <proof prover="1"><result status="valid" time="0.45" steps="168"/></proof>
     </goal>
     <goal name="VC set_balanced_bin.0.0.0.2" expl="VC for set_balanced_bin" proved="true">
     <proof prover="1"><result status="valid" time="0.46" steps="168"/></proof>
     </goal>
     <goal name="VC set_balanced_bin.0.0.0.3" expl="VC for set_balanced_bin" proved="true">
     <transf name="rewrite" proved="true" arg1="H1">
      <goal name="VC set_balanced_bin.0.0.0.3.0" expl="VC for set_balanced_bin" proved="true">
      <transf name="apply" proved="true" arg1="H">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC set_balanced_bin.0.0.0.4" expl="VC for set_balanced_bin" proved="true">
     <transf name="apply" proved="true" arg1="H">
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_constant_bin" expl="VC for get_constant_bin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_constant_bin.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC get_constant_bin.0.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC get_constant_bin.0.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="2.97"/></proof>
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    <proof prover="3" obsolete="true"><result status="valid" time="4.32"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC set_constant_bin" expl="VC for set_constant_bin" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC set_constant_bin.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC set_constant_bin.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="constant_bin_def">
    <goal name="VC set_constant_bin.0.0.0" expl="VC for set_constant_bin" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC set_constant_bin.0.0.0.0" expl="VC for set_constant_bin" proved="true">
     <proof prover="1"><result status="valid" time="0.22" steps="160"/></proof>
     </goal>
     <goal name="VC set_constant_bin.0.0.0.1" expl="VC for set_constant_bin" proved="true">
     <proof prover="1"><result status="valid" time="0.42" steps="164"/></proof>
     </goal>
     <goal name="VC set_constant_bin.0.0.0.2" expl="VC for set_constant_bin" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="5.64"/></proof>
     <proof prover="1"><result status="valid" time="0.46" steps="164"/></proof>
     <proof prover="3" obsolete="true"><result status="valid" time="1.00"/></proof>
     </goal>
     <goal name="VC set_constant_bin.0.0.0.3" expl="VC for set_constant_bin" proved="true">
     <proof prover="1"><result status="valid" time="0.45" steps="166"/></proof>
     <proof prover="3" obsolete="true"><result status="valid" time="1.02"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC exclu_constant_balanced" expl="VC for exclu_constant_balanced" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC exclu_constant_balanced.0" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="(my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 0))" arg2="(n_bvs n)">
   <goal name="VC exclu_constant_balanced.0.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.63"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   </goal>
   <goal name="VC exclu_constant_balanced.0.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="set_equal">
    <goal name="VC exclu_constant_balanced.0.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC exclu_constant_balanced.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.57"/></proof>
     <proof prover="1"><result status="valid" time="0.45" steps="161"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC exclu_constant_balanced.0.1.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC exclu_constant_balanced.0.1.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="in_my_filter">
      <goal name="VC exclu_constant_balanced.0.1.1.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.19" steps="159"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.34"/></proof>
      </goal>
      <goal name="VC exclu_constant_balanced.0.1.1.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC exclu_constant_balanced.0.1.1.0.1.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="timeout" time="5.00"/></proof>
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="3"><result status="valid" time="4.39"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC exclu_constant_balanced.1" expl="assertion" proved="true">
  <transf name="replace" proved="true" arg1="(my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 1))" arg2="(n_bvs n)">
   <goal name="VC exclu_constant_balanced.1.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.52"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.71"/></proof>
   </goal>
   <goal name="VC exclu_constant_balanced.1.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="set_equal">
    <goal name="VC exclu_constant_balanced.1.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC exclu_constant_balanced.1.1.0.0" expl="apply premises" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.56"/></proof>
     <proof prover="1"><result status="valid" time="0.52" steps="162"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC exclu_constant_balanced.1.1.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC exclu_constant_balanced.1.1.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="in_my_filter">
      <goal name="VC exclu_constant_balanced.1.1.1.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.21" steps="159"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.35"/></proof>
      </goal>
      <goal name="VC exclu_constant_balanced.1.1.1.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC exclu_constant_balanced.1.1.1.0.1.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="timeout" time="5.00"/></proof>
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="3"><result status="valid" time="4.29"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC exclu_constant_balanced.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(balanced_bin f n)">
   <goal name="VC exclu_constant_balanced.2.0" expl="true case (postcondition)" proved="true">
   <transf name="assert" proved="true" arg1="( (cardinal (my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 0)) = power_ 2 (n-1)))">
    <goal name="VC exclu_constant_balanced.2.0.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="( (cardinal (my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 1)) = power_ 2 (n-1)))">
     <goal name="VC exclu_constant_balanced.2.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC exclu_constant_balanced.2.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="get_balanced_bin">
       <goal name="VC exclu_constant_balanced.2.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.22" steps="157"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.32"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC exclu_constant_balanced.2.0.0.1" expl="asserted formula" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC exclu_constant_balanced.2.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="get_balanced_bin1">
       <goal name="VC exclu_constant_balanced.2.0.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.38" steps="159"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.32"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    <transf name="split_all_full" proved="true" >
     <goal name="VC exclu_constant_balanced.2.0.0.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="get_balanced_bin1">
      <goal name="VC exclu_constant_balanced.2.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.21" steps="157"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.31"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC exclu_constant_balanced.2.0.1" expl="true case (postcondition)" proved="true">
    <transf name="assert" proved="true" arg1="( (cardinal (my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 1)) = power_ 2 (n-1)))">
     <goal name="VC exclu_constant_balanced.2.0.1.0" expl="asserted formula" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC exclu_constant_balanced.2.0.1.0.0" expl="asserted formula" proved="true">
      <transf name="apply" proved="true" arg1="get_balanced_bin">
       <goal name="VC exclu_constant_balanced.2.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.29" steps="159"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.39"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC exclu_constant_balanced.2.0.1.1" expl="true case (postcondition)" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC exclu_constant_balanced.2.0.1.1.0" expl="true case (postcondition)" proved="true">
      <transf name="case" proved="true" arg1="((f @ choose (n_bvs n)) = 1 )">
       <goal name="VC exclu_constant_balanced.2.0.1.1.0.0" expl="true case (postcondition)" proved="true">
       <transf name="assert" proved="true" arg1="(cardinal (my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 1))
  = power_ 2 n)">
        <goal name="VC exclu_constant_balanced.2.0.1.1.0.0.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="H1">
         <goal name="VC exclu_constant_balanced.2.0.1.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.25" steps="165"/></proof>
         <proof prover="3" obsolete="true"><result status="valid" time="0.39"/></proof>
         </goal>
         <goal name="VC exclu_constant_balanced.2.0.1.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.31" steps="165"/></proof>
         <proof prover="3" obsolete="true"><result status="valid" time="0.38"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC exclu_constant_balanced.2.0.1.1.0.0.1" expl="true case (postcondition)" proved="true">
        <transf name="assert" proved="true" arg1="(power_ 2 (n-1) = power_ 2 n)">
         <goal name="VC exclu_constant_balanced.2.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="h1" arg2="in" arg3="h3">
          <goal name="VC exclu_constant_balanced.2.0.1.1.0.0.1.0.0" expl="asserted formula" proved="true">
          <proof prover="1"><result status="valid" time="0.34" steps="167"/></proof>
          <proof prover="3" obsolete="true"><result status="valid" time="0.29"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC exclu_constant_balanced.2.0.1.1.0.0.1.1" expl="true case (postcondition)" proved="true">
         <proof prover="0"><result status="timeout" time="5.00"/></proof>
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="3"><result status="valid" time="0.75"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC exclu_constant_balanced.2.0.1.1.0.1" expl="false case (true case. postcondition)" proved="true">
       <transf name="assert" proved="true" arg1="(cardinal (my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 0))
  = power_ 2 n)">
        <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.0" expl="asserted formula" proved="true">
        <transf name="apply" proved="true" arg1="H2">
         <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.36" steps="163"/></proof>
         <proof prover="3" obsolete="true"><result status="valid" time="0.35"/></proof>
         </goal>
         <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.0.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="timeout" time="5.00"/></proof>
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="3"><result status="valid" time="4.69"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1" expl="false case (true case. postcondition)" proved="true">
        <transf name="assert" proved="true" arg1="(power_ 2 (n-1) = power_ 2 n)">
         <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.0" expl="asserted formula" proved="true">
         <transf name="assert" proved="true" arg1="(cardinal (my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 0))
  = power_ 2 n)">
          <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.0.0" expl="asserted formula" proved="true">
          <transf name="apply" proved="true" arg1="H2">
           <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="0.27" steps="165"/></proof>
           <proof prover="3" obsolete="true"><result status="valid" time="0.36"/></proof>
           </goal>
           <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.0.0.1" expl="apply premises" proved="true">
           <transf name="assert" proved="true" arg1="(0&lt;=  (f @ choose (n_bvs n))  &lt;2)">
            <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="0"><result status="timeout" time="5.00"/></proof>
            <proof prover="1"><result status="timeout" time="5.00"/></proof>
            <proof prover="3"><result status="valid" time="5.08"/></proof>
            </goal>
            <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.0.0.1.1" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="0.34" steps="169"/></proof>
            <proof prover="3" obsolete="true"><result status="valid" time="0.58"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.0.1" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="h1" arg2="in" arg3="h5">
           <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="1"><result status="valid" time="0.27" steps="167"/></proof>
           <proof prover="3" obsolete="true"><result status="valid" time="0.33"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC exclu_constant_balanced.2.0.1.1.0.1.1.1" expl="false case (true case. postcondition)" proved="true">
         <proof prover="0"><result status="timeout" time="5.00"/></proof>
         <proof prover="1"><result status="timeout" time="5.00"/></proof>
         <proof prover="3"><result status="valid" time="0.74"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC exclu_constant_balanced.2.1" expl="false case (postcondition)" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.79"/></proof>
   <proof prover="1"><result status="valid" time="0.24" steps="157"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.31"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC exclu_constant_balanced.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="157"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC balanced_sum" expl="VC for balanced_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC balanced_sum.0" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.53"/></proof>
  <proof prover="1"><result status="valid" time="0.23" steps="157"/></proof>
  </goal>
  <goal name="VC balanced_sum.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.64"/></proof>
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC balanced_sum.2" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.56"/></proof>
  <proof prover="1"><result status="valid" time="0.32" steps="161"/></proof>
  </goal>
  <goal name="VC balanced_sum.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.61"/></proof>
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC balanced_sum.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="163"/></proof>
  </goal>
  <goal name="VC balanced_sum.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC balanced_sum.5.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.63"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC balanced_sum.6" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.62"/></proof>
  <proof prover="1"><result status="valid" time="0.30" steps="169"/></proof>
  </goal>
  <goal name="VC balanced_sum.7" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC balanced_sum.7.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(f e)" arg2="1">
    <goal name="VC balanced_sum.7.0.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.91" steps="178"/></proof>
    <proof prover="3" obsolete="true"><result status="valid" time="0.77"/></proof>
    </goal>
    <goal name="VC balanced_sum.7.0.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="0.64"/></proof>
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC balanced_sum.8" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.62"/></proof>
  <proof prover="1"><result status="valid" time="0.34" steps="175"/></proof>
  </goal>
  <goal name="VC balanced_sum.9" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.85"/></proof>
  <proof prover="1"><result status="valid" time="0.33" steps="179"/></proof>
  </goal>
  <goal name="VC balanced_sum.10" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="my_filter_inter">
   <goal name="VC balanced_sum.10.0" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="0.74"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC balanced_sum.11" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="get_balanced_bin_cardeq">
   <goal name="VC balanced_sum.11.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.21" steps="185"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.53"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC balanced_sum.12" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(union (my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 0))
   (my_filter (n_bvs n) (fun (x:bitvec) -&gt; (f @ x) = 1)))" arg2="(n_bvs n)" arg3="in" arg4="H1">
   <goal name="VC balanced_sum.12.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="VC balanced_sum.12.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H18">
     <goal name="VC balanced_sum.12.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H27">
      <goal name="VC balanced_sum.12.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="get_balanced_bin_zero">
       <goal name="VC balanced_sum.12.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="get_balanced_bin_one">
        <goal name="VC balanced_sum.12.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="mult_distr_add_r_rev">
         <goal name="VC balanced_sum.12.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="1"><result status="valid" time="1.61" steps="190"/></proof>
         <proof prover="2" obsolete="true"><result status="valid" time="0.72"/></proof>
         <proof prover="3" obsolete="true"><result status="valid" time="0.64"/></proof>
         <proof prover="4" obsolete="true"><result status="valid" time="0.20"/></proof>
         <proof prover="5" obsolete="true"><result status="valid" time="0.76"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC balanced_sum.12.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0" obsolete="true"><result status="valid" time="0.59"/></proof>
        <proof prover="1"><result status="valid" time="0.20" steps="187"/></proof>
        <proof prover="2" obsolete="true"><result status="valid" time="0.04"/></proof>
        <proof prover="3" obsolete="true"><result status="valid" time="0.31"/></proof>
        <proof prover="4" obsolete="true"><result status="valid" time="0.13"/></proof>
        <proof prover="5" obsolete="true"><result status="valid" time="0.04"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC balanced_sum.12.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0" obsolete="true"><result status="valid" time="0.63"/></proof>
       <proof prover="1"><result status="valid" time="0.40" steps="187"/></proof>
       <proof prover="2" obsolete="true"><result status="valid" time="0.04"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.31"/></proof>
       <proof prover="4" obsolete="true"><result status="valid" time="0.13"/></proof>
       <proof prover="5" obsolete="true"><result status="valid" time="0.04"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC balanced_sum.12.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="H36">
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC balanced_sum.13" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC balanced_sum.13.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="timeout" time="5.00"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="3"><result status="valid" time="0.73"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC balanced_sum.14" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC balanced_sum.14.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.64" steps="194"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.71"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC constant_sum" expl="VC for constant_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC constant_sum.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="157"/></proof>
  </goal>
  <goal name="VC constant_sum.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="159"/></proof>
  </goal>
  <goal name="VC constant_sum.2" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC constant_sum.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="timeout" time="5.00"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="1.19"/></proof>
   <proof prover="3"><result status="timeout" time="5.00"/></proof>
   <proof prover="5"><result status="valid" time="1.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC constant_sum.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.59"/></proof>
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC constant_sum.4" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(cardinal (n_bvs n))" arg2="(power_ 2 n)" arg3="in" arg4="H1">
   <goal name="VC constant_sum.4.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="H1">
   </transf>
   </goal>
   <goal name="VC constant_sum.4.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="0.77"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC constant_sum.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC constant_sum.5.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="((f @ choose (n_bvs n)) = 0)">
    <goal name="VC constant_sum.5.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0"><result status="timeout" time="5.00"/></proof>
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    <proof prover="3"><result status="valid" time="4.79"/></proof>
    <proof prover="4" obsolete="true"><result status="valid" time="0.71"/></proof>
    </goal>
    <goal name="VC constant_sum.5.0.1" expl="false case (postcondition)" proved="true">
    <transf name="case" proved="true" arg1="((f @ choose (n_bvs n)) = 0)">
     <goal name="VC constant_sum.5.0.1.0" expl="false case (true case. postcondition)" proved="true">
     <proof prover="1"><result status="valid" time="0.30" steps="165"/></proof>
     <proof prover="3" obsolete="true"><result status="valid" time="0.30"/></proof>
     </goal>
     <goal name="VC constant_sum.5.0.1.1" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="cpower_one">
      <goal name="VC constant_sum.5.0.1.1.0" expl="false case (postcondition)" proved="true">
      <transf name="rewrite" proved="true" arg1="mult_modulus">
       <goal name="VC constant_sum.5.0.1.1.0.0" expl="false case (postcondition)" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_one_t">
        <goal name="VC constant_sum.5.0.1.1.0.0.0" expl="false case (postcondition)" proved="true">
        <proof prover="0"><result status="timeout" time="5.00"/></proof>
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="3"><result status="valid" time="4.72"/></proof>
        </goal>
        <goal name="VC constant_sum.5.0.1.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="0.77" steps="169"/></proof>
        <proof prover="3" obsolete="true"><result status="valid" time="0.65"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC constant_sum.5.0.1.1.1" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="(0&lt;= (f @ choose (n_bvs n))  &lt;2)">
       <goal name="VC constant_sum.5.0.1.1.1.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC constant_sum.5.0.1.1.1.0.0" proved="true">
        <proof prover="0"><result status="timeout" time="5.00"/></proof>
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="3"><result status="timeout" time="5.00"/></proof>
        <proof prover="5"><result status="valid" time="0.73"/></proof>
        </goal>
        <goal name="VC constant_sum.5.0.1.1.1.0.1" proved="true">
        <proof prover="0"><result status="timeout" time="5.00"/></proof>
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="3"><result status="timeout" time="5.00"/></proof>
        <proof prover="5"><result status="valid" time="0.73"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC constant_sum.5.0.1.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.26" steps="169"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.52"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC constant_sum.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC constant_sum.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="mult_modulus">
    <goal name="VC constant_sum.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="cpower_mult_split">
     <goal name="VC constant_sum.6.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H">
      <goal name="VC constant_sum.6.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="modulus_real_pos">
       <goal name="VC constant_sum.6.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="5.00"/></proof>
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="3"><result status="timeout" time="5.00"/></proof>
       <proof prover="5"><result status="valid" time="2.59"/></proof>
       </goal>
       <goal name="VC constant_sum.6.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.76" steps="169"/></proof>
       </goal>
       <goal name="VC constant_sum.6.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.73" steps="169"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC constant_sum.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.32" steps="165"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC ind_balanced_sum" expl="VC for ind_balanced_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC ind_balanced_sum.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.32" steps="157"/></proof>
  </goal>
  <goal name="VC ind_balanced_sum.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="159"/></proof>
  </goal>
  <goal name="VC ind_balanced_sum.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.34" steps="159"/></proof>
  </goal>
  <goal name="VC ind_balanced_sum.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.33" steps="159"/></proof>
  </goal>
  <goal name="VC ind_balanced_sum.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H4">
   <goal name="VC ind_balanced_sum.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC ind_balanced_sum.4.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC ind_balanced_sum.4.0.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(forall x. modulus x = c_zero -&gt; x = c_zero)">
      <goal name="VC ind_balanced_sum.4.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC ind_balanced_sum.4.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.63" steps="171"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.70"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC ind_balanced_sum.4.0.0.0.1" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="h">
       <goal name="VC ind_balanced_sum.4.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="(forall x. cpower x 2 = c_zero -&gt; x = c_zero)">
        <goal name="VC ind_balanced_sum.4.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="1"><result status="valid" time="0.71" steps="171"/></proof>
        <proof prover="3" obsolete="true"><result status="valid" time="0.69"/></proof>
        </goal>
        <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="h">
         <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(sum (n_bvs n)
    (fun (k:bitvec) -&gt; cpower (-. c_one) (f @ int_to_bv (bv_to_int k) n)))" arg2="(sum (n_bvs n)
    (fun (k:bitvec) -&gt; cpower (-. c_one) (f @ k)))">
          <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="balanced_sum">
           <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="0.25" steps="167"/></proof>
           <proof prover="3" obsolete="true"><result status="valid" time="0.33"/></proof>
           </goal>
           <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="0.27" steps="167"/></proof>
           <proof prover="3" obsolete="true"><result status="valid" time="0.34"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="sum_eq">
           <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1.0.1.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1.0.1.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="VC ind_balanced_sum.4.0.0.0.1.0.1.0.1.0.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="timeout" time="5.00"/></proof>
             <proof prover="1"><result status="timeout" time="5.00"/></proof>
             <proof prover="3"><result status="valid" time="0.71"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC ind_balanced_sum.5" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC ind_balanced_sum.5.0" expl="postcondition" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.55"/></proof>
   <proof prover="1"><result status="valid" time="0.61" steps="171"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.98"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC ind_balanced_sum.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC ind_balanced_sum.6.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.64" steps="173"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.75"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC ind_constant_sum" expl="VC for ind_constant_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC ind_constant_sum.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.23" steps="157"/></proof>
  </goal>
  <goal name="VC ind_constant_sum.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.44" steps="159"/></proof>
  </goal>
  <goal name="VC ind_constant_sum.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="159"/></proof>
  </goal>
  <goal name="VC ind_constant_sum.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.31" steps="161"/></proof>
  </goal>
  <goal name="VC ind_constant_sum.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC ind_constant_sum.4.0" expl="precondition" proved="true">
   <proof prover="0"><result status="timeout" time="5.00"/></proof>
   <proof prover="1"><result status="timeout" time="5.00"/></proof>
   <proof prover="2" obsolete="true"><result status="valid" time="0.82"/></proof>
   <proof prover="3"><result status="valid" time="4.54"/></proof>
   <proof prover="5" obsolete="true"><result status="valid" time="0.83"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC ind_constant_sum.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.66"/></proof>
  <proof prover="1"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ind_constant_sum.6" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="( ind_sum (fun (x:int) -&gt; cpower (-. c_one) (f @ int_to_bv x n)) 0
  (power_ 2 n))" arg2="(sum (n_bvs n) (fun (x:bitvec) -&gt; cpower (-. c_one) (f @ x)))">
   <goal name="VC ind_constant_sum.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="n_bvs_card" arg2="in" arg3="H1">
    <goal name="VC ind_constant_sum.6.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="power_to_" arg2="in" arg3="H1">
     <goal name="VC ind_constant_sum.6.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="H1">
     </transf>
     </goal>
     <goal name="VC ind_constant_sum.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.22" steps="163"/></proof>
     <proof prover="3" obsolete="true"><result status="valid" time="0.26"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC ind_constant_sum.6.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="0.22" steps="163"/></proof>
    <proof prover="3" obsolete="true"><result status="valid" time="0.26"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC ind_constant_sum.6.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
    <goal name="VC ind_constant_sum.6.1.0" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="goal_comm">
     <goal name="VC ind_constant_sum.6.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="power_no_">
      <goal name="VC ind_constant_sum.6.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="bv_sum_to_int_sum">
       <goal name="VC ind_constant_sum.6.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.24" steps="163"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.28"/></proof>
       </goal>
       <goal name="VC ind_constant_sum.6.1.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.61"/></proof>
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.76"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC ind_constant_sum.6.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.26" steps="163"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.29"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC ind_constant_sum.7" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC ind_constant_sum.7.0" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="((f @ choose (n_bvs n)) = 0)">
    <goal name="VC ind_constant_sum.7.0.0" expl="true case (postcondition)" proved="true">
    <proof prover="0"><result status="timeout" time="5.00"/></proof>
    <proof prover="1"><result status="timeout" time="5.00"/></proof>
    <proof prover="3"><result status="valid" time="0.83"/></proof>
    </goal>
    <goal name="VC ind_constant_sum.7.0.1" expl="false case (postcondition)" proved="true">
    <transf name="replace" proved="true" arg1="(i_to_c (power_ 2 n) *. cpower (-. c_one) (f @ choose (n_bvs n)))" arg2="(-. (i_to_c (power_ 2 n)))">
     <goal name="VC ind_constant_sum.7.0.1.0" expl="false case (postcondition)" proved="true">
     <proof prover="0"><result status="timeout" time="5.00"/></proof>
     <proof prover="1"><result status="timeout" time="5.00"/></proof>
     <proof prover="3"><result status="valid" time="0.70"/></proof>
     </goal>
     <goal name="VC ind_constant_sum.7.0.1.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(cpower (-. c_one) (f @ choose (n_bvs n)))" arg2="(-. c_one)">
      <goal name="VC ind_constant_sum.7.0.1.1.0" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="0.86" steps="171"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.62"/></proof>
      </goal>
      <goal name="VC ind_constant_sum.7.0.1.1.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(f @ choose (n_bvs n))" arg2="1">
       <goal name="VC ind_constant_sum.7.0.1.1.1.0" expl="equality hypothesis" proved="true">
       <proof prover="1"><result status="valid" time="0.81" steps="171"/></proof>
       </goal>
       <goal name="VC ind_constant_sum.7.0.1.1.1.1" expl="equality hypothesis" proved="true">
       <transf name="assert" proved="true" arg1="(0&lt;=(f @ choose (n_bvs n)) &lt;2)">
        <goal name="VC ind_constant_sum.7.0.1.1.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="timeout" time="5.00"/></proof>
        <proof prover="1"><result status="timeout" time="5.00"/></proof>
        <proof prover="3"><result status="timeout" time="5.00"/></proof>
        <proof prover="5"><result status="valid" time="0.77"/></proof>
        </goal>
        <goal name="VC ind_constant_sum.7.0.1.1.1.1.1" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="0.25" steps="171"/></proof>
        <proof prover="3" obsolete="true"><result status="valid" time="0.51"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC ind_constant_sum.8" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mult_modulus">
   <goal name="VC ind_constant_sum.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="VC ind_constant_sum.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="modulus_real_pos">
     <goal name="VC ind_constant_sum.8.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="pow_inv_sqrt_2_add">
      <goal name="VC ind_constant_sum.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b c. a*.b*.c = a*.c*.b)">
       <goal name="VC ind_constant_sum.8.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.27" steps="167"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.59"/></proof>
       </goal>
       <goal name="VC ind_constant_sum.8.0.0.0.0.1" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="h">
        <goal name="VC ind_constant_sum.8.0.0.0.0.1.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="one_mult_t">
         <goal name="VC ind_constant_sum.8.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(pow_inv_sqrt_2 (2 * n))" arg2="(pow_inv_2 n)">
          <goal name="VC ind_constant_sum.8.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.50"/></proof>
          <proof prover="1"><result status="timeout" time="5.00"/></proof>
          </goal>
          <goal name="VC ind_constant_sum.8.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="1"><result status="valid" time="0.65" steps="171"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC ind_constant_sum.8.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.21" steps="167"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.30"/></proof>
      </goal>
      <goal name="VC ind_constant_sum.8.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.24" steps="167"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.29"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC ind_constant_sum.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.93" steps="171"/></proof>
     </goal>
     <goal name="VC ind_constant_sum.8.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0" obsolete="true"><result status="valid" time="0.77"/></proof>
     <proof prover="1"><result status="valid" time="0.98" steps="171"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC bc_sum" expl="VC for bc_sum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC bc_sum.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC bc_sum.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC bc_sum.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_modulus">
     <goal name="VC bc_sum.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="cpower_mult_split">
      <goal name="VC bc_sum.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="constant_sum1">
       <goal name="VC bc_sum.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="0"><result status="timeout" time="5.00"/></proof>
       <proof prover="1"><result status="timeout" time="5.00"/></proof>
       <proof prover="3"><result status="timeout" time="5.00"/></proof>
       <proof prover="5"><result status="valid" time="3.98"/></proof>
       </goal>
       <goal name="VC bc_sum.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.26" steps="157"/></proof>
       <proof prover="5" obsolete="true"><result status="valid" time="0.72"/></proof>
       </goal>
       <goal name="VC bc_sum.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.26" steps="157"/></proof>
       <proof prover="5" obsolete="true"><result status="valid" time="0.03"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC bc_sum.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.31" steps="157"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.43"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC bc_sum.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC bc_sum.1.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC bc_sum.1.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_modulus">
     <goal name="VC bc_sum.1.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="cpower_mult_split">
      <goal name="VC bc_sum.1.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="balanced_sum">
       <goal name="VC bc_sum.1.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="1"><result status="valid" time="0.57" steps="160"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.71"/></proof>
       </goal>
       <goal name="VC bc_sum.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.24" steps="157"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.57"/></proof>
       </goal>
       <goal name="VC bc_sum.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.22" steps="157"/></proof>
       <proof prover="3" obsolete="true"><result status="valid" time="0.36"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC bc_sum.1.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.22" steps="157"/></proof>
      <proof prover="3" obsolete="true"><result status="valid" time="0.32"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

(* This file is generated by Why3's Coq driver *)
(* Beware! Only edit allowed sections below    *)
Require Import BuiltIn.
Require BuiltIn.
Require HighOrd.
Require int.Int.
Require int.Abs.
Require int.MinMax.
Require int.EuclideanDivision.
Require real.Real.

Parameter power: Z -> Z -> Z.

Axiom power_def :
  forall (e:Z) (i:Z), (0%Z <= i)%Z ->
  ((i = 0%Z) -> ((power e i) = 1%Z)) /\
  (~ (i = 0%Z) -> ((power e i) = (e * (power e (i - 1%Z)%Z))%Z)).

Axiom d_frac : Type.
Parameter d_frac_WhyType : WhyType d_frac.
Existing Instance d_frac_WhyType.

Parameter dyadic: Z -> Z -> d_frac.

Parameter div_two: d_frac -> d_frac.

Axiom div_two_den :
  forall (k:Z) (n:Z), (0%Z <= n)%Z -> (0%Z <= k)%Z ->
  ((div_two (dyadic k n)) = (dyadic k (n + 1%Z)%Z)).

Axiom Dyadic_cyclic :
  forall (k:Z) (n:Z), (0%Z <= n)%Z ->
  ((dyadic k n) = (dyadic (k + (power 2%Z n))%Z n)).

(* Why3 goal *)
Theorem h : ((dyadic 1%Z 2%Z) = (dyadic (-1%Z)%Z 2%Z)).
Proof.


Qed.


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.4.1" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="kronecker_comm.mlw"/>
<theory name="Kronecker_comm" proved="true">
 <goal name="VC kronecker_scalar_distr" expl="VC for kronecker_scalar_distr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_scalar_distr.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="133"/></proof>
  </goal>
  <goal name="VC kronecker_scalar_distr.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="134"/></proof>
  </goal>
  <goal name="VC kronecker_scalar_distr.2" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_values">
   <goal name="VC kronecker_scalar_distr.2.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_values">
    <goal name="VC kronecker_scalar_distr.2.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_values">
     <goal name="VC kronecker_scalar_distr.2.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_values">
      <goal name="VC kronecker_scalar_distr.2.0.0.0.0" expl="precondition" proved="true">
      <proof prover="4"><result status="valid" time="0.16" steps="137"/></proof>
      </goal>
      <goal name="VC kronecker_scalar_distr.2.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="0.48"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_scalar_distr.2.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="137"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_scalar_distr.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_scalar_distr_r" expl="VC for kronecker_scalar_distr_r" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC kronecker_scalar_distr_r.0" expl="VC for kronecker_scalar_distr_r" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_scalar_distr_r.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="133"/></proof>
   </goal>
   <goal name="VC kronecker_scalar_distr_r.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="134"/></proof>
   </goal>
   <goal name="VC kronecker_scalar_distr_r.0.2" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H3">
    <goal name="VC kronecker_scalar_distr_r.0.2.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_values">
     <goal name="VC kronecker_scalar_distr_r.0.2.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_values">
      <goal name="VC kronecker_scalar_distr_r.0.2.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_values">
       <goal name="VC kronecker_scalar_distr_r.0.2.0.0.0.0" expl="precondition" proved="true">
       <proof prover="4"><result status="valid" time="0.14" steps="137"/></proof>
       </goal>
       <goal name="VC kronecker_scalar_distr_r.0.2.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.53"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_scalar_distr_r.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.24" steps="137"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_scalar_distr_r.0.3" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="135"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_scalar_distr_rev" expl="VC for kronecker_scalar_distr_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_scalar_distr_rev.0" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="119"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_scalar_distr_rev_r" expl="VC for kronecker_scalar_distr_rev_r" proved="true">
 <proof prover="4"><result status="valid" time="0.15" steps="119"/></proof>
 </goal>
 <goal name="VC kronecker_scalars" expl="VC for kronecker_scalars" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC kronecker_scalars.0" expl="VC for kronecker_scalars" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_scalars.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="137"/></proof>
   </goal>
   <goal name="VC kronecker_scalars.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="138"/></proof>
   </goal>
   <goal name="VC kronecker_scalars.0.2" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_values">
    <goal name="VC kronecker_scalars.0.2.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_values">
     <goal name="VC kronecker_scalars.0.2.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="kronecker_values">
      <goal name="VC kronecker_scalars.0.2.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="scalar_values">
       <goal name="VC kronecker_scalars.0.2.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_values">
        <goal name="VC kronecker_scalars.0.2.0.0.0.0.0" expl="precondition" proved="true">
        <proof prover="4"><result status="valid" time="0.14" steps="141"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_scalars.0.2.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="0.68"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_scalars.0.2.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.26" steps="141"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_scalars.0.3" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="139"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC mat_k_id" expl="VC for mat_k_id" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC mat_k_id.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="119"/></proof>
  </goal>
  <goal name="VC mat_k_id.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="121"/></proof>
  </goal>
  <goal name="VC mat_k_id.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="119"/></proof>
  </goal>
  <goal name="VC mat_k_id.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="121"/></proof>
  </goal>
  <goal name="VC mat_k_id.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="119"/></proof>
  </goal>
  <goal name="VC mat_k_id.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="125"/></proof>
  </goal>
  <goal name="VC mat_k_id.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="127"/></proof>
  </goal>
  <goal name="VC mat_k_id.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="125"/></proof>
  </goal>
  <goal name="VC mat_k_id.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="127"/></proof>
  </goal>
  <goal name="VC mat_k_id.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.12" steps="119"/></proof>
  </goal>
  <goal name="VC mat_k_id.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.29" steps="121"/></proof>
  </goal>
  <goal name="VC mat_k_id.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="119"/></proof>
  </goal>
  <goal name="VC mat_k_id.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="121"/></proof>
  </goal>
  <goal name="VC mat_k_id.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="121"/></proof>
  </goal>
  <goal name="VC mat_k_id.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="123"/></proof>
  </goal>
  <goal name="VC mat_k_id.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="121"/></proof>
  </goal>
  <goal name="VC mat_k_id.16" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.31" steps="123"/></proof>
  </goal>
  <goal name="VC mat_k_id.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="119"/></proof>
  </goal>
  <goal name="VC mat_k_id.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="119"/></proof>
  </goal>
  <goal name="VC mat_k_id.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.44"/></proof>
  </goal>
  <goal name="VC mat_k_id.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC mat_k_id.21" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC mat_k_id.21.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.55"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mat_k_id.22" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="121"/></proof>
  </goal>
  <goal name="VC mat_k_id.23" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(rows m * power 2 n)" arg2="(power 2 n * rows m)">
   <goal name="VC mat_k_id.23.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(columns m * power 2 n)" arg2="(power 2 n * columns m)">
    <goal name="VC mat_k_id.23.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H6">
     <goal name="VC mat_k_id.23.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_mat">
      <goal name="VC mat_k_id.23.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_r">
       <goal name="VC mat_k_id.23.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="4"><result status="valid" time="0.14" steps="129"/></proof>
       </goal>
       <goal name="VC mat_k_id.23.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.24" steps="131"/></proof>
       </goal>
       <goal name="VC mat_k_id.23.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.23" steps="131"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC mat_k_id.23.0.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_c">
       <goal name="VC mat_k_id.23.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="4"><result status="valid" time="0.14" steps="129"/></proof>
       </goal>
       <goal name="VC mat_k_id.23.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.30" steps="131"/></proof>
       </goal>
       <goal name="VC mat_k_id.23.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.24" steps="131"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC mat_k_id.23.0.0.0.2" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC mat_k_id.23.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make">
        <goal name="VC mat_k_id.23.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC mat_k_id.23.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.29" steps="133"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC mat_k_id.23.0.0.0.2.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC mat_k_id.23.0.0.0.2.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.34" steps="133"/></proof>
         </goal>
         <goal name="VC mat_k_id.23.0.0.0.2.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.27" steps="133"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC mat_k_id.23.0.0.0.2.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC mat_k_id.23.0.0.0.2.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.26" steps="133"/></proof>
         </goal>
         <goal name="VC mat_k_id.23.0.0.0.2.0.2.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.26" steps="133"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC mat_k_id.23.0.1" expl="equality hypothesis" proved="true">
    <proof prover="4"><result status="valid" time="0.15" steps="129"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_k_id.23.1" expl="equality hypothesis" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="129"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC mat_k_id_values" expl="VC for mat_k_id_values" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC mat_k_id_values.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_k_id_spec">
   <goal name="VC mat_k_id_values.0.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.63"/></proof>
   </goal>
   <goal name="VC mat_k_id_values.0.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="127"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC mat_k_id_rows" expl="VC for mat_k_id_rows" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC mat_k_id_rows.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_k_id_spec">
   <goal name="VC mat_k_id_rows.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make_r">
    <goal name="VC mat_k_id_rows.0.0.0" expl="postcondition" proved="true">
    <proof prover="4"><result status="valid" time="0.15" steps="119"/></proof>
    </goal>
    <goal name="VC mat_k_id_rows.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.36"/></proof>
    </goal>
    <goal name="VC mat_k_id_rows.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.38"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_k_id_rows.0.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="119"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC mat_k_id_columns" expl="VC for mat_k_id_columns" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC mat_k_id_columns.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_k_id_spec">
   <goal name="VC mat_k_id_columns.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make_c">
    <goal name="VC mat_k_id_columns.0.0.0" expl="postcondition" proved="true">
    <proof prover="4"><result status="valid" time="0.26" steps="119"/></proof>
    </goal>
    <goal name="VC mat_k_id_columns.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.41"/></proof>
    </goal>
    <goal name="VC mat_k_id_columns.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.41"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_k_id_columns.0.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="119"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC id_k_mat" expl="VC for id_k_mat" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC id_k_mat.0" expl="VC for id_k_mat" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC id_k_mat.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="119"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.1" expl="assertion" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_mat">
    <goal name="VC id_k_mat.0.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_r">
     <goal name="VC id_k_mat.0.1.0.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.20" steps="127"/></proof>
     </goal>
     <goal name="VC id_k_mat.0.1.0.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt; rows m)">
      <goal name="VC id_k_mat.0.1.0.1.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.33" steps="127"/></proof>
      </goal>
      <goal name="VC id_k_mat.0.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.20" steps="129"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC id_k_mat.0.1.0.2" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt; columns m)">
      <goal name="VC id_k_mat.0.1.0.2.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.19" steps="127"/></proof>
      </goal>
      <goal name="VC id_k_mat.0.1.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.22" steps="129"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC id_k_mat.0.1.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_c">
     <goal name="VC id_k_mat.0.1.1.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.23" steps="127"/></proof>
     </goal>
     <goal name="VC id_k_mat.0.1.1.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt; rows m)">
      <goal name="VC id_k_mat.0.1.1.1.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.20" steps="127"/></proof>
      </goal>
      <goal name="VC id_k_mat.0.1.1.1.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.20" steps="129"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC id_k_mat.0.1.1.2" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt; columns m)">
      <goal name="VC id_k_mat.0.1.1.2.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.33" steps="127"/></proof>
      </goal>
      <goal name="VC id_k_mat.0.1.1.2.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.20" steps="129"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC id_k_mat.0.1.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC id_k_mat.0.1.2.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(rows (identity n) * rows m)" arg2="(power 2 n * rows m)" arg3="in" arg4="H1">
      <goal name="VC id_k_mat.0.1.2.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(columns (identity n) * columns m)" arg2="(power 2 n * columns m)" arg3="in" arg4="H1">
       <goal name="VC id_k_mat.0.1.2.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make">
        <goal name="VC id_k_mat.0.1.2.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC id_k_mat.0.1.2.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.24" steps="129"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC id_k_mat.0.1.2.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.39"/></proof>
        </goal>
        <goal name="VC id_k_mat.0.1.2.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.40"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC id_k_mat.0.1.2.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="0.32" steps="127"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC id_k_mat.0.1.2.0.1" expl="equality hypothesis" proved="true">
      <proof prover="4"><result status="valid" time="0.28" steps="127"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC id_k_mat.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.40" steps="129"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.42" steps="129"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.29" steps="131"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.42" steps="131"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.30" steps="129"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.32" steps="129"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.39" steps="129"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.37" steps="131"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.10" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.42" steps="131"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="127"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.12" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="127"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.13" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(0 &lt; rows m)">
    <goal name="VC id_k_mat.0.13.0" expl="asserted formula" proved="true">
    <proof prover="4"><result status="valid" time="0.40" steps="129"/></proof>
    </goal>
    <goal name="VC id_k_mat.0.13.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.43" steps="131"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC id_k_mat.0.14" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(0 &lt; columns m)">
    <goal name="VC id_k_mat.0.14.0" expl="asserted formula" proved="true">
    <proof prover="4"><result status="valid" time="0.41" steps="131"/></proof>
    </goal>
    <goal name="VC id_k_mat.0.14.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.30" steps="133"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC id_k_mat.0.15" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC id_k_mat.0.15.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="identity_def">
     <goal name="VC id_k_mat.0.15.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="assert_make">
      <goal name="VC id_k_mat.0.15.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC id_k_mat.0.15.0.0.0.0" expl="precondition" proved="true">
       <proof prover="4"><result status="valid" time="0.56" steps="141"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC id_k_mat.0.15.0.0.1" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC id_k_mat.0.15.0.0.1.0" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.48" steps="141"/></proof>
       </goal>
       <goal name="VC id_k_mat.0.15.0.0.1.1" expl="rewrite premises" proved="true">
       <transf name="assert" proved="true" arg1="(div i (rows m) * rows m&lt; power 2 n * rows m)">
        <goal name="VC id_k_mat.0.15.0.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.39"/></proof>
        </goal>
        <goal name="VC id_k_mat.0.15.0.0.1.1.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.56"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC id_k_mat.0.15.0.0.2" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC id_k_mat.0.15.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.34" steps="141"/></proof>
       </goal>
       <goal name="VC id_k_mat.0.15.0.0.2.1" expl="rewrite premises" proved="true">
       <transf name="assert" proved="true" arg1="(div j (columns m) * columns m&lt; power 2 n * columns m)">
        <goal name="VC id_k_mat.0.15.0.0.2.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.40"/></proof>
        </goal>
        <goal name="VC id_k_mat.0.15.0.0.2.1.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.38"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC id_k_mat.0.15.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.27" steps="139"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC id_k_mat.0.16" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="129"/></proof>
   </goal>
   <goal name="VC id_k_mat.0.17" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_mat">
    <goal name="VC id_k_mat.0.17.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_r">
     <goal name="VC id_k_mat.0.17.0.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.17" steps="133"/></proof>
     </goal>
     <goal name="VC id_k_mat.0.17.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.27" steps="135"/></proof>
     </goal>
     <goal name="VC id_k_mat.0.17.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.59" steps="135"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC id_k_mat.0.17.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_c">
     <goal name="VC id_k_mat.0.17.1.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.20" steps="133"/></proof>
     </goal>
     <goal name="VC id_k_mat.0.17.1.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.28" steps="135"/></proof>
     </goal>
     <goal name="VC id_k_mat.0.17.1.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.44" steps="135"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC id_k_mat.0.17.2" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="2.02"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC id_k_mat_values" expl="VC for id_k_mat_values" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC id_k_mat_values.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC id_k_mat_rows" expl="VC for id_k_mat_rows" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC id_k_mat_rows.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="id_k_mat_def">
   <goal name="VC id_k_mat_rows.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC id_k_mat_rows.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_spec2">
     <goal name="VC id_k_mat_rows.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="0.44" steps="121"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC id_k_mat_rows.0.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="119"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC id_k_mat_columns" expl="VC for id_k_mat_columns" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC id_k_mat_columns.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="id_k_mat_def">
   <goal name="VC id_k_mat_columns.0.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC id_k_mat_columns.0.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="0.54"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC id_k_mat_columns.0.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.30" steps="119"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC mat_prod_k_id" expl="VC for mat_prod_k_id" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC mat_prod_k_id.0" expl="VC for mat_prod_k_id" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC mat_prod_k_id.0.0" expl="assertion" proved="true">
   <proof prover="4"><result status="valid" time="0.37" steps="123"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.1" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="VC mat_prod_k_id.0.1.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_mat">
     <goal name="VC mat_prod_k_id.0.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="assert_make_r">
      <goal name="VC mat_prod_k_id.0.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.38"/></proof>
      </goal>
      <goal name="VC mat_prod_k_id.0.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.20"/></proof>
      </goal>
      <goal name="VC mat_prod_k_id.0.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.26"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC mat_prod_k_id.0.1.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="assert_make_c">
      <goal name="VC mat_prod_k_id.0.1.0.1.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.49"/></proof>
      </goal>
      <goal name="VC mat_prod_k_id.0.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.47"/></proof>
      </goal>
      <goal name="VC mat_prod_k_id.0.1.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.18"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC mat_prod_k_id.0.1.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC mat_prod_k_id.0.1.0.2.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make">
       <goal name="VC mat_prod_k_id.0.1.0.2.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC mat_prod_k_id.0.1.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mat_k_id_values">
         <goal name="VC mat_prod_k_id.0.1.0.2.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.41" steps="125"/></proof>
         </goal>
         <goal name="VC mat_prod_k_id.0.1.0.2.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.39" steps="125"/></proof>
         </goal>
         <goal name="VC mat_prod_k_id.0.1.0.2.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.37"/></proof>
         </goal>
         <goal name="VC mat_prod_k_id.0.1.0.2.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.40"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC mat_prod_k_id.0.1.0.2.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.36"/></proof>
       </goal>
       <goal name="VC mat_prod_k_id.0.1.0.2.0.2" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.50"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_prod_k_id.0.2" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="mat_mult_values">
    <goal name="VC mat_prod_k_id.0.2.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="1.73"/></proof>
    </goal>
    <goal name="VC mat_prod_k_id.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.15" steps="127"/></proof>
    </goal>
    <goal name="VC mat_prod_k_id.0.2.2" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="0.90"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_prod_k_id.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.11" steps="125"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="127"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="127"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.29" steps="129"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="125"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="127"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="125"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.10" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="127"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="125"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.12" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="127"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="125"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="127"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="125"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.16" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="131"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.17" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="133"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.18" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="131"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.19" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="133"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.20" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="127"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.21" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="129"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.22" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC mat_prod_k_id.0.22.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H6">
     <goal name="VC mat_prod_k_id.0.22.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
     <goal name="VC mat_prod_k_id.0.22.0.1" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="set_valid_index">
      <goal name="VC mat_prod_k_id.0.22.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC mat_prod_k_id.0.22.0.1.0.0" expl="apply premises" proved="true">
       <proof prover="4"><result status="valid" time="0.12" steps="137"/></proof>
       </goal>
       <goal name="VC mat_prod_k_id.0.22.0.1.0.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.48"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC mat_prod_k_id.0.22.0.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC mat_prod_k_id.0.22.0.1.1.0" expl="apply premises" proved="true">
       <proof prover="4"><result status="valid" time="0.15" steps="137"/></proof>
       </goal>
       <goal name="VC mat_prod_k_id.0.22.0.1.1.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="0.39"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_prod_k_id.0.23" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="127"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.24" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="131"/></proof>
   </goal>
   <goal name="VC mat_prod_k_id.0.25" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_mat">
    <goal name="VC mat_prod_k_id.0.25.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_r">
     <goal name="VC mat_prod_k_id.0.25.0.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.27" steps="139"/></proof>
     </goal>
     <goal name="VC mat_prod_k_id.0.25.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.36" steps="141"/></proof>
     </goal>
     <goal name="VC mat_prod_k_id.0.25.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.28" steps="141"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC mat_prod_k_id.0.25.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make_c">
     <goal name="VC mat_prod_k_id.0.25.1.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.15" steps="139"/></proof>
     </goal>
     <goal name="VC mat_prod_k_id.0.25.1.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.28" steps="141"/></proof>
     </goal>
     <goal name="VC mat_prod_k_id.0.25.1.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.48" steps="141"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC mat_prod_k_id.0.25.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC mat_prod_k_id.0.25.2.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="H1">
      <goal name="VC mat_prod_k_id.0.25.2.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="mat_mult_values">
       <goal name="VC mat_prod_k_id.0.25.2.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="assert_make">
        <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mult_eq_t_rev">
          <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="ind_sum_eq">
           <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="0.61"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(rows (identity n))" arg2="(power 2 n)">
           <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(columns (identity n))" arg2="(power 2 n)">
            <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="identity_def">
             <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make">
              <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="4"><result status="valid" time="0.43" steps="143"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="0.29" steps="142"/></proof>
              </goal>
              <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="0.42" steps="142"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.16" steps="141"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="4"><result status="valid" time="0.15" steps="141"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC mat_prod_k_id.0.25.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
           <proof prover="4"><result status="valid" time="0.32" steps="141"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC mat_prod_k_id.0.25.2.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.49"/></proof>
        </goal>
        <goal name="VC mat_prod_k_id.0.25.2.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.40"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC mat_prod_k_id.0.25.2.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.29" steps="141"/></proof>
       </goal>
       <goal name="VC mat_prod_k_id.0.25.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.55" steps="143"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC mat_prod_k_id.0.25.2.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.15" steps="141"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC id_k_mat_prod" expl="VC for id_k_mat_prod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC id_k_mat_prod.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.32" steps="123"/></proof>
  </goal>
  <goal name="VC id_k_mat_prod.1" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_mult_values">
   <goal name="VC id_k_mat_prod.1.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="1.61"/></proof>
   </goal>
   <goal name="VC id_k_mat_prod.1.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="125"/></proof>
   </goal>
   <goal name="VC id_k_mat_prod.1.2" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.36"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC id_k_mat_prod.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.22" steps="123"/></proof>
  </goal>
  <goal name="VC id_k_mat_prod.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="127"/></proof>
  </goal>
  <goal name="VC id_k_mat_prod.4" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_mat">
   <goal name="VC id_k_mat_prod.4.0" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make_r">
    <goal name="VC id_k_mat_prod.4.0.0" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
    </goal>
    <goal name="VC id_k_mat_prod.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.46" steps="137"/></proof>
    </goal>
    <goal name="VC id_k_mat_prod.4.0.2" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.44" steps="137"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC id_k_mat_prod.4.1" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make_c">
    <goal name="VC id_k_mat_prod.4.1.0" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
    </goal>
    <goal name="VC id_k_mat_prod.4.1.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.25" steps="137"/></proof>
    </goal>
    <goal name="VC id_k_mat_prod.4.1.2" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.41" steps="137"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC id_k_mat_prod.4.2" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC id_k_mat_prod.4.2.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make">
     <goal name="VC id_k_mat_prod.4.2.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="H1">
      <goal name="VC id_k_mat_prod.4.2.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H4">
       <goal name="VC id_k_mat_prod.4.2.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC id_k_mat_prod.4.2.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="mult_eq_t">
         <goal name="VC id_k_mat_prod.4.2.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="0.98"/></proof>
         </goal>
         <goal name="VC id_k_mat_prod.4.2.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="H7">
          <goal name="VC id_k_mat_prod.4.2.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="2.02"/></proof>
          </goal>
          <goal name="VC id_k_mat_prod.4.2.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.45" steps="139"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC id_k_mat_prod.4.2.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.38" steps="139"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC id_k_mat_prod.4.2.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.26" steps="137"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC id_k_mat_prod.4.2.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.35"/></proof>
     </goal>
     <goal name="VC id_k_mat_prod.4.2.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.41"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC filter_sum_mod_indic" expl="VC for filter_sum_mod_indic" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC filter_sum_mod_indic.0" expl="VC for filter_sum_mod_indic" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC filter_sum_mod_indic.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="125"/></proof>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="125"/></proof>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.38" steps="131"/></proof>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="131"/></proof>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="131"/></proof>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.5" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H6">
    <goal name="VC filter_sum_mod_indic.0.5.0" expl="VC for filter_sum_mod_indic" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC filter_sum_mod_indic.0.5.0.0" expl="VC for filter_sum_mod_indic" proved="true">
     <transf name="instantiate" proved="true" arg1="map_antec" arg2="(fun (k:int) -&gt; (k * v) + p),(to_fset 0 n),e">
      <goal name="VC filter_sum_mod_indic.0.5.0.0.0" expl="VC for filter_sum_mod_indic" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0" expl="VC for filter_sum_mod_indic" proved="true">
       <transf name="destruct" proved="true" arg1="Hinst">
        <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.0" expl="destruct premise" proved="true">
        <proof prover="2"><result status="valid" time="2.59"/></proof>
        </goal>
        <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1" expl="VC for filter_sum_mod_indic" proved="true">
        <transf name="destruct" proved="true" arg1="Hinst">
         <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1.0" expl="VC for filter_sum_mod_indic" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1.0.0" expl="VC for filter_sum_mod_indic" proved="true">
          <transf name="rewrite" proved="true" arg1="Hinst">
           <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1.0.0.0" expl="VC for filter_sum_mod_indic" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1.0.0.0.0" expl="VC for filter_sum_mod_indic" proved="true">
            <transf name="assert" proved="true" arg1="(0&lt;= ((a * v) + p) &lt; v*n)">
             <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1.0.0.0.0.0.0" proved="true">
              <proof prover="4"><result status="valid" time="0.40" steps="139"/></proof>
              </goal>
              <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1.0.0.0.0.0.1" proved="true">
              <proof prover="4"><result status="valid" time="0.42" steps="139"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC filter_sum_mod_indic.0.5.0.0.0.0.1.0.0.0.0.1" expl="VC for filter_sum_mod_indic" proved="true">
             <proof prover="4"><result status="valid" time="0.37" steps="143"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC filter_sum_mod_indic.0.5.0.1" expl="VC for filter_sum_mod_indic" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="VC filter_sum_mod_indic.0.5.0.1.0" expl="VC for filter_sum_mod_indic" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC filter_sum_mod_indic.0.5.0.1.0.0" expl="VC for filter_sum_mod_indic" proved="true">
       <proof prover="4"><result status="valid" time="2.16" steps="140"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.6" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H6">
    <goal name="VC filter_sum_mod_indic.0.6.0" expl="VC for filter_sum_mod_indic" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC filter_sum_mod_indic.0.6.0.0" expl="VC for filter_sum_mod_indic" proved="true">
     <transf name="apply" proved="true" arg1="set_map_mem">
      <goal name="VC filter_sum_mod_indic.0.6.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="(div e v)">
        <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.0" proved="true">
         <proof prover="2"><result status="valid" time="2.34"/></proof>
         </goal>
         <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.1" proved="true">
         <transf name="replace" proved="true" arg1="p" arg2="(mod e v)">
          <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.1.0" proved="true">
          <proof prover="2"><result status="valid" time="0.52"/></proof>
          </goal>
          <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="((fun (k:int) -&gt; indic (mod k v) p *. (g @ div k v)) e = (g @ div e v))">
           <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
            <proof prover="0"><result status="valid" time="0.44"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
           <transf name="instantiate" proved="true" arg1="map_antec" arg2="(fun (k:int) -&gt; (k * v) + p),(to_fset 0 n),e">
            <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.1.1.1.0" expl="equality hypothesis" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="h">
             <goal name="VC filter_sum_mod_indic.0.6.0.0.0.0.0.1.1.1.0.0" expl="equality hypothesis" proved="true">
             <proof prover="2"><result status="valid" time="0.75"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC filter_sum_mod_indic.0.6.0.1" expl="VC for filter_sum_mod_indic" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC filter_sum_mod_indic.0.6.0.1.0" expl="VC for filter_sum_mod_indic" proved="true">
      <proof prover="0"><result status="valid" time="0.40"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.7" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC filter_sum_mod_indic.0.7.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="H2">
     <goal name="VC filter_sum_mod_indic.0.7.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC filter_sum_mod_indic.0.7.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(0&lt;= e *v+p&lt; v*n)">
       <goal name="VC filter_sum_mod_indic.0.7.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(0&lt;= e &lt; n)">
        <goal name="VC filter_sum_mod_indic.0.7.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.41"/></proof>
        </goal>
        <goal name="VC filter_sum_mod_indic.0.7.0.0.0.0.1" expl="asserted formula" proved="true">
        <proof prover="4"><result status="valid" time="0.29" steps="141"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC filter_sum_mod_indic.0.7.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="4"><result status="valid" time="0.23" steps="141"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC filter_sum_mod_indic.0.7.0.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC filter_sum_mod_indic.0.7.0.0.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(indic (mod ((e * v) + p) v) p)" arg2="c_one">
        <goal name="VC filter_sum_mod_indic.0.7.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(div ((e * v) + p) v)" arg2="e">
         <goal name="VC filter_sum_mod_indic.0.7.0.0.1.0.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.27" steps="139"/></proof>
         </goal>
         <goal name="VC filter_sum_mod_indic.0.7.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="4"><result status="valid" time="0.34" steps="139"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC filter_sum_mod_indic.0.7.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <proof prover="4"><result status="valid" time="0.26" steps="139"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.8" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.45"/></proof>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.9" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(div e&#39; v)">
    <goal name="VC filter_sum_mod_indic.0.9.0" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC filter_sum_mod_indic.0.9.0.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC filter_sum_mod_indic.0.9.0.0.0" proved="true">
      <transf name="apply" proved="true" arg1="H5">
       <goal name="VC filter_sum_mod_indic.0.9.0.0.0.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC filter_sum_mod_indic.0.9.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="1.89"/></proof>
        </goal>
        <goal name="VC filter_sum_mod_indic.0.9.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="2.66"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC filter_sum_mod_indic.0.9.0.0.1" proved="true">
      <transf name="case" proved="true" arg1="(mod e&#39; v = p)">
       <goal name="VC filter_sum_mod_indic.0.9.0.0.1.0" expl="true case" proved="true">
       <proof prover="2"><result status="valid" time="0.78"/></proof>
       </goal>
       <goal name="VC filter_sum_mod_indic.0.9.0.0.1.1" expl="false case" proved="true">
       <transf name="assert" proved="true" arg1="((fun (k:int) -&gt; indic (mod k v) p *. (g @ div k v)) e&#39; &lt;&gt; c_zero)">
        <goal name="VC filter_sum_mod_indic.0.9.0.0.1.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.43"/></proof>
        </goal>
        <goal name="VC filter_sum_mod_indic.0.9.0.0.1.1.1" expl="false case" proved="true">
        <transf name="instantiate" proved="true" arg1="decomp" arg2="e&#39;,v">
         <goal name="VC filter_sum_mod_indic.0.9.0.0.1.1.1.0" expl="false case" proved="true">
         <transf name="replace" proved="true" arg1="p" arg2="(mod e&#39; v)">
          <goal name="VC filter_sum_mod_indic.0.9.0.0.1.1.1.0.0" expl="false case" proved="true">
          <proof prover="4"><result status="valid" time="0.14" steps="141"/></proof>
          </goal>
          <goal name="VC filter_sum_mod_indic.0.9.0.0.1.1.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="h">
           <goal name="VC filter_sum_mod_indic.0.9.0.0.1.1.1.0.1.0" expl="equality hypothesis" proved="true">
           <proof prover="4"><result status="valid" time="0.31" steps="140"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.10" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC filter_sum_mod_indic.0.10.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(fun (b:int) -&gt; indic (mod ((b * v) + p) v) p *. (g @ div ((b * v) + p) v))" arg2="g">
     <goal name="VC filter_sum_mod_indic.0.10.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H4">
      <goal name="VC filter_sum_mod_indic.0.10.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="H3">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC filter_sum_mod_indic.0.10.0.1" expl="equality hypothesis" proved="true">
     <transf name="compute_hyp" proved="true" >
      <goal name="VC filter_sum_mod_indic.0.10.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_func">
       <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(div ((e * v) + p) v)" arg2="e">
            <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="4"><result status="valid" time="0.24" steps="145"/></proof>
            </goal>
            <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="4"><result status="valid" time="0.23" steps="145"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(div ((e * v) + p) v)" arg2="e">
            <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="4"><result status="valid" time="0.24" steps="145"/></proof>
            </goal>
            <goal name="VC filter_sum_mod_indic.0.10.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="4"><result status="valid" time="0.20" steps="145"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_mod_indic.0.11" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H5" arg2="in" arg3="H">
    <goal name="VC filter_sum_mod_indic.0.11.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H2">
     <goal name="VC filter_sum_mod_indic.0.11.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H">
      <goal name="VC filter_sum_mod_indic.0.11.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H1">
       <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="replace" proved="true" arg1="(fun (b:int) -&gt; indic (mod ((b * v) + p) v) p *. (g @ div ((b * v) + p) v))" arg2="g">
         <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="4"><result status="valid" time="0.21" steps="143"/></proof>
         </goal>
         <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="compute_hyp" proved="true" >
          <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_func">
           <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="eliminate_if" proved="true" >
              <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0.0.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(div ((e * v) + p) v)" arg2="e">
                <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="4"><result status="valid" time="0.25" steps="147"/></proof>
                </goal>
                <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="4"><result status="valid" time="0.35" steps="147"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
               <transf name="replace" proved="true" arg1="(div ((e * v) + p) v)" arg2="e">
                <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                <proof prover="4"><result status="valid" time="0.27" steps="147"/></proof>
                </goal>
                <goal name="VC filter_sum_mod_indic.0.11.0.0.0.0.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                <proof prover="4"><result status="valid" time="0.25" steps="147"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC filter_sum_indic_div" expl="VC for filter_sum_indic_div" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC filter_sum_indic_div.0" expl="VC for filter_sum_indic_div" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC filter_sum_indic_div.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="125"/></proof>
   </goal>
   <goal name="VC filter_sum_indic_div.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="125"/></proof>
   </goal>
   <goal name="VC filter_sum_indic_div.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="131"/></proof>
   </goal>
   <goal name="VC filter_sum_indic_div.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="131"/></proof>
   </goal>
   <goal name="VC filter_sum_indic_div.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="131"/></proof>
   </goal>
   <goal name="VC filter_sum_indic_div.0.5" expl="assertion" proved="true">
   <transf name="compute_hyp" proved="true" >
    <goal name="VC filter_sum_indic_div.0.5.0" expl="assertion" proved="true">
    <transf name="eliminate_if" proved="true" >
     <goal name="VC filter_sum_indic_div.0.5.0.0" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC filter_sum_indic_div.0.5.0.0.0" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(mod ((p * v) + k) v)" arg2="k">
       <goal name="VC filter_sum_indic_div.0.5.0.0.0.0" expl="assertion" proved="true">
       <proof prover="4"><result status="valid" time="0.26" steps="137"/></proof>
       </goal>
       <goal name="VC filter_sum_indic_div.0.5.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="0.23" steps="137"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC filter_sum_indic_div.0.5.0.0.1" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(mod ((p * v) + k) v)" arg2="k">
       <goal name="VC filter_sum_indic_div.0.5.0.0.1.0" expl="assertion" proved="true">
       <proof prover="4"><result status="valid" time="0.23" steps="137"/></proof>
       </goal>
       <goal name="VC filter_sum_indic_div.0.5.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="0.21" steps="137"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_indic_div.0.6" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H7">
    <goal name="VC filter_sum_indic_div.0.6.0" expl="VC for filter_sum_indic_div" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC filter_sum_indic_div.0.6.0.0" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="rewrite" proved="true" arg1="H6" arg2="in" arg3="H">
      <goal name="VC filter_sum_indic_div.0.6.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="VC filter_sum_indic_div.0.6.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
       <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
        <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
        <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H1">
         <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
         <transf name="instantiate" proved="true" arg1="map_antec" arg2="(fun (y1:int) -&gt; (p * v) + y1),(to_fset 0 v),e">
          <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
          <transf name="destruct" proved="true" arg1="Hinst">
           <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
           <transf name="apply" proved="true" arg1="H1">
           </transf>
           </goal>
           <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0.1" expl="VC for filter_sum_indic_div" proved="true">
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0.1.0" expl="VC for filter_sum_indic_div" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
             <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0.1.0.0" expl="VC for filter_sum_indic_div" proved="true">
             <transf name="assert" proved="true" arg1="(0&lt;= e &lt; v*n)">
              <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0.1.0.0.0.0" proved="true">
               <proof prover="0"><result status="valid" time="0.48"/></proof>
               </goal>
               <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0.1.0.0.0.1" proved="true">
               <proof prover="4"><result status="valid" time="0.33" steps="141"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC filter_sum_indic_div.0.6.0.0.0.0.0.0.0.1.0.0.1" expl="VC for filter_sum_indic_div" proved="true">
              <proof prover="4"><result status="valid" time="0.29" steps="145"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC filter_sum_indic_div.0.6.0.1" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="rewrite" proved="true" arg1="non_c_zero_spec" arg2="in" arg3="H">
      <goal name="VC filter_sum_indic_div.0.6.0.1.0" expl="VC for filter_sum_indic_div" proved="true">
      <proof prover="0"><result status="valid" time="0.45"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_indic_div.0.7" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H7">
    <goal name="VC filter_sum_indic_div.0.7.0" expl="VC for filter_sum_indic_div" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC filter_sum_indic_div.0.7.0.0" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="rewrite" proved="true" arg1="non_c_zero_spec" arg2="in" arg3="H">
      <goal name="VC filter_sum_indic_div.0.7.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
      <transf name="apply" proved="true" arg1="set_map_mem">
       <goal name="VC filter_sum_indic_div.0.7.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC filter_sum_indic_div.0.7.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="(mod e v)">
         <goal name="VC filter_sum_indic_div.0.7.0.0.0.0.0.0" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC filter_sum_indic_div.0.7.0.0.0.0.0.0.0" proved="true">
          <proof prover="4"><result status="valid" time="0.20" steps="137"/></proof>
          </goal>
          <goal name="VC filter_sum_indic_div.0.7.0.0.0.0.0.0.1" proved="true">
          <transf name="assert" proved="true" arg1="(div e v = p)">
           <goal name="VC filter_sum_indic_div.0.7.0.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
           <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
            <goal name="VC filter_sum_indic_div.0.7.0.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.22" steps="137"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC filter_sum_indic_div.0.7.0.0.0.0.0.0.1.1" proved="true">
           <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
            <goal name="VC filter_sum_indic_div.0.7.0.0.0.0.0.0.1.1.0" proved="true">
            <proof prover="2"><result status="valid" time="0.75"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC filter_sum_indic_div.0.7.0.1" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC filter_sum_indic_div.0.7.0.1.0" expl="VC for filter_sum_indic_div" proved="true">
      <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H1">
       <goal name="VC filter_sum_indic_div.0.7.0.1.0.0" expl="VC for filter_sum_indic_div" proved="true">
       <transf name="eliminate_definition" proved="true" >
        <goal name="VC filter_sum_indic_div.0.7.0.1.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
        <proof prover="4"><result status="valid" time="2.85" steps="140"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_indic_div.0.8" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC filter_sum_indic_div.0.8.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H8">
     <goal name="VC filter_sum_indic_div.0.8.0.0" expl="VC for filter_sum_indic_div" proved="true">
     <transf name="rewrite" proved="true" arg1="H9" arg2="in" arg3="H">
      <goal name="VC filter_sum_indic_div.0.8.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC filter_sum_indic_div.0.8.0.0.0.0" expl="VC for filter_sum_indic_div" proved="true">
       <transf name="apply" proved="true" arg1="set_mem_to_fset">
        <goal name="VC filter_sum_indic_div.0.8.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC filter_sum_indic_div.0.8.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.22" steps="139"/></proof>
         </goal>
         <goal name="VC filter_sum_indic_div.0.8.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.19" steps="139"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC filter_sum_indic_div.0.8.0.0.0.1" expl="VC for filter_sum_indic_div" proved="true">
       <transf name="assert" proved="true" arg1="( (fun (b:int) -&gt; (g @ mod ((p * v) + b) v) *. indic (div ((p * v) + b) v) p) e = g e)">
        <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0" expl="asserted formula" proved="true">
        <transf name="compute_hyp" proved="true" >
         <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0.0" expl="asserted formula" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="(mod ((p * v) + e) v)" arg2="e">
            <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.22" steps="141"/></proof>
            </goal>
            <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="4"><result status="valid" time="0.34" steps="141"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0.0.0.1" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="( mod ((p * v) + e) v)" arg2="e">
            <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0.0.0.1.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.23" steps="141"/></proof>
            </goal>
            <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="4"><result status="valid" time="0.23" steps="141"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC filter_sum_indic_div.0.8.0.0.0.1.1" expl="VC for filter_sum_indic_div" proved="true">
        <proof prover="0"><result status="valid" time="0.46"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_indic_div.0.9" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.81"/></proof>
   </goal>
   <goal name="VC filter_sum_indic_div.0.10" expl="precondition" proved="true">
   <transf name="exists" proved="true" arg1="(mod e&#39; v)">
    <goal name="VC filter_sum_indic_div.0.10.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC filter_sum_indic_div.0.10.0.0" proved="true">
     <transf name="assert" proved="true" arg1="(mem (mod e&#39; v)  (to_fset 0 v) )">
      <goal name="VC filter_sum_indic_div.0.10.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.77"/></proof>
      </goal>
      <goal name="VC filter_sum_indic_div.0.10.0.0.1" proved="true">
      <transf name="rewrite" proved="true" arg1="non_c_zero_spec">
       <goal name="VC filter_sum_indic_div.0.10.0.0.1.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC filter_sum_indic_div.0.10.0.0.1.0.0" proved="true">
        <proof prover="4"><result status="valid" time="0.15" steps="137"/></proof>
        </goal>
        <goal name="VC filter_sum_indic_div.0.10.0.0.1.0.1" proved="true">
        <proof prover="2"><result status="valid" time="2.67"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC filter_sum_indic_div.0.10.0.1" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC filter_sum_indic_div.0.10.0.1.0" proved="true">
      <transf name="assert" proved="true" arg1="(p = div e&#39; v)">
       <goal name="VC filter_sum_indic_div.0.10.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="case" proved="true" arg1="(p &lt;&gt; div e&#39; v)">
        <goal name="VC filter_sum_indic_div.0.10.0.1.0.0.0" expl="true case (asserted formula)" proved="true">
        <transf name="rewrite" proved="true" arg1="non_c_zero_spec" arg2="in" arg3="H">
         <goal name="VC filter_sum_indic_div.0.10.0.1.0.0.0.0" expl="true case (asserted formula)" proved="true">
         <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H">
          <goal name="VC filter_sum_indic_div.0.10.0.1.0.0.0.0.0" expl="true case (asserted formula)" proved="true">
          <proof prover="4"><result status="valid" time="0.28" steps="139"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC filter_sum_indic_div.0.10.0.1.0.0.1" expl="false case (asserted formula)" proved="true">
        <proof prover="4"><result status="valid" time="0.14" steps="137"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC filter_sum_indic_div.0.10.0.1.0.1" proved="true">
       <proof prover="2"><result status="valid" time="0.47"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_indic_div.0.11" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC filter_sum_indic_div.0.11.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="set_bijective1">
     <goal name="VC filter_sum_indic_div.0.11.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC filter_sum_indic_div.0.11.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="4.56"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC filter_sum_indic_div.0.11.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC filter_sum_indic_div.0.11.0.1.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.04"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC filter_sum_indic_div.0.11.0.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC filter_sum_indic_div.0.11.0.2.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC filter_sum_indic_div.0.11.0.2.0.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="(mod e&#39; v)">
        <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0" proved="true">
         <transf name="apply" proved="true" arg1="set_non_c_zero_member">
          <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(map1 ((fun (y0:int) (y1:int) -&gt; y0 + y1) @ (p * v)) (to_fset 0 v)),(fun (k:int) -&gt; (g @ mod k v) *. indic (div k v) p),e&#39;">
           <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.0.0.0" expl="destruct premise" proved="true">
            <transf name="apply" proved="true" arg1="H">
            </transf>
            </goal>
            <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
             <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
             <proof prover="2"><result status="valid" time="1.04"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(map1 ((fun (y0:int) (y1:int) -&gt; y0 + y1) @ (p * v)) (to_fset 0 v)),(fun (k:int) -&gt; (g @ mod k v) *. indic (div k v) p),e&#39;">
            <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <transf name="destruct" proved="true" arg1="Hinst">
             <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.1.0.0.0" expl="destruct premise" proved="true">
             <transf name="apply" proved="true" arg1="H">
             </transf>
             </goal>
             <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
             <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
              <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.0.1.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="0"><result status="valid" time="0.77"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.1" proved="true">
         <transf name="replace" proved="true" arg1="p" arg2="(div e&#39; v)">
          <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.1.0" proved="true">
          <proof prover="2"><result status="valid" time="0.90"/></proof>
          </goal>
          <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
          <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(map1 ((fun (y0:int) (y1:int) -&gt; y0 + y1) @ (p * v)) (to_fset 0 v)),(fun (k:int) -&gt; (g @ mod k v) *. indic (div k v) p),e&#39;">
           <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
           <transf name="destruct" proved="true" arg1="Hinst">
            <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.1.1.0.0" expl="destruct premise" proved="true">
            <transf name="apply" proved="true" arg1="H">
            </transf>
            </goal>
            <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.1.1.0.1" expl="equality hypothesis" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
             <goal name="VC filter_sum_indic_div.0.11.0.2.0.0.0.1.1.0.1.0" expl="equality hypothesis" proved="true">
             <proof prover="4"><result status="valid" time="0.25" steps="147"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC filter_sum_indic_div.0.12" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H5" arg2="in" arg3="H">
    <goal name="VC filter_sum_indic_div.0.12.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H2">
     <goal name="VC filter_sum_indic_div.0.12.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H">
      <goal name="VC filter_sum_indic_div.0.12.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H1">
       <goal name="VC filter_sum_indic_div.0.12.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="sum_eq_gen">
         <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="set_equal">
          <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),(fun (b:int) -&gt; (g @ mod ((p * v) + b) v) *. indic (div ((p * v) + b) v) p),e">
            <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="set_non_c_zero_member">
             <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="4"><result status="valid" time="0.24" steps="149"/></proof>
             </goal>
             <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
              <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(mod ((p * v) + e) v)" arg2="e" arg3="in" arg4="Hinst">
               <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="5.43"/></proof>
               </goal>
               <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
               <transf name="destruct" proved="true" arg1="Hinst">
                <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0.0.1.0.1.0" expl="destruct premise" proved="true">
                <transf name="apply" proved="true" arg1="H">
                </transf>
                </goal>
                <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
                <proof prover="4"><result status="valid" time="0.24" steps="151"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="set_non_c_zero_member">
            <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
            <proof prover="4"><result status="valid" time="0.22" steps="147"/></proof>
            </goal>
            <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(mod ((p * v) + e) v)" arg2="e">
              <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
              <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),g,e">
               <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="4"><result status="valid" time="0.26" steps="151"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1.0.1.0.1" expl="equality hypothesis" proved="true">
              <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),g,e">
               <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.0.1.0.1.0.1.0" expl="equality hypothesis" proved="true">
               <proof prover="4"><result status="valid" time="0.22" steps="151"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="instantiate" proved="true" arg1="get_non_c_zero_member" arg2="(to_fset 0 v),(fun (b:int) -&gt; (g @ mod ((p * v) + b) v) *. indic (div ((p * v) + b) v) p),x">
            <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="Hinst">
             <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="destruct" proved="true" arg1="Hinst">
              <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1.0.0.0.0.0" expl="destruct premise" proved="true">
              <transf name="apply" proved="true" arg1="H">
              </transf>
              </goal>
              <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(mod ((p * v) + x) v)" arg2="x">
               <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
               <proof prover="4"><result status="valid" time="0.24" steps="151"/></proof>
               </goal>
               <goal name="VC filter_sum_indic_div.0.12.0.0.0.0.0.1.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="4"><result status="valid" time="0.24" steps="151"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC filtered_ind_sum_mod_indic" expl="VC for filtered_ind_sum_mod_indic" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC filtered_ind_sum_mod_indic.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="125"/></proof>
  </goal>
  <goal name="VC filtered_ind_sum_mod_indic.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="125"/></proof>
  </goal>
  <goal name="VC filtered_ind_sum_mod_indic.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="129"/></proof>
  </goal>
  <goal name="VC filtered_ind_sum_mod_indic.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="129"/></proof>
  </goal>
  <goal name="VC filtered_ind_sum_mod_indic.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC filtered_ind_sum_mod_indic.4.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="129"/></proof>
   </goal>
   <goal name="VC filtered_ind_sum_mod_indic.4.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="129"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC filtered_ind_sum_mod_indic.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="4.14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC filtered_ind_sum_indic_div" expl="VC for filtered_ind_sum_indic_div" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC filtered_ind_sum_indic_div.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="125"/></proof>
  </goal>
  <goal name="VC filtered_ind_sum_indic_div.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="125"/></proof>
  </goal>
  <goal name="VC filtered_ind_sum_indic_div.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.15" steps="129"/></proof>
  </goal>
  <goal name="VC filtered_ind_sum_indic_div.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.14" steps="129"/></proof>
  </goal>
  <goal name="VC filtered_ind_sum_indic_div.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC filtered_ind_sum_indic_div.4.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="129"/></proof>
   </goal>
   <goal name="VC filtered_ind_sum_indic_div.4.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="129"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC filtered_ind_sum_indic_div.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC prod_mat_k_id_pre" expl="VC for prod_mat_k_id_pre" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC prod_mat_k_id_pre.0" expl="VC for prod_mat_k_id_pre" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC prod_mat_k_id_pre.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="129"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="131"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.65"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.3" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.69"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="135"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="135"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="137"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="137"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.10" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="139"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="139"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.12" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="137"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="137"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="137"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="139"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.16" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="141"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.17" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="142"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.18" expl="assertion" proved="true">
   <transf name="apply" proved="true" arg1="one_mult_t">
    <goal name="VC prod_mat_k_id_pre.0.18.0" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="0.25" steps="141"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.19" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="VC prod_mat_k_id_pre.0.19.0" expl="assertion" proved="true">
    <transf name="replace" proved="true" arg1="(columns (mat_k_id m n))" arg2="(power 2 n * columns m)" arg3="in" arg4="H3">
     <goal name="VC prod_mat_k_id_pre.0.19.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="H3">
      <goal name="VC prod_mat_k_id_pre.0.19.0.0.0" expl="assertion" proved="true">
      <transf name="replace" proved="true" arg1="(ind_sum
    (fun (k:int) -&gt;
      get m (div i (power 2 n)) k *. get o k (div j (power 2 n)))
    0 (columns m))" arg2="(ind_sum
  (fun (k:int) -&gt;
    indic (mod k (power 2 n)) (mod i (power 2 n))
    *. ((fun (e:int) -&gt;
          get m (div i (power 2 n)) e *. get o e (div j (power 2 n)))
        @ div k (power 2 n)))
  0 (power 2 n * columns m))">
       <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0" expl="assertion" proved="true">
       <transf name="apply" proved="true" arg1="ind_sum_eq">
        <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="H6">
           <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="H7">
            <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make">
             <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make">
              <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="0.73"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="0.14" steps="145"/></proof>
              </goal>
              <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.16" steps="145"/></proof>
             </goal>
             <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="H1">
        <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="one_mult_t" arg2="in" arg3="H">
         <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="H">
         </transf>
         </goal>
         <goal name="VC prod_mat_k_id_pre.0.19.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.27" steps="143"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC prod_mat_k_id_pre.0.19.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.28" steps="143"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.20" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="VC prod_mat_k_id_pre.0.20.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="ind_sum_null">
     <goal name="VC prod_mat_k_id_pre.0.20.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC prod_mat_k_id_pre.0.20.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="mat_k_id_values">
        <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="mat_k_id_values">
         <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="0.89"/></proof>
         </goal>
         <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.15" steps="141"/></proof>
         </goal>
         <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mat_k_id_columns" arg2="in" arg3="H">
          <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.14" steps="141"/></proof>
           </goal>
           <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0.2.0.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.14" steps="141"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.18" steps="141"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.16" steps="141"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.15" steps="141"/></proof>
        </goal>
        <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.16" steps="141"/></proof>
        </goal>
        <goal name="VC prod_mat_k_id_pre.0.20.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.66"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC prod_mat_k_id_pre.0.21" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="VC prod_mat_k_id_pre.0.21.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC prod_mat_k_id_pre.0.21.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="H">
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC prod_mat_k_id_pre.0.21.1" expl="postcondition" proved="true">
    <proof prover="4"><result status="valid" time="0.25" steps="141"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC prod_mat_k_id" expl="VC for prod_mat_k_id" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC prod_mat_k_id.0" expl="VC for prod_mat_k_id" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC prod_mat_k_id.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="121"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="123"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="123"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="125"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="121"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="123"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="121"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="123"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="121"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="121"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.10" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.11" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.60"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.12" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="125"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="127"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.14" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.35"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.15" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.64"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.16" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.17" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="prod_mat_k_id_pre">
    <goal name="VC prod_mat_k_id.0.17.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="assert_make">
     <goal name="VC prod_mat_k_id.0.17.0.0" expl="precondition" proved="true">
     <transf name="compute_hyp" proved="true" >
     </transf>
     </goal>
     <goal name="VC prod_mat_k_id.0.17.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.71"/></proof>
     </goal>
     <goal name="VC prod_mat_k_id.0.17.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.53"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC prod_mat_k_id.0.17.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.14" steps="139"/></proof>
    </goal>
    <goal name="VC prod_mat_k_id.0.17.2" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.14" steps="139"/></proof>
    </goal>
    <goal name="VC prod_mat_k_id.0.17.3" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.57"/></proof>
    </goal>
    <goal name="VC prod_mat_k_id.0.17.4" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.78"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC prod_mat_k_id.0.18" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="135"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.19" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="137"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.20" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.50"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id.0.21" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="H5">
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC prod_mat_k_id_dec" expl="VC for prod_mat_k_id_dec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC prod_mat_k_id_dec.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="mat_prod_k_id_spec">
   <goal name="VC prod_mat_k_id_dec.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="prod_mat_k_id_spec">
    <goal name="VC prod_mat_k_id_dec.0.0.0" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="0.22" steps="121"/></proof>
    </goal>
    <goal name="VC prod_mat_k_id_dec.0.0.1" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="0.25" steps="121"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC prod_mat_k_id_dec.0.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="121"/></proof>
   </goal>
   <goal name="VC prod_mat_k_id_dec.0.2" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="121"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC k_id_prod_mat_pre" expl="VC for k_id_prod_mat_pre" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC k_id_prod_mat_pre.0" expl="VC for k_id_prod_mat_pre" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC k_id_prod_mat_pre.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="129"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="131"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.68"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.3" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="137"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="139"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="137"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="137"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.10" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="139"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.34" steps="141"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.12" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC k_id_prod_mat_pre.0.12.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="(i  &lt; rows m * power 2 n)">
     <goal name="VC k_id_prod_mat_pre.0.12.0.0" expl="asserted formula" proved="true">
     <proof prover="4"><result status="valid" time="0.15" steps="141"/></proof>
     </goal>
     <goal name="VC k_id_prod_mat_pre.0.12.0.1" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.23" steps="143"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC k_id_prod_mat_pre.0.12.1" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="( div i (rows m)* rows m &lt; power 2 n * rows m)">
     <goal name="VC k_id_prod_mat_pre.0.12.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.42"/></proof>
     </goal>
     <goal name="VC k_id_prod_mat_pre.0.12.1.1" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.24" steps="145"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.13" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="3.25"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.14" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H3">
    <goal name="VC k_id_prod_mat_pre.0.14.0" expl="assertion" proved="true">
    <transf name="replace" proved="true" arg1="(columns (id_k_mat m n))" arg2="(columns m * power 2 n)">
     <goal name="VC k_id_prod_mat_pre.0.14.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="( ind_sum (fun (k:int) -&gt; get (id_k_mat m n) i k *. get (id_k_mat o n) k j) 0
  (columns m * power 2 n))" arg2="(ind_sum
  (fun (k:int) -&gt;
    ((fun (e:int) -&gt; get m (mod i (rows m)) e *. get o e (mod j (columns o)))
     @ mod k (columns m))
    *. indic (div k (columns m)) (div i (rows m)))
  0 (columns m * power 2 n))">
      <goal name="VC k_id_prod_mat_pre.0.14.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="H1">
       <goal name="VC k_id_prod_mat_pre.0.14.0.0.0.0" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="ind_sum_scal_rev">
        <goal name="VC k_id_prod_mat_pre.0.14.0.0.0.0.0" expl="assertion" proved="true">
        <transf name="apply" proved="true" arg1="ind_sum_eq">
         <goal name="VC k_id_prod_mat_pre.0.14.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC k_id_prod_mat_pre.0.14.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC k_id_prod_mat_pre.0.14.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="4"><result status="valid" time="0.28" steps="147"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC k_id_prod_mat_pre.0.14.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="ind_sum_eq">
       <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="H6">
          <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make">
           <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="H7">
             <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make">
              <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="0"><result status="valid" time="0.62"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="0.13" steps="145"/></proof>
              </goal>
              <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="0.14" steps="145"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.14" steps="145"/></proof>
           </goal>
           <goal name="VC k_id_prod_mat_pre.0.14.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC k_id_prod_mat_pre.0.14.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.25" steps="143"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.15" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H1">
    <goal name="VC k_id_prod_mat_pre.0.15.0" expl="assertion" proved="true">
    <transf name="apply" proved="true" arg1="ind_sum_null">
     <goal name="VC k_id_prod_mat_pre.0.15.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC k_id_prod_mat_pre.0.15.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="H4">
        <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H5">
         <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make">
          <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make">
           <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="0.46"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="0.42"/></proof>
           </goal>
           <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.14" steps="141"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.15" steps="141"/></proof>
          </goal>
          <goal name="VC k_id_prod_mat_pre.0.15.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.45"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC k_id_prod_mat_pre.0.16" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="VC k_id_prod_mat_pre.0.16.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="one_mult_t">
     <goal name="VC k_id_prod_mat_pre.0.16.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H2">
      <goal name="VC k_id_prod_mat_pre.0.16.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(  ind_sum (fun (k:int) -&gt; get (id_k_mat m n) i k *. get (id_k_mat o n) k j) 0
  (columns (id_k_mat m n)))" arg2="(ind_sum
  (fun (k:int) -&gt;
    ((fun (e:int) -&gt; get m (mod i (rows m)) e *. get o e (mod j (columns o)))
     @ mod k (columns m))
    *. indic (div k (columns m)) (div i (rows m)))
  0 (columns m * power 2 n))">
        <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="H2">
        </transf>
        </goal>
        <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="ind_sum_eq_gen">
         <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.14" steps="143"/></proof>
         </goal>
         <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.32" steps="145"/></proof>
         </goal>
         <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="id_k_mat_values">
            <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="id_k_mat_values">
             <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="0.63"/></proof>
             </goal>
             <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.15" steps="147"/></proof>
             </goal>
             <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0.2" expl="rewrite premises" proved="true">
             <transf name="rewrite" proved="true" arg1="id_k_mat_columns" arg2="in" arg3="H">
              <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0.2.0" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0.2.0.0" expl="rewrite premises" proved="true">
               <proof prover="4"><result status="valid" time="0.15" steps="147"/></proof>
               </goal>
               <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0.2.0.1" expl="rewrite premises" proved="true">
               <proof prover="4"><result status="valid" time="0.16" steps="147"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0.2.1" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="0.15" steps="147"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.0.3" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.16" steps="147"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="4"><result status="valid" time="0.15" steps="147"/></proof>
            </goal>
            <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="4"><result status="valid" time="0.16" steps="147"/></proof>
            </goal>
            <goal name="VC k_id_prod_mat_pre.0.16.0.0.0.0.1.2.0.0.3" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="0.44"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC k_id_prod_mat_pre.0.16.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.32" steps="145"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC k_id_prod_mat_pre.0.16.1" expl="postcondition" proved="true">
    <proof prover="4"><result status="valid" time="0.25" steps="141"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC k_id_prod_mat" expl="VC for k_id_prod_mat" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC k_id_prod_mat.0" expl="VC for k_id_prod_mat" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC k_id_prod_mat.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="123"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="125"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="123"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="123"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="121"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="121"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.6" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.38"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.7" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.34"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="125"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="127"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.10" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.37"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.11" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.75"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.12" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.59"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.13" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="assert_make">
    <goal name="VC k_id_prod_mat.0.13.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="k_id_prod_mat_pre">
     <goal name="VC k_id_prod_mat.0.13.0.0" expl="precondition" proved="true">
     <transf name="compute_hyp" proved="true" >
     </transf>
     </goal>
     <goal name="VC k_id_prod_mat.0.13.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC k_id_prod_mat.0.13.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.13" steps="139"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC k_id_prod_mat.0.13.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.15" steps="139"/></proof>
     </goal>
     <goal name="VC k_id_prod_mat.0.13.0.3" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.63"/></proof>
     </goal>
     <goal name="VC k_id_prod_mat.0.13.0.4" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="0.51"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC k_id_prod_mat.0.13.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.50"/></proof>
    </goal>
    <goal name="VC k_id_prod_mat.0.13.2" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.39"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC k_id_prod_mat.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="137"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.16" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.69"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat.0.17" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="H5">
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC k_id_prod_mat_dec" expl="VC for k_id_prod_mat_dec" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC k_id_prod_mat_dec.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="id_k_mat_prod_spec">
   <goal name="VC k_id_prod_mat_dec.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="k_id_prod_mat_spec">
    <goal name="VC k_id_prod_mat_dec.0.0.0" expl="postcondition" proved="true">
    <transf name="compute_hyp" proved="true" >
    </transf>
    </goal>
    <goal name="VC k_id_prod_mat_dec.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.14" steps="121"/></proof>
    </goal>
    <goal name="VC k_id_prod_mat_dec.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.14" steps="121"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC k_id_prod_mat_dec.0.1" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="121"/></proof>
   </goal>
   <goal name="VC k_id_prod_mat_dec.0.2" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="121"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC split_ne_pre" expl="VC for split_ne_pre" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC split_ne_pre.0" expl="VC for split_ne_pre" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC split_ne_pre.0.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_ne_pre.0.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.53"/></proof>
    </goal>
    <goal name="VC split_ne_pre.0.0.1" expl="assertion" proved="true">
    <proof prover="4"><result status="valid" time="0.23" steps="143"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.10" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="145"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="147"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.12" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="147"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="149"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="149"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="149"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.16" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="( power 2 (nc1 + nr2))" arg2="(power 2 nc1 * power 2 nr2)">
    <goal name="VC split_ne_pre.0.16.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="((power 2 nc1 * div i (power 2 nr1)) &lt;= (power 2 nc1 * (power 2 nr2 -1)))">
     <goal name="VC split_ne_pre.0.16.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(div i (power 2 nr1) &lt;= power 2 nr2 -1)">
      <goal name="VC split_ne_pre.0.16.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.42"/></proof>
      </goal>
      <goal name="VC split_ne_pre.0.16.0.0.1" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(div i (power 2 nr1) * (power 2 nr1) + mod  i (power 2 nr1) &lt;= power 2 nr2 * power 2 nr1)">
       <goal name="VC split_ne_pre.0.16.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="4"><result status="valid" time="0.32" steps="153"/></proof>
       </goal>
       <goal name="VC split_ne_pre.0.16.0.0.1.1" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="0.68"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC split_ne_pre.0.16.0.1" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.51"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC split_ne_pre.0.16.1" expl="equality hypothesis" proved="true">
    <proof prover="4"><result status="valid" time="0.32" steps="151"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.17" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="151"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.18" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="151"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.19" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="151"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.20" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="151"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.21" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="153"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.22" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="153"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.23" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="153"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.24" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="153"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.25" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="153"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.26" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="155"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.27" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="155"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.28" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_ne_pre.0.28.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(rows m1)" arg2="(power 2 nr1)">
     <goal name="VC split_ne_pre.0.28.0.0" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.15" steps="155"/></proof>
     </goal>
     <goal name="VC split_ne_pre.0.28.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.15" steps="155"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC split_ne_pre.0.28.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.25" steps="155"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.29" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_ne_pre.0.29.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(columns m1)" arg2="(power 2 nc1)">
     <goal name="VC split_ne_pre.0.29.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.69"/></proof>
     </goal>
     <goal name="VC split_ne_pre.0.29.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.14" steps="156"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC split_ne_pre.0.29.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.16" steps="156"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.30" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="157"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.31" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_ne_pre.0.31.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(rows m2)" arg2="(power 2 nr2)">
     <goal name="VC split_ne_pre.0.31.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.51"/></proof>
     </goal>
     <goal name="VC split_ne_pre.0.31.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.15" steps="157"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC split_ne_pre.0.31.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.17" steps="157"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.32" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_ne_pre.0.32.0" expl="precondition" proved="true">
    <transf name="replace" proved="true" arg1="(columns m2)" arg2="(power 2 nc2)">
     <goal name="VC split_ne_pre.0.32.0.0" expl="precondition" proved="true">
     <proof prover="4"><result status="valid" time="0.15" steps="160"/></proof>
     </goal>
     <goal name="VC split_ne_pre.0.32.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.16" steps="160"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC split_ne_pre.0.32.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.15" steps="160"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.33" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="159"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.34" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="159"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.35" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="159"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.36" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="163"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.37" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.70"/></proof>
   </goal>
   <goal name="VC split_ne_pre.0.38" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC split_ne_pre.0.38.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="id_k_mat_values">
     <goal name="VC split_ne_pre.0.38.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_k_id_values">
      <goal name="VC split_ne_pre.0.38.0.0.0" expl="precondition" proved="true">
      <transf name="case" proved="true" arg1="(((indic (div i (rows m1)) (div k (columns m1))
    *. get m1 (mod i (rows m1)) (mod k (columns m1)))
   *. (indic (mod k (power 2 nc1)) (mod j (power 2 nc1))
       *. get m2 (div k (power 2 nc1)) (div j (power 2 nc1)))) &lt;&gt; c_zero)">
       <goal name="VC split_ne_pre.0.38.0.0.0.0" expl="true case (precondition)" proved="true">
       <transf name="assert" proved="true" arg1="(indic (div i (rows m1)) (div k (columns m1)) &lt;&gt; c_zero)">
        <goal name="VC split_ne_pre.0.38.0.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="4"><result status="valid" time="0.71" steps="171"/></proof>
        </goal>
        <goal name="VC split_ne_pre.0.38.0.0.0.0.1" expl="true case (precondition)" proved="true">
        <proof prover="0"><result status="valid" time="0.45"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC split_ne_pre.0.38.0.0.0.1" expl="false case (precondition)" proved="true">
       <proof prover="4"><result status="valid" time="0.17" steps="169"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC split_ne_pre.0.38.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.28" steps="167"/></proof>
      </goal>
      <goal name="VC split_ne_pre.0.38.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
      </goal>
      <goal name="VC split_ne_pre.0.38.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.17" steps="167"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC split_ne_pre.0.38.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.17" steps="167"/></proof>
     </goal>
     <goal name="VC split_ne_pre.0.38.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.17" steps="167"/></proof>
     </goal>
     <goal name="VC split_ne_pre.0.38.0.3" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.17" steps="167"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.39" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_ne_pre.0.39.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.17" steps="165"/></proof>
    </goal>
    <goal name="VC split_ne_pre.0.39.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.16" steps="165"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.40" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_ne_pre.0.40.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.17" steps="166"/></proof>
    </goal>
    <goal name="VC split_ne_pre.0.40.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.17" steps="166"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne_pre.0.41" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="mat_mult_values">
    <goal name="VC split_ne_pre.0.41.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(columns (id_k_mat m1 nr2))" arg2="(power 2 nr2 * power 2 nc1)">
     <goal name="VC split_ne_pre.0.41.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H4">
      <goal name="VC split_ne_pre.0.41.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_values">
       <goal name="VC split_ne_pre.0.41.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="2"><result status="valid" time="0.71"/></proof>
       </goal>
       <goal name="VC split_ne_pre.0.41.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC split_ne_pre.0.41.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC split_ne_pre.0.41.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
    </goal>
    <goal name="VC split_ne_pre.0.41.2" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.75"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC split_nw_pre" expl="VC for split_nw_pre" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC split_nw_pre.0" expl="VC for split_nw_pre" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC split_nw_pre.0.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_nw_pre.0.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="0.62"/></proof>
    </goal>
    <goal name="VC split_nw_pre.0.0.1" expl="assertion" proved="true">
    <proof prover="4"><result status="valid" time="0.26" steps="143"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw_pre.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.10" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="145"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="147"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.12" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="147"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.13" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_nw_pre.0.13.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.27" steps="150"/></proof>
    </goal>
    <goal name="VC split_nw_pre.0.13.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.61" steps="150"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw_pre.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="149"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="149"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.16" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_nw_pre.0.16.0" expl="precondition" proved="true">
    <transf name="assert" proved="true" arg1="( (power 2 nr2 * div j (power 2 nc2)) &lt;= power 2 nr2 * (power 2 nc1 -1))">
     <goal name="VC split_nw_pre.0.16.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="( (div j (power 2 nc2)) &lt;= (power 2 nc1 -1))">
      <goal name="VC split_nw_pre.0.16.0.0.0" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.66"/></proof>
      </goal>
      <goal name="VC split_nw_pre.0.16.0.0.1" expl="asserted formula" proved="true">
      <proof prover="0"><result status="valid" time="0.62"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC split_nw_pre.0.16.0.1" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.70"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw_pre.0.17" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="151"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.18" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="151"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.19" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="151"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.20" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="151"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.21" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="153"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.22" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="153"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.23" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="153"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.24" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="153"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.25" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="153"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.26" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="155"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.27" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="155"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.28" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="155"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.29" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_nw_pre.0.29.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.72"/></proof>
    </goal>
    <goal name="VC split_nw_pre.0.29.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.22" steps="156"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw_pre.0.30" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="157"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.31" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_nw_pre.0.31.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.74"/></proof>
    </goal>
    <goal name="VC split_nw_pre.0.31.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.17" steps="157"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw_pre.0.32" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(columns m2 * power 2 nc1)" arg2="(power 2 (nc1 +nc2))">
    <goal name="VC split_nw_pre.0.32.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.16"/></proof>
    </goal>
    <goal name="VC split_nw_pre.0.32.1" expl="equality hypothesis" proved="true">
    <proof prover="4"><result status="valid" time="0.41" steps="162"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw_pre.0.33" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="159"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.34" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="159"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.35" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="159"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.36" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="163"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.37" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC split_nw_pre.0.37.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.44"/></proof>
    </goal>
    <goal name="VC split_nw_pre.0.37.1" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.16" steps="159"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw_pre.0.38" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC split_nw_pre.0.38.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="mat_k_id_values">
     <goal name="VC split_nw_pre.0.38.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="id_k_mat_values">
      <goal name="VC split_nw_pre.0.38.0.0.0" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="0.51"/></proof>
      </goal>
      <goal name="VC split_nw_pre.0.38.0.0.1" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(columns m1)" arg2="(power 2 nc1)">
       <goal name="VC split_nw_pre.0.38.0.0.1.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC split_nw_pre.0.38.0.0.1.0.0" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.14" steps="168"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC split_nw_pre.0.38.0.0.1.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="0.25" steps="168"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC split_nw_pre.0.38.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.15" steps="168"/></proof>
      </goal>
      <goal name="VC split_nw_pre.0.38.0.0.3" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(rows m1)" arg2="(power 2 nr1)">
       <goal name="VC split_nw_pre.0.38.0.0.3.0" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.15" steps="168"/></proof>
       </goal>
       <goal name="VC split_nw_pre.0.38.0.0.3.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="0.17" steps="168"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC split_nw_pre.0.38.0.1" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(rows m1)" arg2="(power 2 nr1)">
      <goal name="VC split_nw_pre.0.38.0.1.0" expl="rewrite premises" proved="true">
      <transf name="replace" proved="true" arg1="(rows m2)" arg2="(power 2 nr2)">
       <goal name="VC split_nw_pre.0.38.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.20" steps="168"/></proof>
       </goal>
       <goal name="VC split_nw_pre.0.38.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="0.17" steps="168"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC split_nw_pre.0.38.0.1.1" expl="equality hypothesis" proved="true">
      <proof prover="4"><result status="valid" time="0.17" steps="168"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC split_nw_pre.0.38.0.2" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(columns m2)" arg2="(power 2 nc2)">
      <goal name="VC split_nw_pre.0.38.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.15" steps="168"/></proof>
      </goal>
      <goal name="VC split_nw_pre.0.38.0.2.1" expl="equality hypothesis" proved="true">
      <proof prover="4"><result status="valid" time="0.14" steps="168"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC split_nw_pre.0.38.0.3" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.17" steps="168"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw_pre.0.39" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="165"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.40" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="166"/></proof>
   </goal>
   <goal name="VC split_nw_pre.0.41" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="mat_mult_values">
    <goal name="VC split_nw_pre.0.41.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(columns (mat_k_id m1 nr2))" arg2="(power 2 nc1 * power 2 nr2)">
     <goal name="VC split_nw_pre.0.41.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H4">
      <goal name="VC split_nw_pre.0.41.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC split_nw_pre.0.41.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="mat_k_id_values">
        <goal name="VC split_nw_pre.0.41.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="id_k_mat_values">
         <goal name="VC split_nw_pre.0.41.0.0.0.0.0.0" expl="postcondition" proved="true">
         <proof prover="2"><result status="valid" time="0.75"/></proof>
         </goal>
         <goal name="VC split_nw_pre.0.41.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC split_nw_pre.0.41.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC split_nw_pre.0.41.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC split_nw_pre.0.41.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.62"/></proof>
          </goal>
          <goal name="VC split_nw_pre.0.41.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.15" steps="167"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC split_nw_pre.0.41.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.27" steps="167"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC split_nw_pre.0.41.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC split_nw_pre.0.41.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.17" steps="167"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC split_nw_pre.0.41.0.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC split_nw_pre.0.41.0.0.0.0.2.0" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.17" steps="167"/></proof>
         </goal>
         <goal name="VC split_nw_pre.0.41.0.0.0.0.2.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.26" steps="167"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC split_nw_pre.0.41.0.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.83"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC split_nw_pre.0.41.0.1" expl="equality hypothesis" proved="true">
     <proof prover="4"><result status="valid" time="0.21" steps="167"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC split_nw_pre.0.41.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
    </goal>
    <goal name="VC split_nw_pre.0.41.2" expl="rewrite premises" proved="true">
    <transf name="apply" proved="true" arg1="set_valid_index">
     <goal name="VC split_nw_pre.0.41.2.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.40"/></proof>
     </goal>
     <goal name="VC split_nw_pre.0.41.2.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC split_nw_pre.0.41.2.1.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
      </goal>
      <goal name="VC split_nw_pre.0.41.2.1.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="mat_mult_columns">
       <goal name="VC split_nw_pre.0.41.2.1.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(columns (id_k_mat m2 nc1))" arg2="(columns m1 * columns m2)">
        <goal name="VC split_nw_pre.0.41.2.1.1.0.0" expl="apply premises" proved="true">
        <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
        </goal>
        <goal name="VC split_nw_pre.0.41.2.1.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="case" proved="true" arg1="(nc1 = 0)">
         <goal name="VC split_nw_pre.0.41.2.1.1.0.1.0" expl="true case (equality hypothesis)" proved="true">
         <proof prover="4"><result status="valid" time="0.83" steps="171"/></proof>
         </goal>
         <goal name="VC split_nw_pre.0.41.2.1.1.0.1.1" expl="false case (equality hypothesis)" proved="true">
         <proof prover="4"><result status="valid" time="0.75" steps="171"/></proof>
         </goal>
        </transf>
        <transf name="rewrite" proved="true" arg1="id_k_mat_columns">
         <goal name="VC split_nw_pre.0.41.2.1.1.0.1.0" expl="equality hypothesis" proved="true">
         <proof prover="4"><result status="valid" time="0.16" steps="167"/></proof>
         </goal>
         <goal name="VC split_nw_pre.0.41.2.1.1.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.28" steps="167"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC split_nw_pre.0.41.2.1.1.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.17" steps="167"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC split_ne" expl="VC for split_ne" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC split_ne.0" expl="VC for split_ne" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC split_ne.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="137"/></proof>
   </goal>
   <goal name="VC split_ne.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="139"/></proof>
   </goal>
   <goal name="VC split_ne.0.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.65"/></proof>
   </goal>
   <goal name="VC split_ne.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.28" steps="147"/></proof>
   </goal>
   <goal name="VC split_ne.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="149"/></proof>
   </goal>
   <goal name="VC split_ne.0.5" expl="precondition" proved="true">
   <transf name="instantiate" proved="true" arg1="split_ne_pre" arg2="m1,m2,nc1,nc2,nr1,nr2,i,j">
    <goal name="VC split_ne.0.5.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.47"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_ne.0.6" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="147"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC split_nw" expl="VC for split_nw" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC split_nw.0" expl="VC for split_nw" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC split_nw.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="137"/></proof>
   </goal>
   <goal name="VC split_nw.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="139"/></proof>
   </goal>
   <goal name="VC split_nw.0.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.39"/></proof>
   </goal>
   <goal name="VC split_nw.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.28" steps="147"/></proof>
   </goal>
   <goal name="VC split_nw.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.28" steps="149"/></proof>
   </goal>
   <goal name="VC split_nw.0.5" expl="precondition" proved="true">
   <transf name="instantiate" proved="true" arg1="split_nw_pre" arg2="m1,m2,nc1,nc2,nr1,nr2,i,j">
    <goal name="VC split_nw.0.5.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.63"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC split_nw.0.6" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="147"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC shift_k_id" expl="VC for shift_k_id" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC shift_k_id.0" expl="VC for shift_k_id" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC shift_k_id.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="133"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="133"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="133"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="133"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="133"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="133"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="133"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="133"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="135"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="135"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.10" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="135"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.12" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="135"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="135"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="135"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="135"/></proof>
   </goal>
   <goal name="VC shift_k_id.0.16" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="139"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_mult_commut" expl="VC for kronecker_mult_commut" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC kronecker_mult_commut.0" expl="VC for kronecker_mult_commut" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_mult_commut.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="145"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_mult_commut.0.1.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.14" steps="149"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_mult_commut.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.12" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.13" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="154"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="155"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="156"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.10" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="155"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="155"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.12" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="157"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="157"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="159"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="159"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.16" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="159"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.17" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="159"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.18" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="159"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.19" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="159"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.20" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="159"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.21" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="159"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.22" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.23" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.14" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.24" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.25" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.26" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.27" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.28" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.29" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.30" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.28" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.31" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.32" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.33" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.34" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.21" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.35" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.36" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.37" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.38" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="165"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.39" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="167"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.40" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.51"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.41" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="173"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.42" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.15" steps="175"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.43" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.07"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.44" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_mult_commut.0.44.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.63"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_mult_commut.0.45" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="179"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.46" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="181"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.47" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="183"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.48" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.51"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.49" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_mult_commut.0.49.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="1.31"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_mult_commut.0.50" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.51" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.52" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.53" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.54" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.16" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.55" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.56" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.57" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_mult_commut.0.58" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(mat_mult (kronecker a b) (kronecker c d))" arg2="(mat_mult (mat_k_id (mat_mult a c) rb) (id_k_mat (mat_mult b d) cc))">
    <goal name="VC kronecker_mult_commut.0.58.0" expl="postcondition" proved="true">
    <proof prover="4"><result status="valid" time="0.17" steps="189"/></proof>
    </goal>
    <goal name="VC kronecker_mult_commut.0.58.1" expl="equality hypothesis" proved="true">
    <transf name="replace" proved="true" arg1="(id_k_mat (mat_mult b d) cc)" arg2="(k_id_prod_mat b d cc)">
     <goal name="VC kronecker_mult_commut.0.58.1.0" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(mat_k_id (mat_mult a c) rb)" arg2="(mat_prod_k_id a c rb)">
      <goal name="VC kronecker_mult_commut.0.58.1.0.0" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(kronecker a b)" arg2="(mat_mult (mat_k_id a rb) (id_k_mat b ca))">
       <goal name="VC kronecker_mult_commut.0.58.1.0.0.0" expl="equality hypothesis" proved="true">
       <transf name="replace" proved="true" arg1="(kronecker c d)" arg2="(mat_mult (mat_k_id c cb) (id_k_mat d cc))">
        <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(mat_prod_k_id a c rb)" arg2="(prod_mat_k_id a c rb)">
         <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="prod_mat_k_id_def">
          <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="rewrite" proved="true" arg1="k_id_prod_mat_def">
           <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
           <transf name="replace" proved="true" arg1="(mat_mult (mat_mult (mat_k_id a rb) (id_k_mat b ca))
  (mat_mult (mat_k_id c cb) (id_k_mat d cc)))" arg2="(mat_mult  (mat_k_id a rb) (mat_mult (mat_mult (id_k_mat b ca) (mat_k_id c cb)) (id_k_mat d cc)))">
            <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0.0" expl="equality hypothesis" proved="true">
            <proof prover="4"><result status="valid" time="0.17" steps="189"/></proof>
            </goal>
            <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="mat_mult_assoc">
             <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="mat_mult_assoc">
              <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="4"><result status="valid" time="0.16" steps="189"/></proof>
              </goal>
              <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="0.40"/></proof>
              </goal>
              <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="0.66"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.27"/></proof>
             </goal>
             <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="0.43"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.17" steps="189"/></proof>
           </goal>
           <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.16" steps="189"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.15" steps="189"/></proof>
          </goal>
          <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.14" steps="189"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="4"><result status="valid" time="0.15" steps="189"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_mult_commut.0.58.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="4"><result status="valid" time="0.16" steps="189"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_mult_commut.0.58.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="0.16" steps="189"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_mult_commut.0.58.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.46"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_mult_commut.0.58.1.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="0.72"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_mult_commut_p" expl="VC for kronecker_mult_commut_p" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_mult_commut_p.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="147"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="151"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="163"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="167"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.32" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.12" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="172"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.16" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.29" steps="172"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.30" steps="172"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="172"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="173"/></proof>
  </goal>
  <goal name="VC kronecker_mult_commut_p.20" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.20" steps="173"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_mult_commut_p_quant" expl="VC for kronecker_mult_commut_p_quant" proved="true">
 <proof prover="4"><result status="valid" time="0.25" steps="149"/></proof>
 </goal>
</theory>
<theory name="Kronecker_distr" proved="true">
 <goal name="VC kronecker_add_distr_l" expl="VC for kronecker_add_distr_l" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC kronecker_add_distr_l.0" expl="VC for kronecker_add_distr_l" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_add_distr_l.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="147"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="148"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.28" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.19" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="162"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.6" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H3">
    <goal name="VC kronecker_add_distr_l.0.6.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H6">
     <goal name="VC kronecker_add_distr_l.0.6.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="add_values">
      <goal name="VC kronecker_add_distr_l.0.6.0.0.0" expl="precondition" proved="true">
      <proof prover="0"><result status="valid" time="0.54"/></proof>
      </goal>
      <goal name="VC kronecker_add_distr_l.0.6.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.19" steps="165"/></proof>
      </goal>
      <goal name="VC kronecker_add_distr_l.0.6.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.21" steps="165"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_add_distr_l.0.6.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.38" steps="165"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.7" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.8" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="164"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_l.0.9" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.23" steps="165"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_add_distr_r" expl="VC for kronecker_add_distr_r" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC kronecker_add_distr_r.0" expl="VC for kronecker_add_distr_r" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_add_distr_r.0.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="147"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.34" steps="148"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.17" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.33" steps="153"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="161"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="162"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.6" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H3">
    <goal name="VC kronecker_add_distr_r.0.6.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H6">
     <goal name="VC kronecker_add_distr_r.0.6.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="goal_comm">
      <goal name="VC kronecker_add_distr_r.0.6.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="add_value">
       <goal name="VC kronecker_add_distr_r.0.6.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_values">
        <goal name="VC kronecker_add_distr_r.0.6.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_values">
         <goal name="VC kronecker_add_distr_r.0.6.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.69" steps="167"/></proof>
         </goal>
         <goal name="VC kronecker_add_distr_r.0.6.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.52"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_add_distr_r.0.6.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="0.73"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_add_distr_r.0.6.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.35" steps="165"/></proof>
       </goal>
       <goal name="VC kronecker_add_distr_r.0.6.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.22" steps="165"/></proof>
       </goal>
       <goal name="VC kronecker_add_distr_r.0.6.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.19" steps="165"/></proof>
       </goal>
       <goal name="VC kronecker_add_distr_r.0.6.0.0.0.4" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.63"/></proof>
       </goal>
       <goal name="VC kronecker_add_distr_r.0.6.0.0.0.5" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.56"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_add_distr_r.0.6.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.20" steps="165"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.7" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.8" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_add_distr_r.0.9" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="164"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_add_distr_r" expl="VC for kronecker_ket_add_distr_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_add_distr_r.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.74"/></proof>
  </goal>
  <goal name="VC kronecker_ket_add_distr_r.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.67"/></proof>
  </goal>
  <goal name="VC kronecker_ket_add_distr_r.2" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="add_ket_l_to_add_mat">
   <goal name="VC kronecker_ket_add_distr_r.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="add_ket_l_to_add_mat">
    <goal name="VC kronecker_ket_add_distr_r.2.0.0" expl="postcondition" proved="true">
    <proof prover="4"><result status="valid" time="0.31" steps="165"/></proof>
    </goal>
    <goal name="VC kronecker_ket_add_distr_r.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.43" steps="167"/></proof>
    </goal>
    <goal name="VC kronecker_ket_add_distr_r.2.0.2" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.33" steps="165"/></proof>
    </goal>
    <goal name="VC kronecker_ket_add_distr_r.2.0.3" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.39" steps="165"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_ket_add_distr_r.2.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.80"/></proof>
   </goal>
   <goal name="VC kronecker_ket_add_distr_r.2.2" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.42" steps="167"/></proof>
   </goal>
   <goal name="VC kronecker_ket_add_distr_r.2.3" expl="rewrite premises" proved="true">
   <proof prover="4"><result status="valid" time="0.43" steps="167"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_sum_distr_l" expl="VC for kronecker_sum_distr_l" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC kronecker_sum_distr_l.0" expl="VC for kronecker_sum_distr_l" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_sum_distr_l.0.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_sum_distr_l.0.0.0" expl="variant decrease" proved="true">
    <proof prover="4"><result status="valid" time="0.31" steps="159"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.0.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.79"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.36" steps="162"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.69"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.30" steps="169"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.4" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_l.0.4.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.4.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.4.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.77"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.4.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.4.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.4.1.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.93"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="173"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.6" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_l.0.6.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.6.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.6.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.82"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.6.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.6.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.6.1.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.85"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="177"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.29" steps="178"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="181"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.10" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_l.0.10.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.10.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.99"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.10.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.10.1.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.86"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.11" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.90"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.12" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_l.0.12.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.93"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.12.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.15"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="185"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.32" steps="185"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.30" steps="185"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.16" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.77"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.17" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_l.0.17.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.17.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.17.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.11"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.17.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.17.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.17.1.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.92"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.18" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H15">
    <goal name="VC kronecker_sum_distr_l.0.18.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.19" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H14">
    <goal name="VC kronecker_sum_distr_l.0.19.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.91"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.20" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="193"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.21" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.22" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="189"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.23" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_l.0.23.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.23.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.23.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.95"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.23.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.23.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.23.1.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.10"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.24" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.84"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.25" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_sum_distr_l.0.25.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="VC kronecker_sum_distr_l.0.25.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H27">
      <goal name="VC kronecker_sum_distr_l.0.25.0.0.0" expl="precondition" proved="true">
      <proof prover="4"><result status="valid" time="0.74" steps="198"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.25.1" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="VC kronecker_sum_distr_l.0.25.1.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H27">
      <goal name="VC kronecker_sum_distr_l.0.25.1.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_l.0.25.1.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_rows">
        <goal name="VC kronecker_sum_distr_l.0.25.1.0.0.0.0" expl="precondition" proved="true">
        <proof prover="4"><result status="valid" time="0.58" steps="198"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.26" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H4">
    <goal name="VC kronecker_sum_distr_l.0.26.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H26">
     <goal name="VC kronecker_sum_distr_l.0.26.0.0" expl="precondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.26.0.0.0" expl="precondition" proved="true">
      <proof prover="4"><result status="valid" time="0.76" steps="202"/></proof>
      </goal>
      <goal name="VC kronecker_sum_distr_l.0.26.0.0.1" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_l.0.26.0.0.1.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_columns">
        <goal name="VC kronecker_sum_distr_l.0.26.0.0.1.0.0" expl="precondition" proved="true">
        <proof prover="4"><result status="valid" time="0.73" steps="202"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.27" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_l.0.27.0" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="1.19" steps="206"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.27.1" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="1.01" steps="206"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.28" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.20"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.29" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H4">
    <goal name="VC kronecker_sum_distr_l.0.29.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.27" steps="203"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.30" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.39" steps="204"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.31" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(add_mat (f @ choose s) (mat_sum (remove (choose s) s) f))" arg2="(mat_sum s f)" arg3="in" arg4="H">
    <goal name="VC kronecker_sum_distr_l.0.31.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="VC kronecker_sum_distr_l.0.31.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="H25">
      <goal name="VC kronecker_sum_distr_l.0.31.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="H25">
       <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="H41">
        <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0" expl="assertion" proved="true">
        <transf name="apply" proved="true" arg1="add_mat_eq">
         <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="H16">
          <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="H39">
           <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="4"><result status="valid" time="1.95" steps="212"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="H15">
          <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="H37">
           <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="4"><result status="valid" time="2.61" steps="212"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.3" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="mat_sum_eq">
          <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.3.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.87"/></proof>
          </goal>
          <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.3.1" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="set_constant_size">
           <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.3.1.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="5.07"/></proof>
           </goal>
           <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.3.1.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="5.35"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC kronecker_sum_distr_l.0.31.0.0.0.0.0.3.2" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.16"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_sum_distr_l.0.31.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.87"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.31.1" expl="equality hypothesis" proved="true">
    <proof prover="4"><result status="valid" time="1.97" steps="212"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.32" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a) -&gt; kronecker (f @ k) m))" arg2="(kronecker (mat_sum s f) m )">
    <goal name="VC kronecker_sum_distr_l.0.32.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="1.30"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.32.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="VC kronecker_sum_distr_l.0.32.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_hyp" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.33" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a) -&gt; kronecker (f @ k) m))" arg2="(kronecker (mat_sum s f) m )">
    <goal name="VC kronecker_sum_distr_l.0.33.0" expl="assertion" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.33.0.0" expl="assertion" proved="true">
     <proof prover="2"><result status="valid" time="1.32"/></proof>
     </goal>
     <goal name="VC kronecker_sum_distr_l.0.33.0.1" expl="assertion" proved="true">
     <proof prover="2"><result status="valid" time="1.13"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.33.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="VC kronecker_sum_distr_l.0.33.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_hyp" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.34" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="VC kronecker_sum_distr_l.0.34.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.34.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.34.0.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_l.0.34.0.0.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
       <proof prover="3"><result status="valid" time="0.25"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_l.0.34.0.1" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.34.0.1.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <proof prover="2"><result status="valid" time="4.01"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.34.1" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.34.1.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.34.1.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_l.0.34.1.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H3">
        <goal name="VC kronecker_sum_distr_l.0.34.1.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_l.0.34.1.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.34.1.1.0" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="1.13"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.35" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H1">
    <goal name="VC kronecker_sum_distr_l.0.35.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.35.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.35.0.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <proof prover="3"><result status="valid" time="0.28"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_l.0.35.0.1" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.35.0.1.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_l.0.35.0.1.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
       <proof prover="4"><result status="valid" time="0.38" steps="163"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.35.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.35.1.0" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.35.1.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0" expl="VC for kronecker_sum_distr_l" proved="true">
       <transf name="apply" proved="true" arg1="rows_mat_sum">
        <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="4"><result status="valid" time="0.32" steps="221"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="set_constant_size">
         <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.04"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.1.1" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.05"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="kronecker_rows">
           <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_rows">
            <goal name="VC kronecker_sum_distr_l.0.35.1.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.05"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_l.0.35.1.1" expl="VC for kronecker_sum_distr_l" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.35.1.1.0" expl="VC for kronecker_sum_distr_l" proved="true">
      <proof prover="2"><result status="valid" time="1.36"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_l.0.36" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H2">
    <goal name="VC kronecker_sum_distr_l.0.36.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.36.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.36.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="mat_sum_cardone">
       <goal name="VC kronecker_sum_distr_l.0.36.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="mat_sum_cardone">
        <goal name="VC kronecker_sum_distr_l.0.36.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC kronecker_sum_distr_l.0.36.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.28" steps="165"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_sum_distr_l.0.36.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.36" steps="165"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_l.0.36.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_l.0.36.1.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_l.0.36.1.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="H8">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_sum_distr_r" expl="VC for kronecker_sum_distr_r" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC kronecker_sum_distr_r.0" expl="VC for kronecker_sum_distr_r" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_sum_distr_r.0.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_sum_distr_r.0.0.0" expl="variant decrease" proved="true">
    <proof prover="4"><result status="valid" time="0.26" steps="159"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.0.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.74"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.38" steps="162"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.29" steps="169"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.4" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_r.0.4.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.4.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.4.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.78"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.4.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.4.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.4.1.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.93"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="173"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.6" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_r.0.6.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.6.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.6.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.82"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.6.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.6.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.6.1.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.86"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.38" steps="177"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.37" steps="178"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="181"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.10" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_r.0.10.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.10.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.80"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.10.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.10.1.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.98"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.11" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.77"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.12" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_r.0.12.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="0.93"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.12.1" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.15"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="185"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="185"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.15" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="185"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.16" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.79"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.17" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_r.0.17.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.17.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.17.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.94"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.17.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.17.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.17.1.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.12"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.18" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H15">
    <goal name="VC kronecker_sum_distr_r.0.18.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.88"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.19" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H14">
    <goal name="VC kronecker_sum_distr_r.0.19.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="1.04"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.20" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.20" steps="193"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.21" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.29" steps="187"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.22" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="189"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.23" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_r.0.23.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.23.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.23.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.96"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.23.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.23.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.23.1.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.10"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.24" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.25" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_sum_distr_r.0.25.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="VC kronecker_sum_distr_r.0.25.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H27">
      <goal name="VC kronecker_sum_distr_r.0.25.0.0.0" expl="precondition" proved="true">
      <proof prover="4"><result status="valid" time="0.82" steps="198"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.25.1" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="VC kronecker_sum_distr_r.0.25.1.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H27">
      <goal name="VC kronecker_sum_distr_r.0.25.1.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_r.0.25.1.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_rows">
        <goal name="VC kronecker_sum_distr_r.0.25.1.0.0.0.0" expl="precondition" proved="true">
        <proof prover="4"><result status="valid" time="0.58" steps="198"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.26" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H4">
    <goal name="VC kronecker_sum_distr_r.0.26.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H26">
     <goal name="VC kronecker_sum_distr_r.0.26.0.0" expl="precondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.26.0.0.0" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="VC kronecker_sum_distr_r.0.26.0.0.1" expl="precondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_r.0.26.0.0.1.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_columns">
        <goal name="VC kronecker_sum_distr_r.0.26.0.0.1.0.0" expl="precondition" proved="true">
        <proof prover="4"><result status="valid" time="1.14" steps="202"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.27" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC kronecker_sum_distr_r.0.27.0" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="1.05" steps="206"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.27.1" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="1.31" steps="206"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.28" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.91"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.29" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H4">
    <goal name="VC kronecker_sum_distr_r.0.29.0" expl="precondition" proved="true">
    <proof prover="4"><result status="valid" time="0.29" steps="203"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.30" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.32" steps="204"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.31" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(add_mat (f @ choose s) (mat_sum (remove (choose s) s) f))" arg2="(mat_sum s f)" arg3="in" arg4="H2">
    <goal name="VC kronecker_sum_distr_r.0.31.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="H2">
     <goal name="VC kronecker_sum_distr_r.0.31.0.0" expl="assertion" proved="true">
     <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="H25">
      <goal name="VC kronecker_sum_distr_r.0.31.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="H25">
       <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0" expl="assertion" proved="true">
       <transf name="apply" proved="true" arg1="add_mat_eq">
        <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_rows">
         <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_rows">
          <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mult_eq">
           <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="4"><result status="valid" time="0.41" steps="209"/></proof>
           </goal>
           <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="4"><result status="valid" time="0.37" steps="209"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="kronecker_columns">
         <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="kronecker_columns">
          <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mult_eq">
           <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
           <proof prover="4"><result status="valid" time="0.22" steps="209"/></proof>
           </goal>
           <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
           <proof prover="4"><result status="valid" time="0.39" steps="209"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC kronecker_sum_distr_r.0.31.0.0.0.0.3" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="H41">
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_sum_distr_r.0.31.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.80"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.31.1" expl="equality hypothesis" proved="true">
    <proof prover="4"><result status="valid" time="2.14" steps="212"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.32" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a) -&gt; kronecker m (f @ k) ))" arg2="(kronecker m (mat_sum s f)  )">
    <goal name="VC kronecker_sum_distr_r.0.32.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="1.30"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.32.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="VC kronecker_sum_distr_r.0.32.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_hyp" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.33" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a) -&gt; kronecker m (f @ k) ))" arg2="(kronecker m (mat_sum s f)  )">
    <goal name="VC kronecker_sum_distr_r.0.33.0" expl="assertion" proved="true">
    <proof prover="2"><result status="valid" time="1.33"/></proof>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.33.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="H1">
     <goal name="VC kronecker_sum_distr_r.0.33.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_hyp" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.34" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="VC kronecker_sum_distr_r.0.34.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.34.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.34.0.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
       <transf name="rewrite" proved="true" arg1="kronecker_columns">
        <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
        <transf name="apply" proved="true" arg1="columns_mat_sum">
         <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.43" steps="157"/></proof>
         </goal>
         <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="set_constant_size">
          <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.01"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0.0.1.1" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="0.88"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_sum_distr_r.0.34.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="4.63"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_r.0.34.0.1" expl="VC for kronecker_sum_distr_r" proved="true">
     <proof prover="2"><result status="valid" time="3.92"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.34.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.34.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.34.1.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <transf name="apply" proved="true" arg1="H3">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_r.0.34.1.1" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.34.1.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <transf name="rewrite" proved="true" arg1="kronecker_columns">
       <goal name="VC kronecker_sum_distr_r.0.34.1.1.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
       <proof prover="4"><result status="valid" time="0.29" steps="217"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.35" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H1">
    <goal name="VC kronecker_sum_distr_r.0.35.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.35.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.35.0.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <proof prover="3"><result status="valid" time="0.32"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_r.0.35.0.1" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.35.0.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <proof prover="4"><result status="valid" time="0.43" steps="163"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.35.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.35.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.35.1.0.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <transf name="apply" proved="true" arg1="H3">
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_r.0.35.1.1" expl="VC for kronecker_sum_distr_r" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.35.1.1.0" expl="VC for kronecker_sum_distr_r" proved="true">
      <proof prover="2"><result status="valid" time="1.46"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_r.0.36" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H2">
    <goal name="VC kronecker_sum_distr_r.0.36.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.36.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.36.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="mat_sum_cardone">
       <goal name="VC kronecker_sum_distr_r.0.36.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="mat_sum_cardone">
        <goal name="VC kronecker_sum_distr_r.0.36.0.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="4"><result status="valid" time="0.43" steps="167"/></proof>
        </goal>
        <goal name="VC kronecker_sum_distr_r.0.36.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.37" steps="165"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_sum_distr_r.0.36.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.24" steps="165"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_r.0.36.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC kronecker_sum_distr_r.0.36.1.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC kronecker_sum_distr_r.0.36.1.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(add_mat (f @ choose s) (mat_sum (remove (choose s) s) f))" arg2="(mat_sum s f)" arg3="in" arg4="H20">
       <goal name="VC kronecker_sum_distr_r.0.36.1.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="H8">
       </transf>
       </goal>
       <goal name="VC kronecker_sum_distr_r.0.36.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="1.06"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC mat_sum_scalar" expl="VC for mat_sum_scalar" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC mat_sum_scalar.0" expl="VC for mat_sum_scalar" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC mat_sum_scalar.0.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.75"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.47" steps="164"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.2" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.40" steps="166"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.3" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.37" steps="168"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.4" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.31" steps="167"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.5" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.30" steps="161"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.6" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.29" steps="162"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.31" steps="165"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.29" steps="166"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.9" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.69"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.10" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_constant_size">
    <goal name="VC mat_sum_scalar.0.10.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC mat_sum_scalar.0.10.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="4.74"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC mat_sum_scalar.0.10.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC mat_sum_scalar.0.10.1.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="4.83"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_sum_scalar.0.11" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="( s_rows (remove (choose s) s) (fun (k:a1) -&gt; a *.. (f @ k)))" arg2="(s_rows (remove (choose s) s) f )">
    <goal name="VC mat_sum_scalar.0.11.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC mat_sum_scalar.0.11.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_rows">
      <goal name="VC mat_sum_scalar.0.11.0.0.0" expl="precondition" proved="true">
      <proof prover="4"><result status="valid" time="0.26" steps="171"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC mat_sum_scalar.0.11.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_s_rows">
     <goal name="VC mat_sum_scalar.0.11.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="set_constant_size">
      <goal name="VC mat_sum_scalar.0.11.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC mat_sum_scalar.0.11.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC mat_sum_scalar.0.11.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.93"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC mat_sum_scalar.0.11.1.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC mat_sum_scalar.0.11.1.0.1.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="4.08"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC mat_sum_scalar.0.11.1.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC mat_sum_scalar.0.11.1.1.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.17"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_sum_scalar.0.12" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(s_columns (remove (choose s) s) (fun (k:a1) -&gt; a *.. (f @ k)))" arg2="( s_columns (remove (choose s) s) f)">
    <goal name="VC mat_sum_scalar.0.12.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC mat_sum_scalar.0.12.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_columns">
      <goal name="VC mat_sum_scalar.0.12.0.0.0" expl="precondition" proved="true">
      <proof prover="4"><result status="valid" time="0.36" steps="173"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC mat_sum_scalar.0.12.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_s_columns">
     <goal name="VC mat_sum_scalar.0.12.1.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="set_constant_size">
      <goal name="VC mat_sum_scalar.0.12.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC mat_sum_scalar.0.12.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC mat_sum_scalar.0.12.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.82"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC mat_sum_scalar.0.12.1.0.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC mat_sum_scalar.0.12.1.0.1.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="4.46"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC mat_sum_scalar.0.12.1.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC mat_sum_scalar.0.12.1.1.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="0.98"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_sum_scalar.0.13" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.32" steps="175"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.14" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="169"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.15" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.74"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.16" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="173"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.17" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.46" steps="174"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.18" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC mat_sum_scalar.0.18.0" expl="variant decrease" proved="true">
    <proof prover="4"><result status="valid" time="0.26" steps="175"/></proof>
    </goal>
    <goal name="VC mat_sum_scalar.0.18.1" expl="variant decrease" proved="true">
    <proof prover="0"><result status="valid" time="0.87"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC mat_sum_scalar.0.19" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.26" steps="175"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.20" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.75"/></proof>
   </goal>
   <goal name="VC mat_sum_scalar.0.21" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="VC mat_sum_scalar.0.21.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC mat_sum_scalar.0.21.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="mat_sum_scalar">
      <goal name="VC mat_sum_scalar.0.21.0.0.0" expl="postcondition" proved="true">
      <proof prover="4"><result status="valid" time="0.23" steps="157"/></proof>
      </goal>
      <goal name="VC mat_sum_scalar.0.21.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.26" steps="157"/></proof>
      </goal>
      <goal name="VC mat_sum_scalar.0.21.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.31" steps="157"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC mat_sum_scalar.0.21.1" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC mat_sum_scalar.0.21.1.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(add (choose s) (remove (choose s) s))" arg2="s" arg3="in" arg4="H11">
      <goal name="VC mat_sum_scalar.0.21.1.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H11">
       <goal name="VC mat_sum_scalar.0.21.1.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H">
        <goal name="VC mat_sum_scalar.0.21.1.0.0.0.0" expl="postcondition" proved="true">
        <proof prover="2"><result status="valid" time="1.32"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC mat_sum_scalar.0.21.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="0.77"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_sum_distr_sc" expl="VC for kronecker_sum_distr_sc" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC kronecker_sum_distr_sc.0" expl="VC for kronecker_sum_distr_sc" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_sum_distr_sc.0.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC kronecker_sum_distr_sc.0.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.96"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.1" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC kronecker_sum_distr_sc.0.1.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.81"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.2" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC kronecker_sum_distr_sc.0.2.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.98"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.3" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC kronecker_sum_distr_sc.0.3.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="1.07"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.4" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC kronecker_sum_distr_sc.0.4.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="1.09"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.5" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC kronecker_sum_distr_sc.0.5.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="1.28"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.6" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H2">
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.7" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.33" steps="163"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.8" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.49" steps="171"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.9" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.32" steps="171"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.10" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H10">
   </transf>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.11" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.37" steps="179"/></proof>
   </goal>
   <goal name="VC kronecker_sum_distr_sc.0.12" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(mat_sum s (fun (k:a1) -&gt; kronecker (a *.. (f @ k)) m))" arg2="( mat_sum s (fun (k:a1) -&gt; a *.. ((fun (k1:a1) -&gt; kronecker (f @ k1) m) @ k)))">
    <goal name="VC kronecker_sum_distr_sc.0.12.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H">
    </transf>
    </goal>
    <goal name="VC kronecker_sum_distr_sc.0.12.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="mat_sum_eq">
     <goal name="VC kronecker_sum_distr_sc.0.12.1.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.30" steps="179"/></proof>
     </goal>
     <goal name="VC kronecker_sum_distr_sc.0.12.1.1" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="set_constant_size">
      <goal name="VC kronecker_sum_distr_sc.0.12.1.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC kronecker_sum_distr_sc.0.12.1.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC kronecker_sum_distr_sc.0.12.1.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="1.13"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_sum_distr_sc.0.12.1.1.1" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC kronecker_sum_distr_sc.0.12.1.1.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC kronecker_sum_distr_sc.0.12.1.1.1.0.0" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="1.18"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_sum_distr_sc.0.12.1.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC kronecker_sum_distr_sc.0.12.1.2.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="3.69"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_l" expl="VC for kronecker_ket_sum_distr_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_l.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="VC kronecker_ket_sum_distr_l.0.0" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="3.38"/></proof>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_l.0.1" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="2.75"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.34" steps="157"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="ket_sum_ket_l">
   <goal name="VC kronecker_ket_sum_distr_l.2.0" expl="apply premises" proved="true">
   <transf name="assert" proved="true" arg1="(0&lt;=&#39;l1)">
    <goal name="VC kronecker_ket_sum_distr_l.2.0.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
     <goal name="VC kronecker_ket_sum_distr_l.2.0.0.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="3.89"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l.2.0.0.1" expl="asserted formula" proved="true">
     <proof prover="4"><result status="valid" time="0.44" steps="169"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_l.2.0.1" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="0.59" steps="169"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC kronecker_ket_sum_distr_l.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
    <goal name="VC kronecker_ket_sum_distr_l.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
     <goal name="VC kronecker_ket_sum_distr_l.3.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="H1">
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.43" steps="169"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.25" steps="167"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l.3.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_ket_sum_distr_l.3.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC kronecker_ket_sum_distr_l.3.0.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.44" steps="171"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_l.3.0.1" expl="rewrite premises" proved="true">
    <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
     <goal name="VC kronecker_ket_sum_distr_l.3.0.1.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="3.87"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l.3.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.42" steps="171"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_l.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.25" steps="167"/></proof>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_l.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.44" steps="171"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_l_nol" expl="VC for kronecker_ket_sum_distr_l_nol" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_l_nol.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="VC kronecker_ket_sum_distr_l_nol.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_l_nol.0.0.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="2.49"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_l_nol.0.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_l_nol.0.1.0" expl="apply premises" proved="true">
    <proof prover="2"><result status="valid" time="2.68"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_nol.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="157"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_nol.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(cardinal s = 0)">
   <goal name="VC kronecker_ket_sum_distr_l_nol.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="165"/></proof>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_l_nol.2.1" expl="false case (postcondition)" proved="true">
   <transf name="apply" proved="true" arg1="ket_sum_ket_l">
    <goal name="VC kronecker_ket_sum_distr_l_nol.2.1.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
     <goal name="VC kronecker_ket_sum_distr_l_nol.2.1.0.0" expl="asserted formula" proved="true">
     <proof prover="4"><result status="valid" time="0.42" steps="169"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l_nol.2.1.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.67"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_nol.3" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(cardinal s = 0)">
   <goal name="VC kronecker_ket_sum_distr_l_nol.3.0" expl="true case (postcondition)" proved="true">
   <proof prover="4"><result status="valid" time="0.31" steps="167"/></proof>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_l_nol.3.1" expl="false case (postcondition)" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
     <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
      <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="H1">
      </transf>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.45" steps="171"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.26" steps="169"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.0.3" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.63" steps="173"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
      <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.1.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.46" steps="171"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.60" steps="173"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.27" steps="169"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l_nol.3.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.49" steps="173"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_l_rew" expl="VC for kronecker_ket_sum_distr_l_rew" proved="true">
 <proof prover="2"><result status="valid" time="3.08"/></proof>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_r" expl="VC for kronecker_ket_sum_distr_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_r.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="VC kronecker_ket_sum_distr_r.0.0" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="3.25"/></proof>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_r.0.1" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="2.74"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="157"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r.2" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC kronecker_ket_sum_distr_r.2.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="ket_sum_ket_l">
    <goal name="VC kronecker_ket_sum_distr_r.2.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="(0&lt;=&#39;l1)">
     <goal name="VC kronecker_ket_sum_distr_r.2.0.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
      <goal name="VC kronecker_ket_sum_distr_r.2.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="3.96"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_r.2.0.0.0.1" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.42" steps="169"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_r.2.0.0.1" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.48" steps="169"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r.3" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC kronecker_ket_sum_distr_r.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
    <goal name="VC kronecker_ket_sum_distr_r.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
     <goal name="VC kronecker_ket_sum_distr_r.3.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H1">
      <goal name="VC kronecker_ket_sum_distr_r.3.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_r.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.42" steps="169"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_r.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.25" steps="167"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(l1 +&#39; l2)" arg2="(l2 +&#39; l1)">
        <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3.0.0.0" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="kronecker_ket_l">
         <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.55" steps="171"/></proof>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.58"/></proof>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.34" steps="169"/></proof>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="0.58" steps="171"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_ket_sum_distr_r.3.0.0.3.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="4"><result status="valid" time="0.28" steps="169"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_r.3.0.1" expl="rewrite premises" proved="true">
    <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
     <goal name="VC kronecker_ket_sum_distr_r.3.0.1.0" expl="asserted formula" proved="true">
     <proof prover="3"><result status="valid" time="0.31"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_r.3.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.43" steps="171"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_r.3.0.2" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.24" steps="167"/></proof>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_r.3.0.3" expl="rewrite premises" proved="true">
    <proof prover="4"><result status="valid" time="0.45" steps="171"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_l_rev" expl="VC for kronecker_ket_sum_distr_l_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_l_rev.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.44" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rev.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.27" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rev.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.35" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rev.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.39" steps="161"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rev.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.78"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_r_rev" expl="VC for kronecker_ket_sum_distr_r_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_r_rev.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.36" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rev.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rev.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rev.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.37" steps="161"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rev.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_l_" expl="VC for kronecker_ket_sum_distr_l_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_l_.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.42" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.43" steps="163"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.32" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.74"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="VC kronecker_ket_sum_distr_l_.5.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_l_.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_def2">
     <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l_def2">
      <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket">
       <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_l_to_ket_gen">
        <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="(l1 +&#39; l2)">
         <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.0.0.0" proved="true">
         <proof prover="4"><result status="valid" time="0.45" steps="161"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="3.87"/></proof>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="3.14"/></proof>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
          <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
           <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="4"><result status="valid" time="0.38" steps="165"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.57" steps="165"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.24" steps="163"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="3.71"/></proof>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.44" steps="165"/></proof>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.29" steps="163"/></proof>
          </goal>
          <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_ket_rows">
           <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows m)" arg2="(power_ 2 l2)">
            <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.1.0.0" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="power__sum_rev">
             <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.1.0.0.0" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="3.77"/></proof>
             </goal>
             <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.24" steps="163"/></proof>
             </goal>
             <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.38" steps="165"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="0"><result status="valid" time="0.71"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.0.3.0.3.1.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.29" steps="163"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.43" steps="161"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.28" steps="159"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.29" steps="159"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l_.5.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.28" steps="159"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_l_.5.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_l_.5.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="4.83"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_l_nol_" expl="VC for kronecker_ket_sum_distr_l_nol_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_l_nol_.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.35" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_nol_.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.39" steps="163"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_nol_.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_nol_.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_nol_.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.87"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_nol_.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_def2">
     <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l_def2">
      <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket">
       <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="3.15"/></proof>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="3.75"/></proof>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="3.11"/></proof>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
          <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
           <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="4"><result status="valid" time="0.45" steps="165"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.43" steps="165"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.30" steps="163"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="3.23"/></proof>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.44" steps="163"/></proof>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.28" steps="163"/></proof>
          </goal>
          <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_ket_rows">
           <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows m)" arg2="(power_ 2 (ket_length m))">
            <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="power__sum_rev">
             <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0" expl="rewrite premises" proved="true">
             <transf name="replace" proved="true" arg1="( l1 +&#39;  (ket_length m))" arg2="(ket_length (kronecker (make_ket l1 (fun (_:int) -&gt; c_zero)) m))">
              <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.0" expl="rewrite premises" proved="true">
              <transf name="rewrite" proved="true" arg1="power_no_">
               <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.0.0" expl="rewrite premises" proved="true">
               <transf name="apply" proved="true" arg1="H">
               </transf>
               </goal>
               <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="4.15"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1" expl="equality hypothesis" proved="true">
              <transf name="assert" proved="true" arg1="(rows ((kronecker (make_ket l1 (fun (_:int) -&gt; c_zero)) m)) = power_ 2  (l1 +&#39; ket_length m))">
               <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0" expl="asserted formula" proved="true">
               <transf name="rewrite" proved="true" arg1="kronecker_rows">
                <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
                <transf name="rewrite" proved="true" arg1="make_ket_rows">
                 <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
                 <transf name="rewrite" proved="true" arg1="power__sum">
                  <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                  <transf name="apply" proved="true" arg1="mult_eq">
                   <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <proof prover="4"><result status="valid" time="0.29" steps="163"/></proof>
                   </goal>
                   <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="0"><result status="valid" time="0.69"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                  <proof prover="4"><result status="valid" time="0.26" steps="163"/></proof>
                  </goal>
                  <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                  <proof prover="4"><result status="valid" time="0.34" steps="165"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="4"><result status="valid" time="0.27" steps="163"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.0.1.1" expl="equality hypothesis" proved="true">
               <proof prover="2"><result status="valid" time="3.56"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.41" steps="163"/></proof>
             </goal>
             <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.42" steps="165"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="0"><result status="valid" time="0.94"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.0.3.0.3.1.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.24" steps="163"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.36" steps="161"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.26" steps="159"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.26" steps="159"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_l_nol_.5.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.25" steps="159"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_l_nol_.5.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="3.66"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_l_rew_" expl="VC for kronecker_ket_sum_distr_l_rew_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_l_rew_.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.46" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rew_.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.36" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rew_.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.34" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rew_.3" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_r_" expl="VC for kronecker_ket_sum_distr_r_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_r_.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.37" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.33" steps="163"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.76"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_.5" expl="postcondition" proved="true">
  <transf name="destruct" proved="true" arg1="H1">
   <goal name="VC kronecker_ket_sum_distr_r_.5.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_r_.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_def2">
     <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l_def2">
      <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_ket">
       <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_l_to_ket_gen">
        <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="exists" proved="true" arg1="(l2 +&#39; l1)">
         <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.0.0.0" proved="true">
         <proof prover="4"><result status="valid" time="0.35" steps="161"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="3.07"/></proof>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="3.86"/></proof>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
         <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
          <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="assert_make_ket_l">
           <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="4"><result status="valid" time="0.44" steps="165"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.44" steps="165"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.23" steps="163"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.36" steps="165"/></proof>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.2" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="ket_l_to_ket_gen">
          <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.2.0" expl="apply premises" proved="true">
          <transf name="exists" proved="true" arg1="l1">
           <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.2.0.0" proved="true">
           <proof prover="4"><result status="valid" time="0.40" steps="165"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.0" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.24" steps="163"/></proof>
          </goal>
          <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_ket_rows">
           <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.1.0" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="(rows m)" arg2="(power_ 2 l2)">
            <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.1.0.0" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="power__sum_rev">
             <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.1.0.0.0" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="3.93"/></proof>
             </goal>
             <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.48" steps="165"/></proof>
             </goal>
             <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.30" steps="163"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.1.0.1" expl="equality hypothesis" proved="true">
            <proof prover="0"><result status="valid" time="0.75"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.0.3.0.3.1.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.23" steps="163"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.35" steps="161"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.24" steps="159"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.25" steps="159"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_r_.5.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.24" steps="159"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_r_.5.1" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_r_.5.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H1">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_l_rev_" expl="VC for kronecker_ket_sum_distr_l_rev_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_l_rev_.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.34" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rev_.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rev_.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rev_.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.40" steps="161"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_l_rev_.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H1">
   <goal name="VC kronecker_ket_sum_distr_l_rev_.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_r_rev_" expl="VC for kronecker_ket_sum_distr_r_rev_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_r_rev_.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.53" steps="159"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rev_.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rev_.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="155"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rev_.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.37" steps="161"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rev_.4" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H1">
   <goal name="VC kronecker_ket_sum_distr_r_rev_.4.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_r_rew" expl="VC for kronecker_ket_sum_distr_r_rew" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_r_rew.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="165"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rew.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.50" steps="173"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rew.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.59" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rew.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_r_rew.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="4.40"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ket_sum_scalar" expl="VC for ket_sum_scalar" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC ket_sum_scalar.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="VC ket_sum_scalar.0.0" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="3.79"/></proof>
   </goal>
   <goal name="VC ket_sum_scalar.0.1" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="4.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC ket_sum_scalar.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="165"/></proof>
  </goal>
  <goal name="VC ket_sum_scalar.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(cardinal s = 0)">
   <goal name="VC ket_sum_scalar.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="4"><result status="valid" time="0.27" steps="165"/></proof>
   </goal>
   <goal name="VC ket_sum_scalar.2.1" expl="false case (postcondition)" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC ket_sum_scalar.2.1.0" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
     <goal name="VC ket_sum_scalar.2.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
      <goal name="VC ket_sum_scalar.2.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="H">
      </transf>
      </goal>
      <goal name="VC ket_sum_scalar.2.1.0.0.1" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l)">
       <goal name="VC ket_sum_scalar.2.1.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="4"><result status="valid" time="0.52" steps="169"/></proof>
       </goal>
       <goal name="VC ket_sum_scalar.2.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.50" steps="171"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC ket_sum_scalar.2.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.29" steps="167"/></proof>
      </goal>
      <goal name="VC ket_sum_scalar.2.1.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.48" steps="171"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC ket_sum_scalar.2.1.0.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l)">
      <goal name="VC ket_sum_scalar.2.1.0.1.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.54" steps="169"/></proof>
      </goal>
      <goal name="VC ket_sum_scalar.2.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.48" steps="171"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC ket_sum_scalar.2.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.26" steps="167"/></proof>
     </goal>
     <goal name="VC ket_sum_scalar.2.1.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC ket_sum_scalar.2.1.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC ket_sum_scalar.2.1.0.3.0.0" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.49" steps="171"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_sc" expl="VC for kronecker_ket_sum_distr_sc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_sc.0" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_constant_size">
   <goal name="VC kronecker_ket_sum_distr_sc.0.0" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="4.03"/></proof>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_sc.0.1" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="3.83"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_sc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="167"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_sc.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(cardinal s = 0)">
   <goal name="VC kronecker_ket_sum_distr_sc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="167"/></proof>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_sc.2.1" expl="false case (postcondition)" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC kronecker_ket_sum_distr_sc.2.1.0" expl="false case (postcondition)" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
     <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0" expl="false case (postcondition)" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l_spec1">
      <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0.0" expl="false case (postcondition)" proved="true">
      <transf name="apply" proved="true" arg1="H">
      </transf>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0.1" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
       <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0.1.0" expl="asserted formula" proved="true">
       <proof prover="4"><result status="valid" time="0.50" steps="171"/></proof>
       </goal>
       <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.21"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="0.26" steps="169"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0.3" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0.3.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.0.3.0.0" expl="rewrite premises" proved="true">
        <proof prover="4"><result status="valid" time="0.65" steps="173"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.1" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose s) ) l1)">
      <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.1.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.50" steps="171"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="0.79"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.27" steps="169"/></proof>
     </goal>
     <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_ket_l">
        <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.3.0.0.0" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="4.49"/></proof>
        </goal>
        <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.3.0.0.1" expl="apply premises" proved="true">
        <proof prover="4"><result status="valid" time="0.48" steps="173"/></proof>
        </goal>
        <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.3.0.0.2" expl="apply premises" proved="true">
        <proof prover="4"><result status="valid" time="0.50" steps="173"/></proof>
        </goal>
        <goal name="VC kronecker_ket_sum_distr_sc.2.1.0.3.0.0.3" expl="apply premises" proved="true">
        <proof prover="4"><result status="valid" time="0.37" steps="171"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_decomp_r" expl="VC for kronecker_decomp_r" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_decomp_r.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.47" steps="167"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_r.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.45" steps="169"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_r.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.62" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_r.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.62" steps="169"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_r.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.86"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_r.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.43" steps="169"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_r.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.33" steps="169"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_r.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker m n)" arg2="(kronecker m (ket_sum_l (n_bvs ln)
   (fun (x:bitvec) -&gt; get_ket n (bv_to_int x) *.. bv_to_ket x) ln))">
   <goal name="VC kronecker_decomp_r.7.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H">
    <goal name="VC kronecker_decomp_r.7.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC kronecker_decomp_r.7.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
      <goal name="VC kronecker_decomp_r.7.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.57" steps="176"/></proof>
      </goal>
      <goal name="VC kronecker_decomp_r.7.0.0.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="VC kronecker_decomp_r.7.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.38" steps="173"/></proof>
      </goal>
      <goal name="VC kronecker_decomp_r.7.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="5.01"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_decomp_r.7.1" expl="equality hypothesis" proved="true">
   <transf name="assert" proved="true" arg1="( n = (ket_sum_l (n_bvs ln)
   (fun (x:bitvec) -&gt; get_ket n (bv_to_int x) *.. bv_to_ket x) ln))">
    <goal name="VC kronecker_decomp_r.7.1.0" expl="asserted formula" proved="true">
    <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs ln)
    (fun (x:bitvec) -&gt; get_ket n (bv_to_int x) *.. bv_to_ket x) ln)" arg2="(ket_sum_l (n_bvs ln)
    (fun (bvx:bitvec) -&gt; get_ket n (bv_to_int bvx) *.. ket ln (bv_to_int bvx))
    ln)">
     <goal name="VC kronecker_decomp_r.7.1.0.0" expl="asserted formula" proved="true">
     <transf name="apply" proved="true" arg1="ket_decomp_bv_ket">
      <goal name="VC kronecker_decomp_r.7.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.50" steps="176"/></proof>
      </goal>
      <goal name="VC kronecker_decomp_r.7.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.53" steps="176"/></proof>
      </goal>
      <goal name="VC kronecker_decomp_r.7.1.0.0.2" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.52" steps="176"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_decomp_r.7.1.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="VC kronecker_decomp_r.7.1.0.1.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.54" steps="176"/></proof>
      </goal>
      <goal name="VC kronecker_decomp_r.7.1.0.1.1" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.27" steps="173"/></proof>
      </goal>
      <goal name="VC kronecker_decomp_r.7.1.0.1.2" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="0.83"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_decomp_r.7.1.1" expl="equality hypothesis" proved="true">
    <transf name="assert" proved="true" arg1="(forall o. n = o -&gt; kronecker m n = kronecker m o)">
     <goal name="VC kronecker_decomp_r.7.1.1.0" expl="asserted formula" proved="true">
     <proof prover="4"><result status="valid" time="0.35" steps="177"/></proof>
     </goal>
     <goal name="VC kronecker_decomp_r.7.1.1.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="h">
      <goal name="VC kronecker_decomp_r.7.1.1.1.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="h1">
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_decomp_l" expl="VC for kronecker_decomp_l" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_decomp_l.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.48" steps="167"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_l.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.60" steps="169"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_l.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.49" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_l.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.47" steps="169"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_l.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="5.60"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_l.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.27" steps="169"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_l.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.28" steps="169"/></proof>
  </goal>
  <goal name="VC kronecker_decomp_l.7" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(kronecker m n)" arg2="(kronecker ( ket_sum_l (n_bvs lm)
    (fun (bvx:bitvec) -&gt; get_ket m (bv_to_int bvx) *.. ket lm (bv_to_int bvx))
    lm) n)">
   <goal name="VC kronecker_decomp_l.7.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs lm)
   (fun (bvx:bitvec) -&gt; get_ket m (bv_to_int bvx) *.. ket lm (bv_to_int bvx))
   lm)" arg2="(ket_sum_l (n_bvs lm)
   (fun (x:bitvec) -&gt; get_ket m (bv_to_int x) *.. bv_to_ket x) lm)">
    <goal name="VC kronecker_decomp_l.7.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="VC kronecker_decomp_l.7.0.0.0" expl="postcondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC kronecker_decomp_l.7.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
       <goal name="VC kronecker_decomp_l.7.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="4"><result status="valid" time="0.64" steps="176"/></proof>
       </goal>
       <goal name="VC kronecker_decomp_l.7.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="VC kronecker_decomp_l.7.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="4"><result status="valid" time="0.36" steps="173"/></proof>
       </goal>
       <goal name="VC kronecker_decomp_l.7.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="4.26"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_decomp_l.7.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="VC kronecker_decomp_l.7.0.1.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.51" steps="176"/></proof>
     </goal>
     <goal name="VC kronecker_decomp_l.7.0.1.1" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.38" steps="173"/></proof>
     </goal>
     <goal name="VC kronecker_decomp_l.7.0.1.2" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.87"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_decomp_l.7.1" expl="equality hypothesis" proved="true">
   <proof prover="2"><result status="valid" time="4.52"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_ket_sum_distr_double" expl="VC for kronecker_ket_sum_distr_double" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_ket_sum_distr_double.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.58" steps="171"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.30" steps="165"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.28" steps="165"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.3" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_a_ket_l (f (choose (n_bvs i)) ) l1)">
   <goal name="VC kronecker_ket_sum_distr_double.3.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="3.91"/></proof>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_double.3.1" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(is_a_ket_l (g (choose (n_bvs j)) ) l2)">
    <goal name="VC kronecker_ket_sum_distr_double.3.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="3.80"/></proof>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_double.3.1.1" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="0.76"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.36" steps="167"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.5" expl="precondition" proved="true">
  <transf name="assert" proved="true" arg1="(is_a_ket_l (g (choose (n_bvs j)) ) l2)">
   <goal name="VC kronecker_ket_sum_distr_double.5.0" expl="asserted formula" proved="true">
   <proof prover="0"><result status="valid" time="1.02"/></proof>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_double.5.1" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="0.49" steps="174"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="177"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.56" steps="186"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.40" steps="179"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="179"/></proof>
  </goal>
  <goal name="VC kronecker_ket_sum_distr_double.10" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs (i +&#39; j))
    (fun (k:bitvec) -&gt; kronecker (f @ hpart k i) (g @ tpart k i)) (l1 +&#39; l2))" arg2="(ket_sum_l (n_bvs (j +&#39; i))
  (fun (bv:bitvec) -&gt;
    ((fun (bvx:bitvec) (bvy:bitvec) -&gt; kronecker (f @ bvx) (g @ bvy))
     @ hpart bv i)
    @ tpart bv i)
  (l1 +&#39; l2))">
   <goal name="VC kronecker_ket_sum_distr_double.10.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H16">
    <goal name="VC kronecker_ket_sum_distr_double.10.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.58" steps="188"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.26" steps="183"/></proof>
      </goal>
      <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="instantiate" proved="true" arg1="kronecker_ket_sum_distr_r" arg2="(n_bvs j),g,(f a),l2,l1">
         <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="Hinst">
           <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(l2 +&#39; l1)" arg2="(l1 +&#39; l2)">
            <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
            <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="4"><result status="valid" time="0.27" steps="185"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.64" steps="194"/></proof>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.62" steps="190"/></proof>
           </goal>
           <goal name="VC kronecker_ket_sum_distr_double.10.0.0.0.2.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.26" steps="185"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_ket_sum_distr_double.10.1" expl="equality hypothesis" proved="true">
   <transf name="apply" proved="true" arg1="ket_sum_eq">
    <goal name="VC kronecker_ket_sum_distr_double.10.1.0" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="0.63" steps="188"/></proof>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_double.10.1.1" expl="apply premises" proved="true">
    <proof prover="4"><result status="valid" time="0.25" steps="183"/></proof>
    </goal>
    <goal name="VC kronecker_ket_sum_distr_double.10.1.2" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_add_null" expl="VC for kronecker_add_null" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_add_null.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_null_mat">
   <goal name="VC kronecker_add_null.0.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_add_null.0.0.0" expl="apply premises" proved="true">
    <transf name="assert" proved="true" arg1="( get_ket (kronecker m2 x&#39;) i  = c_zero)">
     <goal name="VC kronecker_add_null.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="case" proved="true" arg1="(get_ket (kronecker m2 x&#39;) i = c_zero)">
      <goal name="VC kronecker_add_null.0.0.0.0.0" expl="true case (asserted formula)" proved="true">
      <proof prover="4"><result status="valid" time="0.39" steps="183"/></proof>
      </goal>
      <goal name="VC kronecker_add_null.0.0.0.0.1" expl="false case (asserted formula)" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
       <goal name="VC kronecker_add_null.0.0.0.0.1.0" expl="false case (asserted formula)" proved="true">
       <transf name="assert" proved="true" arg1="(ket_to_int x&#39; =  (mod i (rows x&#39;)))">
        <goal name="VC kronecker_add_null.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="ket_kronecker_values" arg2="in" arg3="h1">
         <goal name="VC kronecker_add_null.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
         <proof prover="2"><result status="valid" time="4.81"/></proof>
         </goal>
         <goal name="VC kronecker_add_null.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.70" steps="185"/></proof>
         </goal>
         <goal name="VC kronecker_add_null.0.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="0.63" steps="185"/></proof>
         </goal>
         <goal name="VC kronecker_add_null.0.0.0.0.1.0.0.3" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.68"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_add_null.0.0.0.0.1.0.1" expl="false case (asserted formula)" proved="true">
        <transf name="assert" proved="true" arg1="(get_ket (kronecker m1 x) i = c_zero)">
         <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
          <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
          <transf name="replace" proved="true" arg1="(get_ket x (mod i (rows x)))" arg2="c_zero">
           <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.0" expl="asserted formula" proved="true">
           <proof prover="4"><result status="valid" time="0.53" steps="187"/></proof>
           </goal>
           <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="replace" proved="true" arg1="x" arg2="(ket l2 (ket_to_int x))">
            <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="get__ket_value">
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <proof prover="2"><result status="valid" time="0.87"/></proof>
             </goal>
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.51" steps="187"/></proof>
             </goal>
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1.0.2.0" proved="true">
              <proof prover="4"><result status="valid" time="0.51" steps="187"/></proof>
              </goal>
              <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1.0.2.1" proved="true">
              <proof prover="0"><result status="valid" time="0.88"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="0.69"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="0"><result status="valid" time="0.99"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.51" steps="187"/></proof>
          </goal>
          <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="4"><result status="valid" time="0.52" steps="187"/></proof>
          </goal>
          <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="0.70"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1" expl="false case (asserted formula)" proved="true">
         <transf name="assert" proved="true" arg1="(get_ket (kronecker m x) i = c_zero)">
          <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
          <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
           <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0" expl="asserted formula" proved="true">
           <transf name="replace" proved="true" arg1="(get_ket x (mod i (rows x)))" arg2="c_zero">
            <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.60" steps="189"/></proof>
            </goal>
            <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="x" arg2="(ket l2 (ket_to_int x))">
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="get__ket_value">
              <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="2"><result status="valid" time="0.87"/></proof>
              </goal>
              <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="0.75" steps="189"/></proof>
              </goal>
              <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1.0.2" expl="rewrite premises" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1.0.2.0" proved="true">
               <proof prover="4"><result status="valid" time="0.56" steps="189"/></proof>
               </goal>
               <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1.0.2.1" proved="true">
               <proof prover="0"><result status="valid" time="0.79"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="0.73"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="0"><result status="valid" time="1.00"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.53" steps="189"/></proof>
           </goal>
           <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.2" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="0.54" steps="189"/></proof>
           </goal>
           <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.0.3" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.04"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.1" expl="false case (asserted formula)" proved="true">
          <transf name="replace" proved="true" arg1="(get_ket m2 (div i (rows x&#39;)) *. get_ket x&#39; (mod i (rows x&#39;)))" arg2="(get_ket (kronecker m2 x&#39;) i)">
           <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.1.0" expl="false case (asserted formula)" proved="true">
           <transf name="rewrite" proved="true" arg1="H1" arg2="in" arg3="h1">
            <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.1.0.0" expl="false case (asserted formula)" proved="true">
            <transf name="rewrite" proved="true" arg1="add_ket_l_value" arg2="in" arg3="h1">
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.1.0.0.0" expl="false case (asserted formula)" proved="true">
             <proof prover="4"><result status="valid" time="0.58" steps="189"/></proof>
             </goal>
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.1.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="5.87"/></proof>
             </goal>
             <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.1.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="0.70"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_add_null.0.0.0.0.1.0.1.1.1.1" expl="equality hypothesis" proved="true">
           <proof prover="2"><result status="valid" time="0.86"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_add_null.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.49" steps="185"/></proof>
       </goal>
       <goal name="VC kronecker_add_null.0.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.50" steps="185"/></proof>
       </goal>
       <goal name="VC kronecker_add_null.0.0.0.0.1.3" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.68"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_add_null.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.80"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_add_null.1" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_null_mat">
   <goal name="VC kronecker_add_null.1.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_add_null.1.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(get m2 i j)" arg2="(get_ket m2 i )">
     <goal name="VC kronecker_add_null.1.0.0.0" expl="apply premises" proved="true">
     <transf name="assert" proved="true" arg1="(get_ket (kronecker m2 x&#39;) (i *&#39; rows (x&#39;) +&#39; ket_to_int x&#39;) = get_ket m2 i)">
      <goal name="VC kronecker_add_null.1.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="rewrite" proved="true" arg1="ket_kronecker_values">
       <goal name="VC kronecker_add_null.1.0.0.0.0.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(div ((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;) (rows x&#39;))" arg2="i">
        <goal name="VC kronecker_add_null.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
        <transf name="replace" proved="true" arg1="(mod ((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;) (rows x&#39;))" arg2="(ket_to_int x&#39;)">
         <goal name="VC kronecker_add_null.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
         <transf name="apply" proved="true" arg1="mult_one_t">
          <goal name="VC kronecker_add_null.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="4"><result status="valid" time="0.54" steps="185"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC kronecker_add_null.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;),(rows x&#39;),i,(ket_to_int x&#39;)">
          <goal name="VC kronecker_add_null.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="0.67"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_add_null.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;),(rows x&#39;),i,(ket_to_int x&#39;)">
         <goal name="VC kronecker_add_null.1.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="0.87"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_add_null.1.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.63" steps="185"/></proof>
       </goal>
       <goal name="VC kronecker_add_null.1.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="0.57" steps="185"/></proof>
       </goal>
       <goal name="VC kronecker_add_null.1.0.0.0.0.3" expl="rewrite premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC kronecker_add_null.1.0.0.0.0.3.0" expl="rewrite premises" proved="true">
        <transf name="assert" proved="true" arg1="(forall a b . 0&lt;=&#39; a -&gt; 0&lt;=&#39; b -&gt; 0&lt;=&#39; a+&#39;b)">
         <goal name="VC kronecker_add_null.1.0.0.0.0.3.0.0" expl="asserted formula" proved="true">
         <proof prover="4"><result status="valid" time="0.28" steps="187"/></proof>
         </goal>
         <goal name="VC kronecker_add_null.1.0.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="h">
          <goal name="VC kronecker_add_null.1.0.0.0.0.3.0.1.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="0.88"/></proof>
          </goal>
          <goal name="VC kronecker_add_null.1.0.0.0.0.3.0.1.1" expl="apply premises" proved="true">
          <proof prover="4"><result status="valid" time="0.67" steps="185"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_add_null.1.0.0.0.0.3.1" expl="rewrite premises" proved="true">
        <transf name="assert" proved="true" arg1="((i *&#39; rows x&#39;) &lt;=&#39; (rows m2 -&#39;&#39; 1) *&#39; rows x&#39; )">
         <goal name="VC kronecker_add_null.1.0.0.0.0.3.1.0" expl="asserted formula" proved="true">
         <proof prover="0"><result status="valid" time="0.76"/></proof>
         </goal>
         <goal name="VC kronecker_add_null.1.0.0.0.0.3.1.1" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="0.89"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_add_null.1.0.0.0.1" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(forall i. ket_valid_index (kronecker m2 x&#39;) i -&gt; get_ket (kronecker m2 x&#39;) i = c_zero)">
       <goal name="VC kronecker_add_null.1.0.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC kronecker_add_null.1.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="0.70"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_add_null.1.0.0.0.1.1" expl="apply premises" proved="true">
       <transf name="assert" proved="true" arg1="(get_ket (kronecker m2 x&#39;) ((i *&#39; rows x&#39;) +&#39; ket_to_int x&#39;) = c_zero)">
        <goal name="VC kronecker_add_null.1.0.0.0.1.1.0" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="h1">
         <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
         <proof prover="4"><result status="valid" time="0.28" steps="185"/></proof>
         </goal>
         <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
         <transf name="apply" proved="true" arg1="set_ket_valid_index">
          <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
          <proof prover="4"><result status="valid" time="0.80" steps="187"/></proof>
          </goal>
          <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1.0" proved="true">
           <transf name="assert" proved="true" arg1="(forall a b . 0&lt;=&#39; a -&gt; 0&lt;=&#39; b -&gt; 0&lt;=&#39; a+&#39;b)">
            <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1.0.0" expl="asserted formula" proved="true">
            <proof prover="4"><result status="valid" time="0.27" steps="189"/></proof>
            </goal>
            <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1.0.1" proved="true">
            <transf name="apply" proved="true" arg1="h">
             <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1.0.1.0" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="0.72"/></proof>
             </goal>
             <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1.0.1.1" expl="apply premises" proved="true">
             <proof prover="4"><result status="valid" time="0.82" steps="187"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1.1" proved="true">
           <transf name="assert" proved="true" arg1="((i *&#39; rows x&#39;) &lt;=&#39; (rows m2 -&#39;&#39; 1) *&#39; rows x&#39; )">
            <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1.1.0" expl="asserted formula" proved="true">
            <proof prover="0"><result status="valid" time="0.76"/></proof>
            </goal>
            <goal name="VC kronecker_add_null.1.0.0.0.1.1.0.1.1.1.1" proved="true">
            <proof prover="2"><result status="valid" time="4.68"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_add_null.1.0.0.0.1.1.1" expl="apply premises" proved="true">
        <proof prover="4"><result status="valid" time="0.25" steps="187"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_add_null.1.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="0.68"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_add_null.2" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_null_mat">
   <goal name="VC kronecker_add_null.2.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC kronecker_add_null.2.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="kronecker_values">
     <goal name="VC kronecker_add_null.2.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="zero_mult_t">
      <goal name="VC kronecker_add_null.2.0.0.0.0" expl="apply premises" proved="true">
      <transf name="assert" proved="true" arg1="(valid_index  m2 (div i (rows x&#39;)) (div j (columns x&#39;)))">
       <goal name="VC kronecker_add_null.2.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="4"><result status="valid" time="0.72" steps="187"/></proof>
       </goal>
       <goal name="VC kronecker_add_null.2.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="1.18"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_add_null.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="4"><result status="valid" time="0.30" steps="185"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC kronecker_injec_eq_left" expl="VC for kronecker_injec_eq_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC kronecker_injec_eq_left.0" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_rows">
   <goal name="VC kronecker_injec_eq_left.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_rows">
    <goal name="VC kronecker_injec_eq_left.0.0.0" expl="assertion" proved="true">
    <transf name="assert" proved="true" arg1="(0 &lt;&gt; (rows m *&#39; rows o) -&#39;&#39; (rows m&#39; *&#39; rows o))">
     <goal name="VC kronecker_injec_eq_left.0.0.0.0" expl="asserted formula" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt;&gt; (rows m ) -&#39;&#39; (rows m&#39; ))">
      <goal name="VC kronecker_injec_eq_left.0.0.0.0.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="0.30" steps="167"/></proof>
      </goal>
      <goal name="VC kronecker_injec_eq_left.0.0.0.0.1" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(forall a b c. (a*&#39; c -&#39;&#39; b*&#39;c) = (a-&#39;&#39;b) *&#39;c)">
       <goal name="VC kronecker_injec_eq_left.0.0.0.0.1.0" expl="asserted formula" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC kronecker_injec_eq_left.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="4"><result status="valid" time="0.30" steps="168"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC kronecker_injec_eq_left.0.0.0.0.1.1" expl="asserted formula" proved="true">
       <transf name="rewrite" proved="true" arg1="h1">
        <goal name="VC kronecker_injec_eq_left.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
        <transf name="case" proved="true" arg1="(rows o = 0)">
         <goal name="VC kronecker_injec_eq_left.0.0.0.0.1.1.0.0" expl="true case (asserted formula)" proved="true">
         <proof prover="4"><result status="valid" time="0.67" steps="171"/></proof>
         </goal>
         <goal name="VC kronecker_injec_eq_left.0.0.0.0.1.1.0.1" expl="false case (asserted formula)" proved="true">
         <proof prover="0"><result status="valid" time="0.84"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC kronecker_injec_eq_left.0.0.0.1" expl="assertion" proved="true">
     <proof prover="4"><result status="valid" time="0.25" steps="169"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_injec_eq_left.1" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="kronecker_columns">
   <goal name="VC kronecker_injec_eq_left.1.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="kronecker_columns">
    <goal name="VC kronecker_injec_eq_left.1.0.0" expl="assertion" proved="true">
    <transf name="case" proved="true" arg1="(columns o = 0)">
     <goal name="VC kronecker_injec_eq_left.1.0.0.0" expl="true case (assertion)" proved="true">
     <proof prover="4"><result status="valid" time="0.50" steps="172"/></proof>
     </goal>
     <goal name="VC kronecker_injec_eq_left.1.0.0.1" expl="false case (assertion)" proved="true">
     <transf name="assert" proved="true" arg1="(0 &lt;&gt; (columns m *&#39; columns o) -&#39;&#39; (columns m&#39; *&#39; columns o))">
      <goal name="VC kronecker_injec_eq_left.1.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(0 &lt;&gt; (columns m ) -&#39;&#39; (columns m&#39; ))">
       <goal name="VC kronecker_injec_eq_left.1.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="4"><result status="valid" time="0.46" steps="171"/></proof>
       </goal>
       <goal name="VC kronecker_injec_eq_left.1.0.0.1.0.1" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(forall a b c. (a*&#39; c -&#39;&#39; b*&#39;c) = (a-&#39;&#39;b) *&#39;c)">
        <goal name="VC kronecker_injec_eq_left.1.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC kronecker_injec_eq_left.1.0.0.1.0.1.0.0" expl="asserted formula" proved="true">
         <proof prover="4"><result status="valid" time="0.28" steps="172"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC kronecker_injec_eq_left.1.0.0.1.0.1.1" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="h1">
         <goal name="VC kronecker_injec_eq_left.1.0.0.1.0.1.1.0" expl="asserted formula" proved="true">
         <transf name="case" proved="true" arg1="(rows o = 0)">
          <goal name="VC kronecker_injec_eq_left.1.0.0.1.0.1.1.0.0" expl="true case (asserted formula)" proved="true">
          <proof prover="4"><result status="valid" time="0.63" steps="176"/></proof>
          </goal>
          <goal name="VC kronecker_injec_eq_left.1.0.0.1.0.1.1.0.1" expl="false case (asserted formula)" proved="true">
          <proof prover="0"><result status="valid" time="0.67"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC kronecker_injec_eq_left.1.0.0.1.1" expl="false case (assertion)" proved="true">
      <proof prover="4"><result status="valid" time="0.26" steps="173"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC kronecker_injec_eq_left.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC kronecker_injec_eq_left.2.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="167"/></proof>
   </goal>
   <goal name="VC kronecker_injec_eq_left.2.1" expl="postcondition" proved="true">
   <transf name="case" proved="true" arg1="(exists i j. valid_index m i j &amp;&amp; get m i j &lt;&gt; get m&#39; i j)">
    <goal name="VC kronecker_injec_eq_left.2.1.0" expl="true case (postcondition)" proved="true">
    <transf name="assert" proved="true" arg1="(exists i j. valid_index o i j &amp;&amp; get o i j &lt;&gt; c_zero)">
     <goal name="VC kronecker_injec_eq_left.2.1.0.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="4.29"/></proof>
     </goal>
     <goal name="VC kronecker_injec_eq_left.2.1.0.1" expl="true case (postcondition)" proved="true">
     <transf name="destruct" proved="true" arg1="h1">
      <goal name="VC kronecker_injec_eq_left.2.1.0.1.0" expl="true case (postcondition)" proved="true">
      <transf name="destruct" proved="true" arg1="h1">
       <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0" expl="true case (postcondition)" proved="true">
       <transf name="destruct" proved="true" arg1="h1">
        <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0" expl="true case (postcondition)" proved="true">
        <transf name="destruct" proved="true" arg1="h">
         <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0" expl="true case (postcondition)" proved="true">
         <transf name="destruct" proved="true" arg1="h">
          <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0" expl="true case (postcondition)" proved="true">
          <transf name="assert" proved="true" arg1="(get (kronecker m o) (i1*&#39; rows o +&#39; i) (j1*&#39; columns o +&#39; j) &lt;&gt; get (kronecker m&#39; o) (i1 *&#39; rows o +&#39; i) (j1 *&#39; columns o +&#39; j))">
           <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <transf name="rewrite" proved="true" arg1="kronecker_values">
            <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
            <transf name="rewrite" proved="true" arg1="kronecker_values">
             <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <transf name="replace" proved="true" arg1="( div ((i1 *&#39; rows o) +&#39; i) (rows o))" arg2="i1">
              <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
              <transf name="replace" proved="true" arg1="(mod ((i1 *&#39; rows o) +&#39; i) (rows o))" arg2="i">
               <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
               <transf name="replace" proved="true" arg1="(div ((j1 *&#39; columns o) +&#39; j) (columns o))" arg2="j1">
                <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="replace" proved="true" arg1="(mod ((j1 *&#39; columns o) +&#39; j) (columns o))" arg2="j">
                 <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="0"><result status="valid" time="0.70"/></proof>
                 </goal>
                 <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                 <proof prover="4"><result status="valid" time="0.50" steps="179"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="4"><result status="valid" time="0.48" steps="179"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
               <proof prover="4"><result status="valid" time="0.50" steps="179"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="4"><result status="valid" time="0.50" steps="179"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="0.61" steps="179"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="4"><result status="valid" time="0.53" steps="179"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC kronecker_injec_eq_left.2.1.0.1.0.0.0.0.0.1" expl="true case (postcondition)" proved="true">
           <proof prover="4"><result status="valid" time="0.25" steps="177"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC kronecker_injec_eq_left.2.1.1" expl="false case (postcondition)" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_mat">
     <goal name="VC kronecker_injec_eq_left.2.1.1.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.38" steps="169"/></proof>
     </goal>
     <goal name="VC kronecker_injec_eq_left.2.1.1.1" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="0.39" steps="169"/></proof>
     </goal>
     <goal name="VC kronecker_injec_eq_left.2.1.1.2" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC kronecker_injec_eq_left.2.1.1.2.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="0.52" steps="173"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC kronecker_injec_eq_left.2.2" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.24" steps="167"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

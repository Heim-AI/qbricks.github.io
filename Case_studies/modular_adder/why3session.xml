<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.1" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="modular_adder.mlw"/>
<theory name="Adder" proved="true">
 <goal name="VC cascade_adder_" expl="VC for cascade_adder_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC cascade_adder_.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.46"/></proof>
  </goal>
  <goal name="VC cascade_adder_.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_adder_.1.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.40" steps="366"/></proof>
   </goal>
   <goal name="VC cascade_adder_.1.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.29" steps="366"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.18" steps="364"/></proof>
  </goal>
  <goal name="VC cascade_adder_.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="364"/></proof>
  </goal>
  <goal name="VC cascade_adder_.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="364"/></proof>
  </goal>
  <goal name="VC cascade_adder_.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_adder_.5.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.64"/></proof>
   </goal>
   <goal name="VC cascade_adder_.5.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.87"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_adder_.6.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.94" steps="366"/></proof>
   </goal>
   <goal name="VC cascade_adder_.6.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.13" steps="366"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.7" expl="variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="370"/></proof>
  </goal>
  <goal name="VC cascade_adder_.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="370"/></proof>
  </goal>
  <goal name="VC cascade_adder_.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_adder_.9.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.96" steps="370"/></proof>
   </goal>
   <goal name="VC cascade_adder_.9.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.24" steps="370"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_adder_.10.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.88" steps="372"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.11" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H2">
  </transf>
  </goal>
  <goal name="VC cascade_adder_.12" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_diagonal">
   <goal name="VC cascade_adder_.12.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC cascade_adder_.12.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((fun (x1:bitvec) -&gt;
        int_to_ang
        (((getbv y @ step) * (getbv x1 @ target))
         * power_ 2 (((n - step) - 1) + ((n - target) - 1)))
        n)
      @ x)" arg2="((fun (x1:bitvec) -&gt;
    int_to_ang
    ((getbv x1 @ target)
     * power_ 2 (n - ((getbv y @ step) * ((step - ((n - target) - 1)) + 1))))
    n) x)">
     <goal name="VC cascade_adder_.12.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="get_diagonal">
      <goal name="VC cascade_adder_.12.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="H6">
      </transf>
      </goal>
      <goal name="VC cascade_adder_.12.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.86" steps="382"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC cascade_adder_.12.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC cascade_adder_.12.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="case" proved="true" arg1="((getbv y @ step)  =0)">
       <goal name="VC cascade_adder_.12.0.0.1.0.0" expl="true case (equality hypothesis)" proved="true">
       <proof prover="0"><result status="valid" time="1.69"/></proof>
       </goal>
       <goal name="VC cascade_adder_.12.0.0.1.0.1" expl="false case (equality hypothesis)" proved="true">
       <proof prover="0"><result status="valid" time="2.81"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.23" steps="382"/></proof>
  </goal>
  <goal name="VC cascade_adder_.14" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC cascade_adder_.14.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ang_sum_right_extension">
    <goal name="VC cascade_adder_.14.0.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="ang_add_eq">
     <goal name="VC cascade_adder_.14.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="((step - 1) + 1)" arg2="((step + 1) - 1)">
      <goal name="VC cascade_adder_.14.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="VC cascade_adder_.14.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="0.89" steps="385"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC cascade_adder_.14.0.0.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC cascade_adder_.14.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="1.25" steps="385"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC cascade_adder_.14.0.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="0.99" steps="385"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.15" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="6.30" steps="390"/></proof>
  </goal>
  <goal name="VC cascade_adder_.16" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_adder_.16.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="VC cascade_adder_.16.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="set_diagonal_">
     <goal name="VC cascade_adder_.16.0.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC cascade_adder_.16.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((fun (x1:bitvec) -&gt;
        ang_sum
        (fun (k:int) -&gt;
          int_to_ang
          (((getbv y @ k) * (getbv x1 @ target))
           * power_ 2 (((n - k) - 1) + ((n - target) - 1)))
          n)
        ((n - target) - 1) (step + 1))
      @ x)" arg2="((fun (x1:bitvec) -&gt;
    int_to_ang ((getbv x1 @ target) * power_ 2 (n - ((getbv y @ step) * 1)))
    n) x)">
       <goal name="VC cascade_adder_.16.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="get_diagonal_">
        <goal name="VC cascade_adder_.16.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="H2">
        </transf>
        </goal>
        <goal name="VC cascade_adder_.16.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.10" steps="374"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC cascade_adder_.16.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC cascade_adder_.16.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_sum_cardone">
         <goal name="VC cascade_adder_.16.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC cascade_adder_.16.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="3.20"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC cascade_adder_.16.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="0.90" steps="374"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC cascade_adder_.16.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="VC cascade_adder_.16.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H4">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.17" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_adder_.17.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.26" steps="374"/></proof>
   </goal>
   <goal name="VC cascade_adder_.17.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.06" steps="392"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_adder_.18" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_adder_.18.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.30" steps="375"/></proof>
   </goal>
   <goal name="VC cascade_adder_.18.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.27" steps="393"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC pre_adder_const_" expl="VC for pre_adder_const_" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC pre_adder_const_.0" expl="VC for pre_adder_const_" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC pre_adder_const_.0.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.0.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.05" steps="358"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.0.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.32" steps="358"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.1" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.1.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.99" steps="358"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.1.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.21" steps="358"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.2" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.2.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.12" steps="360"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.3" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.16" steps="362"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.4" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.17" steps="362"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.5" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.27" steps="362"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.6" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.6.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.12" steps="358"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.6.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.04" steps="358"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.7" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.7.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.21" steps="358"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.7.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.19" steps="358"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.8" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.8.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.22" steps="360"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.9" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.9.0" expl="variant decrease" proved="true">
    <proof prover="1"><result status="valid" time="1.06" steps="366"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.9.1" expl="variant decrease" proved="true">
    <proof prover="1"><result status="valid" time="1.01" steps="366"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.10" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.10.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.64" steps="366"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.10.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.76" steps="366"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.11" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H2">
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.12" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H7">
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.13" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.31" steps="378"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.14" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.14.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ang_sum_right_extension">
     <goal name="VC pre_adder_const_.0.14.0.0" expl="precondition" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC pre_adder_const_.0.14.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="ang_add_eq">
       <goal name="VC pre_adder_const_.0.14.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="((k + 1) - 1)" arg2="((k - 1) + 1)">
        <goal name="VC pre_adder_const_.0.14.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC pre_adder_const_.0.14.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="0.97" steps="381"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC pre_adder_const_.0.14.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ang_sum_eq_gen">
        <goal name="VC pre_adder_const_.0.14.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.12" steps="381"/></proof>
        </goal>
        <goal name="VC pre_adder_const_.0.14.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.23" steps="381"/></proof>
        </goal>
        <goal name="VC pre_adder_const_.0.14.0.0.0.1.2" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.15" steps="381"/></proof>
        </goal>
        <goal name="VC pre_adder_const_.0.14.0.0.0.1.3" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC pre_adder_const_.0.14.0.0.0.1.3.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.14" steps="385"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC pre_adder_const_.0.14.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.93" steps="381"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.15" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.15.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.10" steps="368"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.15.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="6.37" steps="386"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.16" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.16.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="set_diagonal_">
     <goal name="VC pre_adder_const_.0.16.0.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC pre_adder_const_.0.16.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="((fun (x1:bitvec) -&gt;
        ang_sum
        (fun (target:int) -&gt;
          ang_sum
          (fun (k1:int) -&gt;
            int_to_ang
            (((getbv y @ k1) * (getbv x1 @ target))
             * power_ 2 (((n - k1) - 1) + ((n - target) - 1)))
            n)
          ((n - target) - 1) n)
        0 (k + 1))
      @ x)" arg2="((fun (x1:bitvec) -&gt;
    ang_sum
    (fun (k1:int) -&gt;
      int_to_ang
      (((getbv y @ k1) * (getbv x1 @ 0))
       * power_ 2 (((n - k1) - 1) + ((n - 0) - 1)))
      n)
    ((n - 0) - 1) ((n - 1) + 1)) x)">
       <goal name="VC pre_adder_const_.0.16.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="get_diagonal_">
        <goal name="VC pre_adder_const_.0.16.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="H4">
        </transf>
        </goal>
        <goal name="VC pre_adder_const_.0.16.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.25" steps="370"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC pre_adder_const_.0.16.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC pre_adder_const_.0.16.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="ang_sum_cardone">
         <goal name="VC pre_adder_const_.0.16.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC pre_adder_const_.0.16.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="ang_sum_eq_gen">
           <goal name="VC pre_adder_const_.0.16.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="1.07" steps="370"/></proof>
           </goal>
           <goal name="VC pre_adder_const_.0.16.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="0.93" steps="370"/></proof>
           </goal>
           <goal name="VC pre_adder_const_.0.16.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="1"><result status="valid" time="1.29" steps="370"/></proof>
           </goal>
           <goal name="VC pre_adder_const_.0.16.0.0.0.1.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="2.28"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC pre_adder_const_.0.16.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="0.97" steps="370"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC pre_adder_const_.0.16.1" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H4">
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.17" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.17.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.02" steps="370"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.17.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.14" steps="388"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.18" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.98" steps="362"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.19" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.09" steps="354"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.20" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.08" steps="354"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.21" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.81" steps="354"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.22" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.08" steps="354"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.23" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.79" steps="354"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.24" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.24.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="1.17" steps="356"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.24.1" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="0.84" steps="356"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.25" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.95" steps="366"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.26" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(n * ((n - 1) + 1))" arg2="(power_ n 2)">
    <goal name="VC pre_adder_const_.0.26.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="2.01"/></proof>
    </goal>
    <goal name="VC pre_adder_const_.0.26.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="6.02" steps="368"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.27" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.08" steps="368"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.28" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.93" steps="370"/></proof>
   </goal>
   <goal name="VC pre_adder_const_.0.29" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.29.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="1.17" steps="370"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.30" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.30.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.69" steps="370"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.31" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC pre_adder_const_.0.31.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="((n - 1) + 1)" arg2="n" arg3="in" arg4="H5">
     <goal name="VC pre_adder_const_.0.31.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="H5">
     </transf>
     </goal>
     <goal name="VC pre_adder_const_.0.31.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="1.16" steps="370"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.32" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_diagonal_">
    <goal name="VC pre_adder_const_.0.32.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC pre_adder_const_.0.32.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="((fun (x1:bitvec) -&gt; int_to_ang (bv_to_int x1 * bv_to_int y) n) @ x)" arg2="((fun (x1:bitvec) -&gt;
    ang_sum
    (fun (target:int) -&gt;
      ang_sum
      (fun (k:int) -&gt;
        int_to_ang
        (((getbv y @ k) * (getbv x1 @ target))
         * power_ 2 (((n - k) - 1) + ((n - target) - 1)))
        n)
      ((n - target) - 1) n)
    0 n) x)">
      <goal name="VC pre_adder_const_.0.32.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="get_diagonal_">
       <goal name="VC pre_adder_const_.0.32.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="H1">
       </transf>
       </goal>
       <goal name="VC pre_adder_const_.0.32.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="1.19" steps="374"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC pre_adder_const_.0.32.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC pre_adder_const_.0.32.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="H16">
        <goal name="VC pre_adder_const_.0.32.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="1.24" steps="374"/></proof>
        </goal>
        <goal name="VC pre_adder_const_.0.32.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="0.89" steps="374"/></proof>
        </goal>
        <goal name="VC pre_adder_const_.0.32.0.0.1.0.2" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="0.85" steps="374"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC pre_adder_const_.0.33" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="1.73"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC pre_adder_const_apply" expl="VC for pre_adder_const_apply" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC pre_adder_const_apply.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC pre_adder_const_apply.0.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.89" steps="354"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC pre_adder_const_apply.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="358"/></proof>
  </goal>
  <goal name="VC pre_adder_const_apply.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.03" steps="362"/></proof>
  </goal>
  <goal name="VC pre_adder_const_apply.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="362"/></proof>
  </goal>
  <goal name="VC pre_adder_const_apply.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="372"/></proof>
  </goal>
  <goal name="VC pre_adder_const_apply.5" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC pre_adder_const_apply.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC pre_adder_const_apply.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="apply_qft_def">
     <goal name="VC pre_adder_const_apply.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="apply_qft_def">
      <goal name="VC pre_adder_const_apply.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="path_sem_scal">
       <goal name="VC pre_adder_const_apply.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq">
        <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="path_sem_sum_">
         <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="ket_sum_eq">
          <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.70" steps="336"/></proof>
          </goal>
          <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.50" steps="336"/></proof>
          </goal>
          <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="path_sem_scal">
             <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="H3">
              <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="scalar_assoc">
               <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="scalar_eq_gen">
                <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="1.49" steps="338"/></proof>
                </goal>
                <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(bv_to_int (int_to_bv j n))" arg2="j">
                 <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="int_qft_coeff_add">
                  <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.67" steps="338"/></proof>
                  </goal>
                  <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="1"><result status="valid" time="1.35" steps="338"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                 <proof prover="4"><result status="valid" time="1.91"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="4"><result status="valid" time="1.74"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="4"><result status="valid" time="1.71"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="4"><result status="valid" time="1.83"/></proof>
         </goal>
         <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.51" steps="336"/></proof>
         </goal>
         <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.3.0" expl="rewrite premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC pre_adder_const_apply.5.0.0.0.0.0.0.3.0.0" expl="rewrite premises" proved="true">
           <proof prover="4"><result status="valid" time="1.42"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC pre_adder_const_apply.5.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="4"><result status="valid" time="1.58"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC pre_adder_const_apply.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.19" steps="336"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC pre_adder_const_apply.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="1.16" steps="336"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC pre_adder_const_apply.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="6.44" steps="380"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC pre_adder_const_add" expl="VC for pre_adder_const_add" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC pre_adder_const_add.0" expl="VC for pre_adder_const_add" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC pre_adder_const_add.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(path_sem (pre_adder_const_ n (int_to_bv j n)) (apply_qft n i))" arg2="(pre_adder_const_apply n i j)
">
    <goal name="VC pre_adder_const_add.0.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="5.19" steps="356"/></proof>
    </goal>
    <goal name="VC pre_adder_const_add.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="6.87" steps="356"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_in_qft" expl="VC for add_in_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC add_in_qft.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="5.13" steps="352"/></proof>
  </goal>
  <goal name="VC add_in_qft.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="350"/></proof>
  </goal>
  <goal name="VC add_in_qft.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="5.24" steps="352"/></proof>
  </goal>
  <goal name="VC add_in_qft.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="5.65" steps="352"/></proof>
  </goal>
  <goal name="VC add_in_qft.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.13" steps="350"/></proof>
  </goal>
  <goal name="VC add_in_qft.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="354"/></proof>
  </goal>
  <goal name="VC add_in_qft.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="355"/></proof>
  </goal>
  <goal name="VC add_in_qft.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC add_in_qft.7.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.98" steps="364"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_qft.8" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.31" steps="364"/></proof>
  </goal>
  <goal name="VC add_in_qft.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="364"/></proof>
  </goal>
  <goal name="VC add_in_qft.10" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC add_in_qft.10.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC add_in_qft.10.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_to_sem">
     <goal name="VC add_in_qft.10.0.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC add_in_qft.10.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="pre_adder_const__spec3">
       <goal name="VC add_in_qft.10.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="8.93"/></proof>
       </goal>
       <goal name="VC add_in_qft.10.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.83" steps="324"/></proof>
       </goal>
       <goal name="VC add_in_qft.10.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.62" steps="324"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC add_in_qft.10.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="H11">
      <goal name="VC add_in_qft.10.0.0.1.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(apply_qft (n + 1) (b + mod added (power_ 2 (n + 1))))" arg2="(apply_qft (n + 1) (mod(b + mod added (power_ 2 (n + 1))) (power_ 2 (n + 1))))">
       <goal name="VC add_in_qft.10.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="add_mod_right">
        <goal name="VC add_in_qft.10.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="4"><result status="valid" time="1.46"/></proof>
        </goal>
        <goal name="VC add_in_qft.10.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="9.78"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC add_in_qft.10.0.0.1.0.1" expl="equality hypothesis" proved="true">
       <proof prover="4"><result status="valid" time="1.68"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_in_qft.11" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="364"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC place_add_in_qft" expl="VC for place_add_in_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC place_add_in_qft.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="352"/></proof>
  </goal>
  <goal name="VC place_add_in_qft.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="358"/></proof>
  </goal>
  <goal name="VC place_add_in_qft.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="358"/></proof>
  </goal>
  <goal name="VC place_add_in_qft.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="358"/></proof>
  </goal>
  <goal name="VC place_add_in_qft.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="358"/></proof>
  </goal>
  <goal name="VC place_add_in_qft.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="366"/></proof>
  </goal>
  <goal name="VC place_add_in_qft.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="366"/></proof>
  </goal>
  <goal name="VC place_add_in_qft.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="367"/></proof>
  </goal>
  <goal name="VC place_add_in_qft.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC place_add_in_qft.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC place_add_in_qft.8.0.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="8.10"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC place_add_in_qft.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="368"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC place_substract_in_qft" expl="VC for place_substract_in_qft" proved="true">
 <proof prover="0"><result status="valid" time="1.40"/></proof>
 </goal>
 <goal name="VC place_add_in_comput_basis" expl="VC for place_add_in_comput_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC place_add_in_comput_basis.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="3.21" steps="354"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="352"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="353"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="358"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="359"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="359"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.6" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC place_add_in_comput_basis.6.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="3.26" steps="365"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC place_add_in_comput_basis.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="368"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="369"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="370"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="371"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.53" steps="372"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="372"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="372"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="373"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="374"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="374"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="374"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="374"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="374"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="374"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="375"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.22" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H21">
  </transf>
  </goal>
  <goal name="VC place_add_in_comput_basis.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="3.59" steps="376"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="374"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="375"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="374"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="375"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="375"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.29" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC place_add_in_comput_basis.29.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="3.51" steps="381"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC place_add_in_comput_basis.30" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="384"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.31" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="384"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.32" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.70"/></proof>
  </goal>
  <goal name="VC place_add_in_comput_basis.33" expl="postcondition" proved="true">
  <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H7">
   <goal name="VC place_add_in_comput_basis.33.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="H7">
    <goal name="VC place_add_in_comput_basis.33.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.58" steps="393"/></proof>
    </goal>
    <goal name="VC place_add_in_comput_basis.33.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.57" steps="393"/></proof>
    </goal>
    <goal name="VC place_add_in_comput_basis.33.0.2" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(apply_qft (n + 1) (mod (b + added) (power_ 2 (n + 1))))" arg2="(apply_qft (n + 1) ( (b + added) ))">
     <goal name="VC place_add_in_comput_basis.33.0.2.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="H20">
      <goal name="VC place_add_in_comput_basis.33.0.2.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.59" steps="393"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC place_add_in_comput_basis.33.0.2.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="3.44" steps="395"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC place_add_in_comput_basis.34" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="387"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC place_substract_in_comput_basis" expl="VC for place_substract_in_comput_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC place_substract_in_comput_basis.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="352"/></proof>
  </goal>
  <goal name="VC place_substract_in_comput_basis.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="352"/></proof>
  </goal>
  <goal name="VC place_substract_in_comput_basis.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="358"/></proof>
  </goal>
  <goal name="VC place_substract_in_comput_basis.3" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="358"/></proof>
  </goal>
  <goal name="VC place_substract_in_comput_basis.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="358"/></proof>
  </goal>
  <goal name="VC place_substract_in_comput_basis.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.60" steps="366"/></proof>
  </goal>
  <goal name="VC place_substract_in_comput_basis.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="358"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC cont_add_in_qft" expl="VC for cont_add_in_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC cont_add_in_qft.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="354"/></proof>
  </goal>
  <goal name="VC cont_add_in_qft.1" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="368"/></proof>
  </goal>
  <goal name="VC cont_add_in_qft.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="369"/></proof>
  </goal>
  <goal name="VC cont_add_in_qft.3" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(polysquare (n + 1) cont_size 0 0)" arg2="( cont_size * polysquare (n + 1) 1 0 0)">
   <goal name="VC cont_add_in_qft.3.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.29"/></proof>
   </goal>
   <goal name="VC cont_add_in_qft.3.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="polysquare_def">
    <goal name="VC cont_add_in_qft.3.1.0" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="polysquare_def">
     <goal name="VC cont_add_in_qft.3.1.0.0" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="0.56" steps="370"/></proof>
     </goal>
     <goal name="VC cont_add_in_qft.3.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.56" steps="370"/></proof>
     </goal>
     <goal name="VC cont_add_in_qft.3.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.55" steps="370"/></proof>
     </goal>
     <goal name="VC cont_add_in_qft.3.1.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.56" steps="370"/></proof>
     </goal>
     <goal name="VC cont_add_in_qft.3.1.0.4" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.56" steps="370"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC cont_add_in_qft.3.1.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="0.56" steps="370"/></proof>
    </goal>
    <goal name="VC cont_add_in_qft.3.1.2" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="0.57" steps="370"/></proof>
    </goal>
    <goal name="VC cont_add_in_qft.3.1.3" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="0.61" steps="370"/></proof>
    </goal>
    <goal name="VC cont_add_in_qft.3.1.4" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="0.61" steps="370"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC cont_add_in_qft.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="3.53" steps="374"/></proof>
  </goal>
  <goal name="VC cont_add_in_qft.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.24" steps="374"/></proof>
  </goal>
  <goal name="VC cont_add_in_qft.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="372"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC check_first_bit_is_one" expl="VC for check_first_bit_is_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC check_first_bit_is_one.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="350"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="350"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC check_first_bit_is_one.2.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.78" steps="351"/></proof>
   </goal>
   <goal name="VC check_first_bit_is_one.2.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.59" steps="351"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC check_first_bit_is_one.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.04" steps="353"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="358"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="358"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC check_first_bit_is_one.6.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="1.05" steps="358"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC check_first_bit_is_one.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC check_first_bit_is_one.7.0" expl="apply premises" proved="true">
   <transf name="replace" proved="true" arg1="(width result )" arg2="(n+1+1)">
    <goal name="VC check_first_bit_is_one.7.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="kronecker_ket_l">
     <goal name="VC check_first_bit_is_one.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.63" steps="362"/></proof>
     </goal>
     <goal name="VC check_first_bit_is_one.7.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.06" steps="362"/></proof>
     </goal>
     <goal name="VC check_first_bit_is_one.7.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="4.72" steps="364"/></proof>
     </goal>
     <goal name="VC check_first_bit_is_one.7.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.10" steps="362"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC check_first_bit_is_one.7.0.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="1.01" steps="362"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC check_first_bit_is_one.7.1" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC check_first_bit_is_one.7.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result_def">
     <goal name="VC check_first_bit_is_one.7.1.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="((n + 2) - 1)" arg2="(n+1)" arg3="in" arg4="H11">
      <goal name="VC check_first_bit_is_one.7.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="H11">
       <goal name="VC check_first_bit_is_one.7.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="8.29"/></proof>
       </goal>
       <goal name="VC check_first_bit_is_one.7.1.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
        <goal name="VC check_first_bit_is_one.7.1.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="1.11" steps="322"/></proof>
        </goal>
        <goal name="VC check_first_bit_is_one.7.1.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="8.62"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC check_first_bit_is_one.7.1.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="0.93" steps="322"/></proof>
       </goal>
       <goal name="VC check_first_bit_is_one.7.1.0.0.0.3" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(ket_to_bv (ket (n + 1) g))" arg2="(int_to_bv g (n+1))">
        <goal name="VC check_first_bit_is_one.7.1.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="int_to_bv_value">
         <goal name="VC check_first_bit_is_one.7.1.0.0.0.3.0.0" expl="apply premises" proved="true">
         <proof prover="4"><result status="valid" time="1.62"/></proof>
         </goal>
         <goal name="VC check_first_bit_is_one.7.1.0.0.0.3.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="0.95" steps="322"/></proof>
         </goal>
         <goal name="VC check_first_bit_is_one.7.1.0.0.0.3.0.2" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="8.70"/></proof>
         </goal>
         <goal name="VC check_first_bit_is_one.7.1.0.0.0.3.0.3" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="0.73" steps="322"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC check_first_bit_is_one.7.1.0.0.0.3.1" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="8.65"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC check_first_bit_is_one.7.1.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="1"><result status="valid" time="0.97" steps="322"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC check_first_bit_is_one.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC check_first_bit_is_one.8.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_to_sem">
    <goal name="VC check_first_bit_is_one.8.0.0" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="(width result )" arg2="(n+1+1)">
     <goal name="VC check_first_bit_is_one.8.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="VC check_first_bit_is_one.8.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.57" steps="362"/></proof>
      </goal>
      <goal name="VC check_first_bit_is_one.8.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.55" steps="362"/></proof>
      </goal>
      <goal name="VC check_first_bit_is_one.8.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="4.56" steps="364"/></proof>
      </goal>
      <goal name="VC check_first_bit_is_one.8.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.70" steps="362"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC check_first_bit_is_one.8.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="0.66" steps="362"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC check_first_bit_is_one.8.0.1" expl="apply premises" proved="true">
    <transf name="replace" proved="true" arg1="((n + 2) - 1)" arg2="(n+1)" arg3="in" arg4="H13">
     <goal name="VC check_first_bit_is_one.8.0.1.0" expl="apply premises" proved="true">
     <transf name="eliminate_definition" proved="true" >
      <goal name="VC check_first_bit_is_one.8.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="result_def">
       <goal name="VC check_first_bit_is_one.8.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="H13">
        <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="0.75" steps="322"/></proof>
        </goal>
        <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="0"><result status="valid" time="8.74"/></proof>
        </goal>
        <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.2" expl="rewrite premises" proved="true">
        <transf name="apply" proved="true" arg1="ket_is_a_ket_basis_elt">
         <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.2.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.72" steps="322"/></proof>
         </goal>
         <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.2.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="8.80"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.3" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="0.73" steps="322"/></proof>
        </goal>
        <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.4" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(ket_to_bv (ket (n + 1) g))" arg2="(int_to_bv g (n+1))">
         <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.4.0" expl="rewrite premises" proved="true">
         <proof prover="0"><result status="valid" time="9.34"/></proof>
         </goal>
         <goal name="VC check_first_bit_is_one.8.0.1.0.0.0.4.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="9.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC check_first_bit_is_one.8.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="0.57" steps="362"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC uncheck_first_bit_is_zero" expl="VC for uncheck_first_bit_is_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC uncheck_first_bit_is_zero.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="350"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="350"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="351"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="353"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="358"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="358"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_first_bit_is_zero.6.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.90" steps="358"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC uncheck_first_bit_is_zero.7.0" expl="apply premises" proved="true">
   <transf name="replace" proved="true" arg1="(width result)" arg2="(n+1+1)">
    <goal name="VC uncheck_first_bit_is_zero.7.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="kronecker_ket_l">
     <goal name="VC uncheck_first_bit_is_zero.7.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.58" steps="362"/></proof>
     </goal>
     <goal name="VC uncheck_first_bit_is_zero.7.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.99" steps="362"/></proof>
     </goal>
     <goal name="VC uncheck_first_bit_is_zero.7.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="5.06" steps="364"/></proof>
     </goal>
     <goal name="VC uncheck_first_bit_is_zero.7.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.65" steps="362"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC uncheck_first_bit_is_zero.7.0.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="0.59" steps="362"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC uncheck_first_bit_is_zero.7.1" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC uncheck_first_bit_is_zero.7.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result_def">
     <goal name="VC uncheck_first_bit_is_zero.7.1.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="8.94"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero.8" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC uncheck_first_bit_is_zero.8.0" expl="apply premises" proved="true">
   <transf name="replace" proved="true" arg1="(width result)" arg2="(n+1+1)">
    <goal name="VC uncheck_first_bit_is_zero.8.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="kronecker_ket_l">
     <goal name="VC uncheck_first_bit_is_zero.8.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.54" steps="362"/></proof>
     </goal>
     <goal name="VC uncheck_first_bit_is_zero.8.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.59" steps="362"/></proof>
     </goal>
     <goal name="VC uncheck_first_bit_is_zero.8.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.52" steps="364"/></proof>
     </goal>
     <goal name="VC uncheck_first_bit_is_zero.8.0.0.3" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.59" steps="362"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC uncheck_first_bit_is_zero.8.0.1" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="0.57" steps="362"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC uncheck_first_bit_is_zero.8.1" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC uncheck_first_bit_is_zero.8.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result_def">
     <goal name="VC uncheck_first_bit_is_zero.8.1.0.0" expl="apply premises" proved="true">
     <proof prover="4"><result status="valid" time="1.43"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC check_first_bit_is_one_from_qft" expl="VC for check_first_bit_is_one_from_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC check_first_bit_is_one_from_qft.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="350"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one_from_qft.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="356"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one_from_qft.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="357"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one_from_qft.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="357"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one_from_qft.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.14"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one_from_qft.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="364"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one_from_qft.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="365"/></proof>
  </goal>
  <goal name="VC check_first_bit_is_one_from_qft.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H5">
   <goal name="VC check_first_bit_is_one_from_qft.7.0" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="1.28"/></proof>
   </goal>
   <goal name="VC check_first_bit_is_one_from_qft.7.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.91" steps="370"/></proof>
   </goal>
   <goal name="VC check_first_bit_is_one_from_qft.7.2" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.58" steps="370"/></proof>
   </goal>
   <goal name="VC check_first_bit_is_one_from_qft.7.3" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.52" steps="372"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC check_first_bit_is_one_from_qft.8" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H6">
   <goal name="VC check_first_bit_is_one_from_qft.8.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.42" steps="372"/></proof>
   </goal>
   <goal name="VC check_first_bit_is_one_from_qft.8.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.57" steps="370"/></proof>
   </goal>
   <goal name="VC check_first_bit_is_one_from_qft.8.2" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.73" steps="370"/></proof>
   </goal>
   <goal name="VC check_first_bit_is_one_from_qft.8.3" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="3.91" steps="372"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC uncheck_first_bit_is_zero_from_qft" expl="VC for uncheck_first_bit_is_zero_from_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC uncheck_first_bit_is_zero_from_qft.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="350"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero_from_qft.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="356"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero_from_qft.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.87" steps="357"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero_from_qft.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="357"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero_from_qft.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.20"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero_from_qft.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="364"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero_from_qft.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="365"/></proof>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero_from_qft.7" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H5">
   <goal name="VC uncheck_first_bit_is_zero_from_qft.7.0" expl="apply premises" proved="true">
   <proof prover="0"><result status="valid" time="1.21"/></proof>
   </goal>
   <goal name="VC uncheck_first_bit_is_zero_from_qft.7.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.53" steps="370"/></proof>
   </goal>
   <goal name="VC uncheck_first_bit_is_zero_from_qft.7.2" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.74" steps="370"/></proof>
   </goal>
   <goal name="VC uncheck_first_bit_is_zero_from_qft.7.3" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="4.18" steps="372"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_first_bit_is_zero_from_qft.8" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H6">
   <goal name="VC uncheck_first_bit_is_zero_from_qft.8.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="4.36" steps="372"/></proof>
   </goal>
   <goal name="VC uncheck_first_bit_is_zero_from_qft.8.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.58" steps="370"/></proof>
   </goal>
   <goal name="VC uncheck_first_bit_is_zero_from_qft.8.2" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.63" steps="370"/></proof>
   </goal>
   <goal name="VC uncheck_first_bit_is_zero_from_qft.8.3" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="5.16" steps="372"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC substract_and_check" expl="VC for substract_and_check" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC substract_and_check.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="358"/></proof>
  </goal>
  <goal name="VC substract_and_check.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC substract_and_check.1.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.60" steps="364"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_check.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC substract_and_check.2.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.57" steps="364"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_check.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="370"/></proof>
  </goal>
  <goal name="VC substract_and_check.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="382"/></proof>
  </goal>
  <goal name="VC substract_and_check.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="384"/></proof>
  </goal>
  <goal name="VC substract_and_check.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="384"/></proof>
  </goal>
  <goal name="VC substract_and_check.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="386"/></proof>
  </goal>
  <goal name="VC substract_and_check.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="387"/></proof>
  </goal>
  <goal name="VC substract_and_check.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="387"/></proof>
  </goal>
  <goal name="VC substract_and_check.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="387"/></proof>
  </goal>
  <goal name="VC substract_and_check.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="387"/></proof>
  </goal>
  <goal name="VC substract_and_check.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_check.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_check.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="389"/></proof>
  </goal>
  <goal name="VC substract_and_check.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="389"/></proof>
  </goal>
  <goal name="VC substract_and_check.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="389"/></proof>
  </goal>
  <goal name="VC substract_and_check.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="390"/></proof>
  </goal>
  <goal name="VC substract_and_check.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.42" steps="400"/></proof>
  </goal>
  <goal name="VC substract_and_check.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="398"/></proof>
  </goal>
  <goal name="VC substract_and_check.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="406"/></proof>
  </goal>
  <goal name="VC substract_and_check.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.29" steps="415"/></proof>
  </goal>
  <goal name="VC substract_and_check.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="413"/></proof>
  </goal>
  <goal name="VC substract_and_check.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="417"/></proof>
  </goal>
  <goal name="VC substract_and_check.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="419"/></proof>
  </goal>
  <goal name="VC substract_and_check.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="427"/></proof>
  </goal>
  <goal name="VC substract_and_check.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="427"/></proof>
  </goal>
  <goal name="VC substract_and_check.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="427"/></proof>
  </goal>
  <goal name="VC substract_and_check.28" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(apply_qft (n + 1) (mod (value - bound) (power_ 2 (n + 1))))" arg2="(apply_qft (n + 1) (value - bound))">
   <goal name="VC substract_and_check.28.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H1">
    <goal name="VC substract_and_check.28.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.59" steps="427"/></proof>
    </goal>
    <goal name="VC substract_and_check.28.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.64" steps="427"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC substract_and_check.28.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="4.67" steps="429"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_check.29" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="(value - bound),(power_ 2 (n + 1)),(-1),(power_ 2 (n + 1) + (value-bound))">
   <goal name="VC substract_and_check.29.0" expl="precondition" proved="true">
   <proof prover="4"><result status="valid" time="1.94"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_check.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="431"/></proof>
  </goal>
  <goal name="VC substract_and_check.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="390"/></proof>
  </goal>
  <goal name="VC substract_and_check.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="398"/></proof>
  </goal>
  <goal name="VC substract_and_check.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="406"/></proof>
  </goal>
  <goal name="VC substract_and_check.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="408"/></proof>
  </goal>
  <goal name="VC substract_and_check.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="408"/></proof>
  </goal>
  <goal name="VC substract_and_check.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="410"/></proof>
  </goal>
  <goal name="VC substract_and_check.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="418"/></proof>
  </goal>
  <goal name="VC substract_and_check.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="418"/></proof>
  </goal>
  <goal name="VC substract_and_check.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="418"/></proof>
  </goal>
  <goal name="VC substract_and_check.40" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H1">
   <goal name="VC substract_and_check.40.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.72" steps="418"/></proof>
   </goal>
   <goal name="VC substract_and_check.40.1" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="1.02" steps="418"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_check.41" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H7">
   <goal name="VC substract_and_check.41.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.64" steps="420"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_check.42" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.84" steps="422"/></proof>
  </goal>
  <goal name="VC substract_and_check.43" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC substract_and_check.43.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.95" steps="429"/></proof>
   </goal>
   <goal name="VC substract_and_check.43.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.78" steps="420"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_check.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_check.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.87" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_check.46" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_check.47" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="5.46" steps="420"/></proof>
  </goal>
  <goal name="VC substract_and_check.48" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.15" steps="390"/></proof>
  </goal>
  <goal name="VC substract_and_check.49" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="391"/></proof>
  </goal>
  <goal name="VC substract_and_check.50" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC substract_and_check.50.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.22"/></proof>
   </goal>
   <goal name="VC substract_and_check.50.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.70" steps="424"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_check.51" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC substract_and_check.51.0" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="VC substract_and_check.51.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="result" arg2="(sequence (place_substract_in_qft bound n 1)
  (check_first_bit_is_one_from_qft n))">
     <goal name="VC substract_and_check.51.0.0.0" expl="postcondition" proved="true">
     <proof prover="1"><result status="valid" time="0.63" steps="435"/></proof>
     </goal>
     <goal name="VC substract_and_check.51.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="0.87" steps="435"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC substract_and_check.51.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.61" steps="425"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC reduces_to_modulo_pre" expl="VC for reduces_to_modulo_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC reduces_to_modulo_pre.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="358"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="358"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="364"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="364"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="364"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="370"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="382"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="382"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="384"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.01" steps="384"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.84" steps="384"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="386"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="387"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="388"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.89" steps="388"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="389"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="390"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="390"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="390"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="390"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.93" steps="390"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="392"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.95" steps="400"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="408"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="410"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="418"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="425"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="429"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="429"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.29" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="429"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="429"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="429"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="429"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.33" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.15"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="431"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="390"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="398"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="398"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="406"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="408"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="408"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="408"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.42" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="410"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.43" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="418"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="418"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="418"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.46" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="418"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.47" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="418"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.48" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(apply_qft (n + 1) (mod value bound))" arg2="(apply_qft (n + 1) (value - bound))">
   <goal name="VC reduces_to_modulo_pre.48.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.60" steps="418"/></proof>
   </goal>
   <goal name="VC reduces_to_modulo_pre.48.1" expl="equality hypothesis" proved="true">
   <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="value,bound,1,(value-bound)">
    <goal name="VC reduces_to_modulo_pre.48.1.0" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="0.59" steps="422"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC reduces_to_modulo_pre.49" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.71" steps="424"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.50" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="422"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="388"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.52" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="388"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.53" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="388"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.54" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="388"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.55" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="388"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.56" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="388"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.57" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.63" steps="420"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.58" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="390"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.59" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="391"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.60" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.72"/></proof>
  </goal>
  <goal name="VC reduces_to_modulo_pre.61" expl="postcondition" proved="true">
  <transf name="eliminate_let" proved="true" >
   <goal name="VC reduces_to_modulo_pre.61.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H23">
    <goal name="VC reduces_to_modulo_pre.61.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.60" steps="437"/></proof>
    </goal>
    <goal name="VC reduces_to_modulo_pre.61.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.57" steps="428"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC reduces_to_modulo_pre.62" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC reduces_to_modulo_pre.62.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC reduces_to_modulo_pre.62.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="VC reduces_to_modulo_pre.62.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.86" steps="361"/></proof>
     </goal>
     <goal name="VC reduces_to_modulo_pre.62.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="substract_and_check_def">
      <goal name="VC reduces_to_modulo_pre.62.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="1.63"/></proof>
      </goal>
      <goal name="VC reduces_to_modulo_pre.62.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.86" steps="361"/></proof>
      </goal>
      <goal name="VC reduces_to_modulo_pre.62.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.90" steps="361"/></proof>
      </goal>
      <goal name="VC reduces_to_modulo_pre.62.0.0.1.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.90" steps="361"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC reduces_to_modulo_pre.62.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.92" steps="361"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC add_modulo_pre" expl="VC for add_modulo_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC add_modulo_pre.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="362"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="362"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="365"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="368"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="368"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="374"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="386"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="386"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="389"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="388"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="388"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="390"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="391"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="391"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="391"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="391"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="392"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="392"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="393"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="393"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="393"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="396"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="404"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="404"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="412"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="419"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="427"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="429"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="437"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.29" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="437"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="440"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="437"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="437"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.33" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H1">
   <goal name="VC add_modulo_pre.33.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.95" steps="437"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_modulo_pre.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.11" steps="439"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="439"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="394"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="402"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="402"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="410"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.07" steps="412"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="420"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.42" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.14" steps="422"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.43" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.97" steps="430"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="430"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="433"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.46" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="430"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.47" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="430"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.48" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H1">
   <goal name="VC add_modulo_pre.48.0" expl="apply premises" proved="true">
   <proof prover="1"><result status="valid" time="0.56" steps="430"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_modulo_pre.49" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="432"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.50" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="434"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="392"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.52" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC add_modulo_pre.52.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.88" steps="392"/></proof>
   </goal>
   <goal name="VC add_modulo_pre.52.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.62" steps="392"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC add_modulo_pre.53" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="395"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.54" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="392"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.55" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="392"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.56" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="392"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.57" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="6.40" steps="426"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.58" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="394"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.59" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="395"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.60" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="454"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.61" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="402"/></proof>
  </goal>
  <goal name="VC add_modulo_pre.62" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC add_modulo_pre.62.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC add_modulo_pre.62.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="VC add_modulo_pre.62.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.16" steps="365"/></proof>
     </goal>
     <goal name="VC add_modulo_pre.62.0.0.1" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="1.86" steps="365"/></proof>
     </goal>
     <goal name="VC add_modulo_pre.62.0.0.2" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC add_modulo_pre.62.0.0.2.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="reduces_to_modulo_pre_def">
       <goal name="VC add_modulo_pre.62.0.0.2.0.0" expl="apply premises" proved="true">
       <proof prover="4"><result status="valid" time="2.32"/></proof>
       </goal>
       <goal name="VC add_modulo_pre.62.0.0.2.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.68" steps="365"/></proof>
       </goal>
       <goal name="VC add_modulo_pre.62.0.0.2.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.83" steps="365"/></proof>
       </goal>
       <goal name="VC add_modulo_pre.62.0.0.2.0.3" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="1.59" steps="365"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC substract_and_uncheck" expl="VC for substract_and_uncheck" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC substract_and_uncheck.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="358"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="364"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="364"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.84" steps="370"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="382"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="384"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="384"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="386"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="387"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="387"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="387"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="387"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="389"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="389"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="389"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="390"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.06" steps="400"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="398"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="406"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.06" steps="410"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="408"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="408"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="410"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="418"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="418"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="418"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.28" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(apply_qft (n + 1) (mod (value - substracted) (power_ 2 (n + 1))))" arg2="(apply_qft (n + 1) ( (value - substracted)))">
   <goal name="VC substract_and_uncheck.28.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H1">
    <goal name="VC substract_and_uncheck.28.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.61" steps="418"/></proof>
    </goal>
    <goal name="VC substract_and_uncheck.28.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.60" steps="418"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC substract_and_uncheck.28.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="4.39" steps="420"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_uncheck.29" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H6">
   <goal name="VC substract_and_uncheck.29.0" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC substract_and_uncheck.29.0.0" expl="apply premises" proved="true">
    <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="(value - substracted),(power_ 2 (n + 1)),(-1),(power_ 2 (n+1) +  (value - substracted) )">
     <goal name="VC substract_and_uncheck.29.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.25"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC substract_and_uncheck.29.0.1" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="4.56" steps="422"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC substract_and_uncheck.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="422"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="390"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="398"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="406"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="413"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="417"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="419"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.00" steps="427"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="427"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="427"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.79" steps="429"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.47" steps="431"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.42" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="431"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.43" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.86" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.94" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.46" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.12" steps="388"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.47" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.56" steps="415"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.48" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="390"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.49" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="391"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.50" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.72"/></proof>
  </goal>
  <goal name="VC substract_and_uncheck.51" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="394"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC uncheck_modulo" expl="VC for uncheck_modulo" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC uncheck_modulo.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.0.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.59" steps="358"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="358"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="364"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.3.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.58" steps="364"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.3.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.59" steps="364"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.4.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.59" steps="364"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.4.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.59" steps="364"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="370"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.6.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.59" steps="382"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="382"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="384"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.9.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.56" steps="384"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.9.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.61" steps="384"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.10.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.62" steps="384"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.10.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.60" steps="384"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.11" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="386"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="387"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="388"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="388"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="389"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="389"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="389"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="389"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="389"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="389"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="392"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.22" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.22.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.65" steps="400"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="408"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="410"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="418"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.97" steps="420"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="420"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="420"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.29" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="420"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.75" steps="420"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.31" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.31.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.89" steps="420"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.31.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.80" steps="420"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.32" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC uncheck_modulo.32.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.03" steps="420"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="8.05" steps="423"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.10" steps="422"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.96" steps="390"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.91" steps="398"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.37" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.98" steps="406"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.08" steps="408"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.06" steps="416"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.05" steps="423"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.41" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.41.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.01" steps="427"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.42" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.42.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.04" steps="427"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.43" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.43.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.17" steps="427"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.44" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.20" steps="427"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.45" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.45.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.96" steps="427"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.45.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.17" steps="427"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.46" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.25" steps="427"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.47" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="4.81" steps="431"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.48" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.48.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.77" steps="431"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.49" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.49.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.57" steps="422"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.49.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.58" steps="429"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.50" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.50.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.57" steps="422"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.50.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.76" steps="429"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="388"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.52" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="388"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.53" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.53.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.83" steps="388"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.53.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.69" steps="388"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.54" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="388"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.55" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.20" steps="414"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.56" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC uncheck_modulo.56.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.77" steps="424"/></proof>
   </goal>
   <goal name="VC uncheck_modulo.56.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.70" steps="431"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC uncheck_modulo.57" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="391"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.58" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="434"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.59" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="396"/></proof>
  </goal>
  <goal name="VC uncheck_modulo.60" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC uncheck_modulo.60.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC uncheck_modulo.60.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="VC uncheck_modulo.60.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.87" steps="361"/></proof>
     </goal>
     <goal name="VC uncheck_modulo.60.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC uncheck_modulo.60.0.0.1.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="2.10"/></proof>
      </goal>
      <goal name="VC uncheck_modulo.60.0.0.1.1" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="2.19"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC uncheck_modulo.60.0.0.2" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.85" steps="361"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC modular_adder_" expl="VC for modular_adder_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC modular_adder_.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="362"/></proof>
  </goal>
  <goal name="VC modular_adder_.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="362"/></proof>
  </goal>
  <goal name="VC modular_adder_.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="1.84"/></proof>
  </goal>
  <goal name="VC modular_adder_.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="366"/></proof>
  </goal>
  <goal name="VC modular_adder_.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="368"/></proof>
  </goal>
  <goal name="VC modular_adder_.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="368"/></proof>
  </goal>
  <goal name="VC modular_adder_.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="368"/></proof>
  </goal>
  <goal name="VC modular_adder_.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.50" steps="368"/></proof>
  </goal>
  <goal name="VC modular_adder_.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.55" steps="374"/></proof>
  </goal>
  <goal name="VC modular_adder_.9" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="386"/></proof>
  </goal>
  <goal name="VC modular_adder_.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="386"/></proof>
  </goal>
  <goal name="VC modular_adder_.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.32"/></proof>
  </goal>
  <goal name="VC modular_adder_.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="390"/></proof>
  </goal>
  <goal name="VC modular_adder_.13" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.76" steps="388"/></proof>
  </goal>
  <goal name="VC modular_adder_.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="388"/></proof>
  </goal>
  <goal name="VC modular_adder_.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="388"/></proof>
  </goal>
  <goal name="VC modular_adder_.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="388"/></proof>
  </goal>
  <goal name="VC modular_adder_.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="390"/></proof>
  </goal>
  <goal name="VC modular_adder_.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="391"/></proof>
  </goal>
  <goal name="VC modular_adder_.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.69" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="393"/></proof>
  </goal>
  <goal name="VC modular_adder_.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="394"/></proof>
  </goal>
  <goal name="VC modular_adder_.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="394"/></proof>
  </goal>
  <goal name="VC modular_adder_.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="394"/></proof>
  </goal>
  <goal name="VC modular_adder_.25" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.90" steps="394"/></proof>
  </goal>
  <goal name="VC modular_adder_.26" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.82" steps="394"/></proof>
  </goal>
  <goal name="VC modular_adder_.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.87" steps="396"/></proof>
  </goal>
  <goal name="VC modular_adder_.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.81" steps="404"/></proof>
  </goal>
  <goal name="VC modular_adder_.29" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.73" steps="404"/></proof>
  </goal>
  <goal name="VC modular_adder_.30" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.99" steps="412"/></proof>
  </goal>
  <goal name="VC modular_adder_.31" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="419"/></proof>
  </goal>
  <goal name="VC modular_adder_.32" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.88" steps="419"/></proof>
  </goal>
  <goal name="VC modular_adder_.33" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.58" steps="423"/></proof>
  </goal>
  <goal name="VC modular_adder_.34" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.57" steps="425"/></proof>
  </goal>
  <goal name="VC modular_adder_.35" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.78" steps="433"/></proof>
  </goal>
  <goal name="VC modular_adder_.36" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="433"/></proof>
  </goal>
  <goal name="VC modular_adder_.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.41"/></proof>
  </goal>
  <goal name="VC modular_adder_.38" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="437"/></proof>
  </goal>
  <goal name="VC modular_adder_.39" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="433"/></proof>
  </goal>
  <goal name="VC modular_adder_.40" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="433"/></proof>
  </goal>
  <goal name="VC modular_adder_.41" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="433"/></proof>
  </goal>
  <goal name="VC modular_adder_.42" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="433"/></proof>
  </goal>
  <goal name="VC modular_adder_.43" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="433"/></proof>
  </goal>
  <goal name="VC modular_adder_.44" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.54"/></proof>
  </goal>
  <goal name="VC modular_adder_.45" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="436"/></proof>
  </goal>
  <goal name="VC modular_adder_.46" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="394"/></proof>
  </goal>
  <goal name="VC modular_adder_.47" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.71" steps="402"/></proof>
  </goal>
  <goal name="VC modular_adder_.48" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="402"/></proof>
  </goal>
  <goal name="VC modular_adder_.49" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="410"/></proof>
  </goal>
  <goal name="VC modular_adder_.50" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.80" steps="412"/></proof>
  </goal>
  <goal name="VC modular_adder_.51" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.59" steps="412"/></proof>
  </goal>
  <goal name="VC modular_adder_.52" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="412"/></proof>
  </goal>
  <goal name="VC modular_adder_.53" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.72" steps="414"/></proof>
  </goal>
  <goal name="VC modular_adder_.54" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="422"/></proof>
  </goal>
  <goal name="VC modular_adder_.55" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="422"/></proof>
  </goal>
  <goal name="VC modular_adder_.56" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.53"/></proof>
  </goal>
  <goal name="VC modular_adder_.57" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="426"/></proof>
  </goal>
  <goal name="VC modular_adder_.58" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="422"/></proof>
  </goal>
  <goal name="VC modular_adder_.59" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.79" steps="422"/></proof>
  </goal>
  <goal name="VC modular_adder_.60" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.62" steps="422"/></proof>
  </goal>
  <goal name="VC modular_adder_.61" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="422"/></proof>
  </goal>
  <goal name="VC modular_adder_.62" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.66" steps="424"/></proof>
  </goal>
  <goal name="VC modular_adder_.63" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H9">
   <goal name="VC modular_adder_.63.0" expl="apply premises" proved="true">
   <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="(value + added),bound,1,(value+added-bound)">
    <goal name="VC modular_adder_.63.0.0" expl="apply premises" proved="true">
    <proof prover="1"><result status="valid" time="0.63" steps="426"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC modular_adder_.64" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.61" steps="426"/></proof>
  </goal>
  <goal name="VC modular_adder_.65" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.83" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.66" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.77" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.67" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC modular_adder_.67.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="4.57" steps="427"/></proof>
   </goal>
   <goal name="VC modular_adder_.67.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="4.47" steps="427"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC modular_adder_.68" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="396"/></proof>
  </goal>
  <goal name="VC modular_adder_.69" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.79" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.70" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.79" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.71" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.72" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.64" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.73" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="392"/></proof>
  </goal>
  <goal name="VC modular_adder_.74" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="4.82" steps="426"/></proof>
  </goal>
  <goal name="VC modular_adder_.75" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="394"/></proof>
  </goal>
  <goal name="VC modular_adder_.76" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.67" steps="395"/></proof>
  </goal>
  <goal name="VC modular_adder_.77" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.63" steps="398"/></proof>
  </goal>
  <goal name="VC modular_adder_.78" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC modular_adder_.78.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC modular_adder_.78.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="sequence_eq">
     <goal name="VC modular_adder_.78.0.0.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="0.93" steps="367"/></proof>
     </goal>
     <goal name="VC modular_adder_.78.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC modular_adder_.78.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="add_modulo_pre_def">
       <goal name="VC modular_adder_.78.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="goal_comm">
        <goal name="VC modular_adder_.78.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="add_modulo_pre_spec">
         <goal name="VC modular_adder_.78.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.87" steps="367"/></proof>
         </goal>
         <goal name="VC modular_adder_.78.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.86" steps="367"/></proof>
         </goal>
         <goal name="VC modular_adder_.78.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.93" steps="367"/></proof>
         </goal>
         <goal name="VC modular_adder_.78.0.0.1.0.0.0.3" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.94" steps="367"/></proof>
         </goal>
         <goal name="VC modular_adder_.78.0.0.1.0.0.0.4" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="0.93" steps="367"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC modular_adder_.78.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.89" steps="367"/></proof>
       </goal>
       <goal name="VC modular_adder_.78.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.95" steps="367"/></proof>
       </goal>
       <goal name="VC modular_adder_.78.0.0.1.0.3" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.87" steps="367"/></proof>
       </goal>
       <goal name="VC modular_adder_.78.0.0.1.0.4" expl="rewrite premises" proved="true">
       <proof prover="1"><result status="valid" time="0.85" steps="367"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC modular_adder_.78.0.0.2" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="uncheck_modulo_def">
      <goal name="VC modular_adder_.78.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="4"><result status="valid" time="2.23"/></proof>
      </goal>
      <goal name="VC modular_adder_.78.0.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="0.99" steps="367"/></proof>
      </goal>
      <goal name="VC modular_adder_.78.0.0.2.2" expl="rewrite premises" proved="true">
      <proof prover="4"><result status="valid" time="2.17"/></proof>
      </goal>
      <goal name="VC modular_adder_.78.0.0.2.3" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="1.00" steps="367"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC modular_adder" expl="VC for modular_adder" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC modular_adder.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.89" steps="356"/></proof>
  </goal>
  <goal name="VC modular_adder.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="354"/></proof>
  </goal>
  <goal name="VC modular_adder.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.22"/></proof>
  </goal>
  <goal name="VC modular_adder.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="358"/></proof>
  </goal>
  <goal name="VC modular_adder.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="359"/></proof>
  </goal>
  <goal name="VC modular_adder.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="362"/></proof>
  </goal>
  <goal name="VC modular_adder.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="363"/></proof>
  </goal>
  <goal name="VC modular_adder.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="363"/></proof>
  </goal>
  <goal name="VC modular_adder.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC modular_adder.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC modular_adder.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="modular_adder__def">
     <goal name="VC modular_adder.8.0.0.0" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="1.87"/></proof>
     </goal>
     <goal name="VC modular_adder.8.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.76" steps="327"/></proof>
     </goal>
     <goal name="VC modular_adder.8.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="9.47"/></proof>
     </goal>
     <goal name="VC modular_adder.8.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.74" steps="327"/></proof>
     </goal>
     <goal name="VC modular_adder.8.0.0.4" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="0.85" steps="327"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC modular_adder.9" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="result" arg2="(modular_adder_ n bound (mod added bound) b)">
   <goal name="VC modular_adder.9.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC modular_adder.9.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(mod (added + b) bound)" arg2="(mod ((mod added bound) + b) bound)">
     <goal name="VC modular_adder.9.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="modular_adder__spec1">
      <goal name="VC modular_adder.9.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.61" steps="367"/></proof>
      </goal>
      <goal name="VC modular_adder.9.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="3.94" steps="368"/></proof>
      </goal>
      <goal name="VC modular_adder.9.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.58" steps="367"/></proof>
      </goal>
      <goal name="VC modular_adder.9.0.0.0.3" expl="apply premises" proved="true">
      <proof prover="1"><result status="valid" time="0.59" steps="367"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC modular_adder.9.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="1"><result status="valid" time="3.38" steps="369"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC modular_adder.9.1" expl="equality hypothesis" proved="true">
   <proof prover="1"><result status="valid" time="3.26" steps="369"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC modular_adder.10" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(mod (added + b) bound)" arg2="(mod (added  + mod b bound) bound)">
   <goal name="VC modular_adder.10.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="H">
    <goal name="VC modular_adder.10.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.21"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC modular_adder.10.1" expl="equality hypothesis" proved="true">
   <transf name="rewrite" proved="true" arg1="add_mod_right">
    <goal name="VC modular_adder.10.1.0" expl="equality hypothesis" proved="true">
    <proof prover="1"><result status="valid" time="0.62" steps="363"/></proof>
    </goal>
    <goal name="VC modular_adder.10.1.1" expl="rewrite premises" proved="true">
    <proof prover="1"><result status="valid" time="3.39" steps="365"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC adder_gate_bound" expl="VC for adder_gate_bound" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC adder_gate_bound.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="350"/></proof>
  </goal>
  <goal name="VC adder_gate_bound.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.68" steps="351"/></proof>
  </goal>
  <goal name="VC adder_gate_bound.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.54" steps="352"/></proof>
  </goal>
  <goal name="VC adder_gate_bound.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.52" steps="352"/></proof>
  </goal>
  <goal name="VC adder_gate_bound.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.65" steps="352"/></proof>
  </goal>
  <goal name="VC adder_gate_bound.5" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC adder_gate_bound.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC adder_gate_bound.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="result_def">
     <goal name="VC adder_gate_bound.5.0.0.0" expl="postcondition" proved="true">
     <proof prover="4"><result status="valid" time="2.18"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

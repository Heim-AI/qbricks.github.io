<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.1" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="grover.mlw"/>
<theory name="Diffusion_operator" proved="true">
 <goal name="VC grover_" expl="VC for grover_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC grover_.0" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC grover_.0.0" expl="VC for grover_" proved="true">
   <proof prover="0"><result status="valid" time="0.83" steps="352"/></proof>
   </goal>
   <goal name="VC grover_.0.1" expl="VC for grover_" proved="true">
   <proof prover="0"><result status="valid" time="0.78" steps="352"/></proof>
   </goal>
   <goal name="VC grover_.0.2" expl="VC for grover_" proved="true">
   <proof prover="0"><result status="valid" time="5.76" steps="354"/></proof>
   </goal>
   <goal name="VC grover_.0.3" expl="VC for grover_" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC grover_.0.3.0" expl="VC for grover_" proved="true">
    <transf name="instantiate" proved="true" arg1="set_cardone_elt_" arg2="(my_filter (to_fset 0 (power_ 2 2)) (fun (i:int) -&gt; i = 1)),1">
     <goal name="VC grover_.0.3.0.0" expl="VC for grover_" proved="true">
     <transf name="apply" proved="true" arg1="Hinst">
      <goal name="VC grover_.0.3.0.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC grover_.0.3.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="2.25"/></proof>
       </goal>
       <goal name="VC grover_.0.3.0.0.0.1" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="in_my_filter">
        <goal name="VC grover_.0.3.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="1"><result status="valid" time="2.55"/></proof>
        </goal>
        <goal name="VC grover_.0.3.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="0"><result status="valid" time="0.89" steps="360"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC cc_rz" expl="VC for cc_rz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC cc_rz.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.88" steps="354"/></proof>
  </goal>
  <goal name="VC cc_rz.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.04" steps="356"/></proof>
  </goal>
  <goal name="VC cc_rz.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.10" steps="357"/></proof>
   </goal>
   <goal name="VC cc_rz.2.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.89" steps="357"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.3.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.92" steps="358"/></proof>
   </goal>
   <goal name="VC cc_rz.3.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.85" steps="358"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.4.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.30" steps="359"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.5" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.5.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.85" steps="356"/></proof>
   </goal>
   <goal name="VC cc_rz.5.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.77" steps="356"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.35" steps="356"/></proof>
  </goal>
  <goal name="VC cc_rz.7" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.7.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.81" steps="360"/></proof>
   </goal>
   <goal name="VC cc_rz.7.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.85" steps="360"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.8.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.98" steps="361"/></proof>
   </goal>
   <goal name="VC cc_rz.8.1" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="1.01" steps="361"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.9.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.83" steps="362"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.10.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.92" steps="363"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.11.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(htpart x 1 (width o))" arg2="(tpart x 1 )">
    <goal name="VC cc_rz.11.0.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="2.98"/></proof>
    </goal>
    <goal name="VC cc_rz.11.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_bv">
     <goal name="VC cc_rz.11.0.1.0" expl="apply premises" proved="true">
     <proof prover="1"><result status="valid" time="3.17"/></proof>
     </goal>
     <goal name="VC cc_rz.11.0.1.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC cc_rz.11.0.1.1.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.88"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.12.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.04" steps="368"/></proof>
   </goal>
   <goal name="VC cc_rz.12.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.26" steps="370"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cc_rz.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cc_rz.13.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_diagonal_">
    <goal name="VC cc_rz.13.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC cc_rz.13.0.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC cc_rz.13.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="bv_check_zero_two">
       <goal name="VC cc_rz.13.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="2.11"/></proof>
       </goal>
       <goal name="VC cc_rz.13.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="0.77" steps="370"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC cc_rz.13.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.97" steps="370"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC x_cc_rz" expl="VC for x_cc_rz" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC x_cc_rz.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="5.27" steps="356"/></proof>
  </goal>
  <goal name="VC x_cc_rz.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.11"/></proof>
  </goal>
  <goal name="VC x_cc_rz.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.06" steps="360"/></proof>
  </goal>
  <goal name="VC x_cc_rz.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.59"/></proof>
  </goal>
  <goal name="VC x_cc_rz.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="8.35" steps="356"/></proof>
  </goal>
  <goal name="VC x_cc_rz.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.18" steps="358"/></proof>
  </goal>
  <goal name="VC x_cc_rz.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="5.93" steps="362"/></proof>
  </goal>
  <goal name="VC x_cc_rz.7" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC x_cc_rz.7.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC x_cc_rz.7.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_bv_spec1">
     <goal name="VC x_cc_rz.7.0.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="0.80" steps="366"/></proof>
     </goal>
     <goal name="VC x_cc_rz.7.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="6.06" steps="368"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC x_cc_rz.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.97" steps="368"/></proof>
  </goal>
  <goal name="VC x_cc_rz.9" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC x_cc_rz.9.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC x_cc_rz.9.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_bv_spec1">
     <goal name="VC x_cc_rz.9.0.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="1.13" steps="366"/></proof>
     </goal>
     <goal name="VC x_cc_rz.9.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="5.57" steps="368"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC x_cc_rz.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC x_cc_rz.10.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC x_cc_rz.11" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H5">
  </transf>
  </goal>
  <goal name="VC x_cc_rz.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.83" steps="368"/></proof>
  </goal>
  <goal name="VC x_cc_rz.13" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC x_cc_rz.13.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC x_cc_rz.13.0.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="2.54"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC x_cc_rz.14" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC x_cc_rz.14.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.25"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC x_cc_rz.15" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H3">
   <goal name="VC x_cc_rz.15.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.94" steps="374"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC x_cc_rz.16" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H1">
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diff_pre" expl="VC for diff_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diff_pre.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.00" steps="360"/></proof>
  </goal>
  <goal name="VC diff_pre.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="8.24" steps="360"/></proof>
  </goal>
  <goal name="VC diff_pre.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diff_pre.2.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="4.82" steps="364"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.04" steps="364"/></proof>
  </goal>
  <goal name="VC diff_pre.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="4.66" steps="360"/></proof>
  </goal>
  <goal name="VC diff_pre.5" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC diff_pre.5.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC diff_pre.5.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_bv_spec1">
     <goal name="VC diff_pre.5.0.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="1.49" steps="364"/></proof>
     </goal>
     <goal name="VC diff_pre.5.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="7.02" steps="366"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.6" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC diff_pre.6.0" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC diff_pre.6.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_bv_spec1">
     <goal name="VC diff_pre.6.0.0.0" expl="precondition" proved="true">
     <proof prover="0"><result status="valid" time="1.05" steps="364"/></proof>
     </goal>
     <goal name="VC diff_pre.6.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="5.63" steps="366"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.84" steps="366"/></proof>
  </goal>
  <goal name="VC diff_pre.8" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diff_pre.8.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.81" steps="362"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.9" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC diff_pre.9.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="x_cc_rz_def">
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.10" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H6">
  </transf>
  </goal>
  <goal name="VC diff_pre.11" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diff_pre.11.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC diff_pre.11.0.0" expl="precondition" proved="true">
    <proof prover="0"><result status="valid" time="5.71" steps="371"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diff_pre.12.0" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC diff_pre.12.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
     <goal name="VC diff_pre.12.0.0.0" expl="precondition" proved="true">
     <proof prover="2"><result status="valid" time="2.17"/></proof>
     </goal>
     <goal name="VC diff_pre.12.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="4.82" steps="371"/></proof>
     </goal>
     <goal name="VC diff_pre.12.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.98"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.36" steps="374"/></proof>
  </goal>
  <goal name="VC diff_pre.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.04"/></proof>
  </goal>
  <goal name="VC diff_pre.15" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.93" steps="380"/></proof>
  </goal>
  <goal name="VC diff_pre.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="5.75" steps="364"/></proof>
  </goal>
  <goal name="VC diff_pre.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.27" steps="364"/></proof>
  </goal>
  <goal name="VC diff_pre.18" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="ang_minus_one" arg2="(int_to_ang 1 1)">
   <goal name="VC diff_pre.18.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H1">
   </transf>
   </goal>
   <goal name="VC diff_pre.18.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="1.43" steps="366"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.00" steps="368"/></proof>
  </goal>
  <goal name="VC diff_pre.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.10" steps="368"/></proof>
  </goal>
  <goal name="VC diff_pre.21" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC diff_pre.21.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="2.41"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.22" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H2">
   <goal name="VC diff_pre.22.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.05" steps="374"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_pre.23" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H4">
  </transf>
  </goal>
  <goal name="VC diff_pre.24" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(if bv_to_int x = 0 then bv_to_ket x else (-. c_one) *.. bv_to_ket x)" arg2="(ang_exp ((fun (x1:bitvec) -&gt; if bv_to_int x1 = 0 then ang_zero else ang_minus_one) x)*..bv_to_ket x)">
   <goal name="VC diff_pre.24.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="get_diagonal_">
    <goal name="VC diff_pre.24.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="H1">
    </transf>
    </goal>
    <goal name="VC diff_pre.24.0.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="H2">
     <goal name="VC diff_pre.24.0.1.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="0.90" steps="380"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC diff_pre.24.1" expl="equality hypothesis" proved="true">
   <proof prover="2"><result status="valid" time="2.88"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC diff" expl="VC for diff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diff.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="5.05" steps="364"/></proof>
  </goal>
  <goal name="VC diff.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.81" steps="372"/></proof>
  </goal>
  <goal name="VC diff.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.91" steps="382"/></proof>
  </goal>
  <goal name="VC diff.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="4.88" steps="364"/></proof>
  </goal>
  <goal name="VC diff.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.59" steps="374"/></proof>
  </goal>
  <goal name="VC diff.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="5.45" steps="384"/></proof>
  </goal>
  <goal name="VC diff.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.42" steps="384"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_diff" expl="VC for path_sem_diff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_diff.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.88" steps="370"/></proof>
  </goal>
  <goal name="VC path_sem_diff.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.82" steps="380"/></proof>
  </goal>
  <goal name="VC path_sem_diff.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.12" steps="396"/></proof>
  </goal>
  <goal name="VC path_sem_diff.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.74" steps="398"/></proof>
  </goal>
  <goal name="VC path_sem_diff.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.22" steps="406"/></proof>
  </goal>
  <goal name="VC path_sem_diff.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.78"/></proof>
  </goal>
  <goal name="VC path_sem_diff.6" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC path_sem_diff.6.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="7.98" steps="411"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC path_sem_diff.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.04" steps="411"/></proof>
  </goal>
  <goal name="VC path_sem_diff.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="5.82" steps="410"/></proof>
  </goal>
  <goal name="VC path_sem_diff.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.49" steps="412"/></proof>
  </goal>
  <goal name="VC path_sem_diff.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="5.63" steps="412"/></proof>
  </goal>
  <goal name="VC path_sem_diff.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.50" steps="410"/></proof>
  </goal>
  <goal name="VC path_sem_diff.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.12" steps="420"/></proof>
  </goal>
  <goal name="VC path_sem_diff.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.39" steps="421"/></proof>
  </goal>
  <goal name="VC path_sem_diff.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.63"/></proof>
  </goal>
  <goal name="VC path_sem_diff.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.52" steps="423"/></proof>
  </goal>
  <goal name="VC path_sem_diff.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.65" steps="378"/></proof>
  </goal>
  <goal name="VC path_sem_diff.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.08" steps="384"/></proof>
  </goal>
  <goal name="VC path_sem_diff.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.85" steps="396"/></proof>
  </goal>
  <goal name="VC path_sem_diff.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.04" steps="392"/></proof>
  </goal>
  <goal name="VC path_sem_diff.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.01" steps="392"/></proof>
  </goal>
  <goal name="VC path_sem_diff.21" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="8.57" steps="398"/></proof>
  </goal>
  <goal name="VC path_sem_diff.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.16" steps="394"/></proof>
  </goal>
  <goal name="VC path_sem_diff.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.92" steps="398"/></proof>
  </goal>
  <goal name="VC path_sem_diff.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.13" steps="400"/></proof>
  </goal>
  <goal name="VC path_sem_diff.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="8.08" steps="402"/></proof>
  </goal>
  <goal name="VC path_sem_diff.26" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.56" steps="400"/></proof>
  </goal>
  <goal name="VC path_sem_diff.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.40" steps="396"/></proof>
  </goal>
  <goal name="VC path_sem_diff.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="9.27" steps="404"/></proof>
  </goal>
  <goal name="VC path_sem_diff.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.90" steps="400"/></proof>
  </goal>
  <goal name="VC path_sem_diff.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.14" steps="404"/></proof>
  </goal>
  <goal name="VC path_sem_diff.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.04" steps="400"/></proof>
  </goal>
  <goal name="VC path_sem_diff.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.96" steps="401"/></proof>
  </goal>
  <goal name="VC path_sem_diff.33" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H31">
   <goal name="VC path_sem_diff.33.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_sum_">
    <goal name="VC path_sem_diff.33.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
     <goal name="VC path_sem_diff.33.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="VC path_sem_diff.33.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="7.35" steps="405"/></proof>
      </goal>
      <goal name="VC path_sem_diff.33.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.49" steps="401"/></proof>
      </goal>
      <goal name="VC path_sem_diff.33.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC path_sem_diff.33.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC path_sem_diff.33.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="case" proved="true" arg1="((bv_to_int a) =0)">
         <goal name="VC path_sem_diff.33.0.0.0.2.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="replace" proved="true" arg1="(get_ket (path_sem (repeat_had n) x) (bv_to_int a))" arg2="c_zero">
          <goal name="VC path_sem_diff.33.0.0.0.2.0.0.0.0" expl="true case (apply premises)" proved="true">
          <proof prover="1"><result status="valid" time="3.15"/></proof>
          </goal>
          <goal name="VC path_sem_diff.33.0.0.0.2.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="0"><result status="valid" time="1.31" steps="405"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC path_sem_diff.33.0.0.0.2.0.0.1" expl="false case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal">
          <goal name="VC path_sem_diff.33.0.0.0.2.0.0.1.0" expl="false case (apply premises)" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="VC path_sem_diff.33.0.0.0.2.0.0.1.0.0" expl="false case (apply premises)" proved="true">
           <transf name="rewrite" proved="true" arg1="diff_pre_def">
            <goal name="VC path_sem_diff.33.0.0.0.2.0.0.1.0.0.0" expl="false case (apply premises)" proved="true">
            <proof prover="0"><result status="valid" time="7.24" steps="409"/></proof>
            </goal>
            <goal name="VC path_sem_diff.33.0.0.0.2.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="2.48"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC path_sem_diff.33.0.0.0.2.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.68"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC path_sem_diff.33.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="6.70" steps="405"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC path_sem_diff.33.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="6.98" steps="405"/></proof>
    </goal>
    <goal name="VC path_sem_diff.33.0.2" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="0.87" steps="401"/></proof>
    </goal>
    <goal name="VC path_sem_diff.33.0.3" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC path_sem_diff.33.0.3.0" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="3.53"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC path_sem_diff.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.15" steps="403"/></proof>
  </goal>
  <goal name="VC path_sem_diff.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.41" steps="410"/></proof>
  </goal>
  <goal name="VC path_sem_diff.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.87" steps="406"/></proof>
  </goal>
  <goal name="VC path_sem_diff.37" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.43" steps="410"/></proof>
  </goal>
  <goal name="VC path_sem_diff.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="7.22" steps="410"/></proof>
  </goal>
  <goal name="VC path_sem_diff.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.22" steps="406"/></proof>
  </goal>
  <goal name="VC path_sem_diff.40" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.93" steps="416"/></proof>
  </goal>
  <goal name="VC path_sem_diff.41" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.90" steps="417"/></proof>
  </goal>
  <goal name="VC path_sem_diff.42" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_scal">
   <goal name="VC path_sem_diff.42.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq">
    <goal name="VC path_sem_diff.42.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="6.30" steps="421"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC path_sem_diff.42.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="0.87" steps="417"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC path_sem_diff.43" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.99" steps="419"/></proof>
  </goal>
  <goal name="VC path_sem_diff.44" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.21" steps="442"/></proof>
  </goal>
  <goal name="VC path_sem_diff.45" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.37" steps="466"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC unif_pos" expl="VC for unif_pos" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC unif_pos.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.11"/></proof>
  </goal>
  <goal name="VC unif_pos.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.19" steps="383"/></proof>
  </goal>
  <goal name="VC unif_pos.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="4.83" steps="369"/></proof>
  </goal>
  <goal name="VC unif_pos.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.96" steps="370"/></proof>
  </goal>
  <goal name="VC unif_pos.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.04" steps="370"/></proof>
  </goal>
  <goal name="VC unif_pos.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.99"/></proof>
  </goal>
  <goal name="VC unif_pos.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="8.89" steps="390"/></proof>
  </goal>
  <goal name="VC unif_pos.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="5.62" steps="376"/></proof>
  </goal>
  <goal name="VC unif_pos.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.86" steps="376"/></proof>
  </goal>
  <goal name="VC unif_pos.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H3">
   <goal name="VC unif_pos.9.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC unif_pos.9.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="3.11"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC unif_pos.9.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.24" steps="380"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC unif_pos.10" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC unif_pos.10.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC unif_pos.10.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="VC unif_pos.10.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l_diag_def">
      <goal name="VC unif_pos.10.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC unif_pos.10.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="ket_sum_scalar_rev_l">
        <goal name="VC unif_pos.10.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="VC unif_pos.10.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="2.67"/></proof>
         </goal>
         <goal name="VC unif_pos.10.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.06" steps="340"/></proof>
         </goal>
         <goal name="VC unif_pos.10.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="split_all_full" proved="true" >
              <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="grover_oracle_spec1">
               <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.78"/></proof>
               </goal>
               <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="2.51"/></proof>
               </goal>
               <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="0"><result status="valid" time="1.56" steps="344"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.97" steps="344"/></proof>
             </goal>
             <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.46" steps="344"/></proof>
             </goal>
             <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="scalar_assoc">
              <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.3.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="scalar_eq_gen">
               <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.3.0.0" expl="apply premises" proved="true">
               <transf name="split_all_full" proved="true" >
                <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="grover_oracle_spec">
                 <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="1"><result status="valid" time="3.46"/></proof>
                 </goal>
                 <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="0"><result status="valid" time="1.71" steps="344"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC unif_pos.10.0.0.0.0.0.0.2.0.0.0.3.0.1" expl="apply premises" proved="true">
               <proof prover="1"><result status="valid" time="2.55"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC unif_pos.10.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.09"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC unif_pos.10.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.06"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC unif_neg" expl="VC for unif_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC unif_neg.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.85"/></proof>
  </goal>
  <goal name="VC unif_neg.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.97"/></proof>
  </goal>
  <goal name="VC unif_neg.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="6.94" steps="369"/></proof>
  </goal>
  <goal name="VC unif_neg.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.14" steps="370"/></proof>
  </goal>
  <goal name="VC unif_neg.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.12" steps="370"/></proof>
  </goal>
  <goal name="VC unif_neg.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.95"/></proof>
  </goal>
  <goal name="VC unif_neg.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.02"/></proof>
  </goal>
  <goal name="VC unif_neg.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="4.97" steps="376"/></proof>
  </goal>
  <goal name="VC unif_neg.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.18" steps="376"/></proof>
  </goal>
  <goal name="VC unif_neg.9" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H3">
   <goal name="VC unif_neg.9.0" expl="postcondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC unif_neg.9.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="2.83"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC unif_neg.9.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.01" steps="380"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC unif_neg.10" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC unif_neg.10.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC unif_neg.10.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H4">
     <goal name="VC unif_neg.10.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ket_sum_l_diag_def">
      <goal name="VC unif_neg.10.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq">
       <goal name="VC unif_neg.10.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="1"><result status="valid" time="2.04"/></proof>
       </goal>
       <goal name="VC unif_neg.10.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.25" steps="340"/></proof>
       </goal>
       <goal name="VC unif_neg.10.0.0.0.0.2" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC unif_neg.10.0.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC unif_neg.10.0.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <transf name="split_all_full" proved="true" >
            <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="set_equal_ket_l">
             <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="exists" proved="true" arg1="n">
              <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.0.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.0.0.0" proved="true">
               <transf name="apply" proved="true" arg1="scalar_ket_l">
                <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(is_a_ket_l (bv_to_ket a) n)">
                 <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="1"><result status="valid" time="3.11"/></proof>
                 </goal>
                 <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="5"><result status="valid" time="0.63"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.0.0.1" proved="true">
               <proof prover="1"><result status="valid" time="2.76"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="scalar_ket_value">
               <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="scalar_ket_value">
                <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                <transf name="assert" proved="true" arg1="(forall a b. c_zero *. a = c_zero *.b)">
                 <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                 <proof prover="1"><result status="valid" time="3.06"/></proof>
                 </goal>
                 <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="h">
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.73" steps="344"/></proof>
           </goal>
           <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.85" steps="344"/></proof>
           </goal>
           <goal name="VC unif_neg.10.0.0.0.0.2.0.0.0.3" expl="apply premises" proved="true">
           <proof prover="5"><result status="valid" time="0.38"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC unif_neg.10.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.32"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC theta" expl="VC for theta" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC theta.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.56"/></proof>
  </goal>
  <goal name="VC theta.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC theta.1.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.88"/></proof>
   </goal>
   <goal name="VC theta.1.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="1.81"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC theta.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.30"/></proof>
  </goal>
  <goal name="VC theta.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.16"/></proof>
  </goal>
  <goal name="VC theta.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.42"/></proof>
  </goal>
  <goal name="VC theta.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.55"/></proof>
  </goal>
  <goal name="VC theta.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.16"/></proof>
  </goal>
  <goal name="VC theta.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.40"/></proof>
  </goal>
  <goal name="VC theta.8" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="modulus_one_decomp">
   <goal name="VC theta.8.0" expl="apply premises" proved="true">
   <proof prover="2"><result status="valid" time="1.21"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC theta.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.59" steps="404"/></proof>
  </goal>
  <goal name="VC theta.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.48"/></proof>
  </goal>
  <goal name="VC theta.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.45"/></proof>
  </goal>
  <goal name="VC theta.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.50"/></proof>
  </goal>
  <goal name="VC theta.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.41"/></proof>
  </goal>
  <goal name="VC theta.14" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.20"/></proof>
  </goal>
  <goal name="VC theta.15" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.41"/></proof>
  </goal>
  <goal name="VC theta.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.36" steps="404"/></proof>
  </goal>
  <goal name="VC theta.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.46"/></proof>
  </goal>
  <goal name="VC theta.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.58"/></proof>
  </goal>
  <goal name="VC theta.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.58"/></proof>
  </goal>
  <goal name="VC theta.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.43" steps="410"/></proof>
  </goal>
  <goal name="VC theta.21" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.52"/></proof>
  </goal>
  <goal name="VC theta.22" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.45"/></proof>
  </goal>
  <goal name="VC theta.23" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.37"/></proof>
  </goal>
  <goal name="VC theta.24" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.36"/></proof>
  </goal>
  <goal name="VC theta.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.45"/></proof>
  </goal>
  <goal name="VC theta.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.66"/></proof>
  </goal>
  <goal name="VC theta.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.50" steps="406"/></proof>
  </goal>
  <goal name="VC theta.28" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.66"/></proof>
  </goal>
  <goal name="VC theta.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.68"/></proof>
  </goal>
  <goal name="VC theta.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.81"/></proof>
  </goal>
  <goal name="VC theta.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.18" steps="412"/></proof>
  </goal>
  <goal name="VC theta.32" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.19" steps="408"/></proof>
  </goal>
  <goal name="VC theta.33" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.18"/></proof>
  </goal>
  <goal name="VC theta.34" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC superposition_in_f_basis" expl="VC for superposition_in_f_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC superposition_in_f_basis.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.82" steps="376"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.05" steps="378"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.77" steps="382"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.21" steps="384"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.05" steps="384"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.50" steps="388"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.82"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.86"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.8" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.17"/></proof>
  </goal>
  <goal name="VC superposition_in_f_basis.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC superposition_in_f_basis.9.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H8">
    <goal name="VC superposition_in_f_basis.9.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H41">
     <goal name="VC superposition_in_f_basis.9.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H33">
      <goal name="VC superposition_in_f_basis.9.0.0.0.0" expl="precondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="VC superposition_in_f_basis.9.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="unif_neg_spec1">
        <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.0" expl="precondition" proved="true">
        <transf name="rewrite" proved="true" arg1="unif_pos_spec1">
         <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.0.0" expl="precondition" proved="true">
         <transf name="eliminate_if" proved="true" >
          <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.0.0.0" expl="VC for superposition_in_f_basis" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.0.0.0.0" expl="precondition" proved="true">
           <proof prover="1"><result status="valid" time="2.93"/></proof>
           </goal>
           <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.0.0.0.1" expl="precondition" proved="true">
           <proof prover="0"><result status="valid" time="1.03" steps="414"/></proof>
           </goal>
           <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.0.0.0.2" expl="precondition" proved="true">
           <proof prover="0"><result status="valid" time="1.13" steps="414"/></proof>
           </goal>
           <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.0.0.0.3" expl="precondition" proved="true">
           <proof prover="1"><result status="valid" time="3.58"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="2.84"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC superposition_in_f_basis.9.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="2.53"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC superposition_in_f_basis.9.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="1"><result status="valid" time="2.29"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC superposition_in_f_basis.9.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="1"><result status="valid" time="2.41"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC superposition_in_f_basis.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.26" steps="406"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ortho_super" expl="VC for ortho_super" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC ortho_super.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.09" steps="378"/></proof>
  </goal>
  <goal name="VC ortho_super.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.83" steps="388"/></proof>
  </goal>
  <goal name="VC ortho_super.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.05"/></proof>
  </goal>
  <goal name="VC ortho_super.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.75"/></proof>
  </goal>
  <goal name="VC ortho_super.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.02" steps="400"/></proof>
  </goal>
  <goal name="VC ortho_super.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.70" steps="400"/></proof>
  </goal>
  <goal name="VC ortho_super.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.60" steps="400"/></proof>
  </goal>
  <goal name="VC ortho_super.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.45" steps="400"/></proof>
  </goal>
  <goal name="VC ortho_super.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.33" steps="400"/></proof>
  </goal>
  <goal name="VC ortho_super.9" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="H20">
   <goal name="VC ortho_super.9.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H2">
    <goal name="VC ortho_super.9.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="H10">
     <goal name="VC ortho_super.9.0.0.0" expl="assertion" proved="true">
     <transf name="eliminate_if" proved="true" >
      <goal name="VC ortho_super.9.0.0.0.0" expl="VC for ortho_super" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC ortho_super.9.0.0.0.0.0" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="zero_add_t">
        <goal name="VC ortho_super.9.0.0.0.0.0.0" expl="assertion" proved="true">
        <proof prover="2"><result status="valid" time="1.76"/></proof>
        </goal>
        <goal name="VC ortho_super.9.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="VC ortho_super.9.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="unif_neg_spec2">
          <goal name="VC ortho_super.9.0.0.0.0.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="2.74"/></proof>
          </goal>
          <goal name="VC ortho_super.9.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.05" steps="406"/></proof>
          </goal>
          <goal name="VC ortho_super.9.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.34" steps="406"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC ortho_super.9.0.0.0.0.1" expl="assertion" proved="true">
       <transf name="rewrite" proved="true" arg1="add_zero_t">
        <goal name="VC ortho_super.9.0.0.0.0.1.0" expl="assertion" proved="true">
        <proof prover="2"><result status="valid" time="1.70"/></proof>
        </goal>
        <goal name="VC ortho_super.9.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="VC ortho_super.9.0.0.0.0.1.1.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="unif_pos_spec1">
          <goal name="VC ortho_super.9.0.0.0.0.1.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="2.04"/></proof>
          </goal>
          <goal name="VC ortho_super.9.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.63" steps="406"/></proof>
          </goal>
          <goal name="VC ortho_super.9.0.0.0.0.1.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.55" steps="406"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC ortho_super.9.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC ortho_super.9.0.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.12" steps="404"/></proof>
      </goal>
      <goal name="VC ortho_super.9.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.52" steps="404"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC ortho_super.9.0.1" expl="rewrite premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC ortho_super.9.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.27" steps="404"/></proof>
     </goal>
     <goal name="VC ortho_super.9.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.58" steps="404"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC ortho_super.10" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.17"/></proof>
  </goal>
  <goal name="VC ortho_super.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.54"/></proof>
  </goal>
  <goal name="VC ortho_super.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="3.58"/></proof>
  </goal>
  <goal name="VC ortho_super.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.65" steps="412"/></proof>
  </goal>
  <goal name="VC ortho_super.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.04"/></proof>
  </goal>
  <goal name="VC ortho_super.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.99"/></proof>
  </goal>
  <goal name="VC ortho_super.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.18" steps="422"/></proof>
  </goal>
  <goal name="VC ortho_super.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.21" steps="422"/></proof>
  </goal>
  <goal name="VC ortho_super.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.93" steps="422"/></proof>
  </goal>
  <goal name="VC ortho_super.19" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.71"/></proof>
  </goal>
  <goal name="VC ortho_super.20" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.20"/></proof>
  </goal>
  <goal name="VC ortho_super.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.14"/></proof>
  </goal>
  <goal name="VC ortho_super.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.86"/></proof>
  </goal>
  <goal name="VC ortho_super.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.25"/></proof>
  </goal>
  <goal name="VC ortho_super.24" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="3.50" steps="424"/></proof>
  </goal>
  <goal name="VC ortho_super.25" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="4.00" steps="424"/></proof>
  </goal>
  <goal name="VC ortho_super.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.28"/></proof>
  </goal>
  <goal name="VC ortho_super.27" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.07"/></proof>
  </goal>
  <goal name="VC ortho_super.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="3.62" steps="426"/></proof>
  </goal>
  <goal name="VC ortho_super.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="3.51" steps="426"/></proof>
  </goal>
  <goal name="VC ortho_super.30" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="3.18" steps="426"/></proof>
  </goal>
  <goal name="VC ortho_super.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.19"/></proof>
  </goal>
  <goal name="VC ortho_super.32" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.91"/></proof>
  </goal>
  <goal name="VC ortho_super.33" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC ortho_super.33.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC ortho_super.33.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(path_sem (repeat_had n)
   (add_ket_l ((-. sin (theta ())) *.. unif_neg ())
    (cos (theta ()) *.. unif_pos ()) n))" arg2="(pps_apply (repeat_pps_had n)
 (add_ket_l ((-. sin (theta ())) *.. unif_neg ())
    (cos (theta ()) *.. unif_pos ()) n)  )">
     <goal name="VC ortho_super.33.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H27">
      <goal name="VC ortho_super.33.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC ortho_super.33.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H54">
        <goal name="VC ortho_super.33.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="H54">
         <goal name="VC ortho_super.33.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="mult_zero_t">
          <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_all_full" proved="true" >
           <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="theta_spec">
            <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="theta_spec1">
             <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="square_rt_simpl_fact_assoc">
              <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="square_rt_simpl_fact_assoc">
               <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="minus_out">
                <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="1"><result status="valid" time="2.27"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="1"><result status="valid" time="1.03"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC ortho_super.33.0.0.0.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="1"><result status="valid" time="1.77"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC ortho_super.33.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(repeat_pps_had n)" arg2="(circ_to_pps (repeat_had n))">
      <goal name="VC ortho_super.33.0.0.1.0" expl="equality hypothesis" proved="true">
      <transf name="apply" proved="true" arg1="path_sem_apply">
       <goal name="VC ortho_super.33.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="VC ortho_super.33.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(width (repeat_had n))" arg2="n">
         <goal name="VC ortho_super.33.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="add_ket_l_spec3">
          <goal name="VC ortho_super.33.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="1.99"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC ortho_super.33.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="1"><result status="valid" time="1.99"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC ortho_super.33.0.0.1.1" expl="equality hypothesis" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="VC ortho_super.33.0.0.1.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="repeat_had_spec">
        <goal name="VC ortho_super.33.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
        <proof prover="1"><result status="valid" time="0.88"/></proof>
        </goal>
        <goal name="VC ortho_super.33.0.0.1.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="1"><result status="valid" time="1.87"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC ortho_super.34" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.89"/></proof>
  </goal>
  <goal name="VC ortho_super.35" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="3.61" steps="430"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC psi_i" expl="VC for psi_i" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC psi_i.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.33" steps="384"/></proof>
  </goal>
  <goal name="VC psi_i.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.73" steps="390"/></proof>
  </goal>
  <goal name="VC psi_i.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.23"/></proof>
  </goal>
  <goal name="VC psi_i.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.47"/></proof>
  </goal>
  <goal name="VC psi_i.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.61" steps="398"/></proof>
  </goal>
  <goal name="VC psi_i.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.68" steps="398"/></proof>
  </goal>
  <goal name="VC psi_i.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.60"/></proof>
  </goal>
  <goal name="VC psi_i.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.66"/></proof>
  </goal>
  <goal name="VC psi_i.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.45" steps="402"/></proof>
  </goal>
  <goal name="VC psi_i.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.51" steps="404"/></proof>
  </goal>
  <goal name="VC psi_i.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.38"/></proof>
  </goal>
  <goal name="VC psi_i.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.33"/></proof>
  </goal>
  <goal name="VC psi_i.12" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.50"/></proof>
  </goal>
  <goal name="VC psi_i.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.54"/></proof>
  </goal>
  <goal name="VC psi_i.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.24" steps="426"/></proof>
  </goal>
  <goal name="VC psi_i.15" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC psi_i.15.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC psi_i.15.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H30">
     <goal name="VC psi_i.15.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="ortho_super_def">
      <goal name="VC psi_i.15.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="H40">
       <goal name="VC psi_i.15.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="H60">
        <goal name="VC psi_i.15.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="add_ket_l_switch">
         <goal name="VC psi_i.15.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="rewrite" proved="true" arg1="add_ket_scal_fact">
          <goal name="VC psi_i.15.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="add_ket_scal_fact">
           <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="add_ket_l_eq_scal">
            <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="1"><result status="valid" time="1.59"/></proof>
            </goal>
            <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.46" steps="392"/></proof>
            </goal>
            <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="2.13" steps="392"/></proof>
            </goal>
            <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="minus_out_right">
             <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
             <proof prover="1"><result status="valid" time="1.59"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.0.4" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="2.39" steps="392"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.82" steps="392"/></proof>
           </goal>
           <goal name="VC psi_i.15.0.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="1"><result status="valid" time="1.51"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC psi_i.15.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.83" steps="392"/></proof>
          </goal>
          <goal name="VC psi_i.15.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="1"><result status="valid" time="1.53"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC psi_i.15.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="1"><result status="valid" time="1.47"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC psi_i.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.60"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC diff_psi_i" expl="VC for diff_psi_i" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diff_psi_i.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.38" steps="382"/></proof>
  </goal>
  <goal name="VC diff_psi_i.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.52" steps="384"/></proof>
  </goal>
  <goal name="VC diff_psi_i.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.77"/></proof>
  </goal>
  <goal name="VC diff_psi_i.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.60"/></proof>
  </goal>
  <goal name="VC diff_psi_i.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.95"/></proof>
  </goal>
  <goal name="VC diff_psi_i.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.35" steps="400"/></proof>
  </goal>
  <goal name="VC diff_psi_i.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.32" steps="400"/></proof>
  </goal>
  <goal name="VC diff_psi_i.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.18" steps="400"/></proof>
  </goal>
  <goal name="VC diff_psi_i.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC diff_psi_i.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="psi_i_def">
    <goal name="VC diff_psi_i.8.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H">
     <goal name="VC diff_psi_i.8.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="psi_i_def">
      <goal name="VC diff_psi_i.8.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(path_sem diff (ortho_super()))" arg2="(-. c_one *.. (ortho_super()) )">
       <goal name="VC diff_psi_i.8.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_assoc">
        <goal name="VC diff_psi_i.8.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="apply" proved="true" arg1="add_ket_l_eq">
         <goal name="VC diff_psi_i.8.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.46"/></proof>
         </goal>
         <goal name="VC diff_psi_i.8.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.88" steps="366"/></proof>
         </goal>
         <goal name="VC diff_psi_i.8.0.0.0.0.0.0.2" expl="apply premises" proved="true">
         <proof prover="1"><result status="valid" time="1.43"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC diff_psi_i.8.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="VC diff_psi_i.8.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="2.08" steps="366"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_step" expl="VC for compute_step" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC compute_step.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.37" steps="382"/></proof>
  </goal>
  <goal name="VC compute_step.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.44" steps="384"/></proof>
  </goal>
  <goal name="VC compute_step.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.63"/></proof>
  </goal>
  <goal name="VC compute_step.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.53"/></proof>
  </goal>
  <goal name="VC compute_step.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.55" steps="402"/></proof>
  </goal>
  <goal name="VC compute_step.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.66" steps="402"/></proof>
  </goal>
  <goal name="VC compute_step.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.75" steps="402"/></proof>
  </goal>
  <goal name="VC compute_step.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.58" steps="418"/></proof>
  </goal>
  <goal name="VC compute_step.8" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC compute_step.8.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="psi_i_spec1">
    <goal name="VC compute_step.8.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H14">
     <goal name="VC compute_step.8.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="unif_neg_spec">
      <goal name="VC compute_step.8.0.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="unif_pos_spec">
       <goal name="VC compute_step.8.0.0.0.0.0" expl="precondition" proved="true">
       <transf name="rewrite" proved="true" arg1="scalar_assoc">
        <goal name="VC compute_step.8.0.0.0.0.0.0" expl="precondition" proved="true">
        <proof prover="1"><result status="valid" time="2.32"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_step.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.80" steps="421"/></proof>
  </goal>
  <goal name="VC compute_step.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.04" steps="422"/></proof>
  </goal>
  <goal name="VC compute_step.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.13" steps="420"/></proof>
  </goal>
  <goal name="VC compute_step.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.46" steps="430"/></proof>
  </goal>
  <goal name="VC compute_step.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.96" steps="430"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC grover_run" expl="VC for grover_run" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC grover_run.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC grover_run.0.0" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="1.53" steps="384"/></proof>
   </goal>
   <goal name="VC grover_run.0.1" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="1.77" steps="384"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC grover_run.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.82" steps="384"/></proof>
  </goal>
  <goal name="VC grover_run.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.75" steps="403"/></proof>
  </goal>
  <goal name="VC grover_run.3" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.58" steps="404"/></proof>
  </goal>
  <goal name="VC grover_run.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.48" steps="404"/></proof>
  </goal>
  <goal name="VC grover_run.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.07" steps="405"/></proof>
  </goal>
  <goal name="VC grover_run.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.55" steps="405"/></proof>
  </goal>
  <goal name="VC grover_run.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="2.15" steps="384"/></proof>
  </goal>
  <goal name="VC grover_run.8" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC grover_run.8.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="2.29" steps="390"/></proof>
   </goal>
   <goal name="VC grover_run.8.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.99" steps="418"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC grover_run.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.82" steps="380"/></proof>
  </goal>
  <goal name="VC grover_run.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.32"/></proof>
  </goal>
  <goal name="VC grover_run.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.43"/></proof>
  </goal>
  <goal name="VC grover_run.12" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.64"/></proof>
  </goal>
  <goal name="VC grover_run.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.96"/></proof>
  </goal>
  <goal name="VC grover_run.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="2.12" steps="414"/></proof>
  </goal>
  <goal name="VC grover_run.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.37" steps="414"/></proof>
  </goal>
  <goal name="VC grover_run.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.77"/></proof>
  </goal>
  <goal name="VC grover_run.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.91" steps="426"/></proof>
  </goal>
  <goal name="VC grover_run.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.89"/></proof>
  </goal>
  <goal name="VC grover_run.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.26" steps="432"/></proof>
  </goal>
  <goal name="VC grover_run.20" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="H21">
   <goal name="VC grover_run.20.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="H40">
    <goal name="VC grover_run.20.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="add_ket_l_values">
     <goal name="VC grover_run.20.0.0.0" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="scalar_ket_value">
      <goal name="VC grover_run.20.0.0.0.0" expl="assertion" proved="true">
      <transf name="rewrite" proved="true" arg1="zero_add_t">
       <goal name="VC grover_run.20.0.0.0.0.0" expl="assertion" proved="true">
       <proof prover="5"><result status="valid" time="1.03"/></proof>
       </goal>
       <goal name="VC grover_run.20.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="5"><result status="valid" time="0.73"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC grover_run.20.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="2"><result status="valid" time="1.91"/></proof>
     </goal>
     <goal name="VC grover_run.20.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.43" steps="438"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC grover_run.21" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.04"/></proof>
  </goal>
  <goal name="VC grover_run.22" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.07"/></proof>
  </goal>
  <goal name="VC grover_run.23" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.96"/></proof>
  </goal>
  <goal name="VC grover_run.24" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="2.25"/></proof>
  </goal>
  <goal name="VC grover_run.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.59"/></proof>
  </goal>
  <goal name="VC grover_run.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="2.10"/></proof>
  </goal>
  <goal name="VC grover_run.27" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.80" steps="442"/></proof>
  </goal>
  <goal name="VC grover_run.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="1.99"/></proof>
  </goal>
  <goal name="VC grover_run.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.51" steps="455"/></proof>
  </goal>
  <goal name="VC grover_run.30" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="cpower_div">
   <goal name="VC grover_run.30.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="2.06"/></proof>
   </goal>
   <goal name="VC grover_run.30.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.82" steps="456"/></proof>
   </goal>
   <goal name="VC grover_run.30.2" expl="rewrite premises" proved="true">
   <proof prover="1"><result status="valid" time="2.49"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC grover_run.31" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="proba_measure_spec">
   <goal name="VC grover_run.31.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H43">
    <goal name="VC grover_run.31.0.0" expl="precondition" proved="true">
    <proof prover="1"><result status="valid" time="2.32"/></proof>
    </goal>
    <goal name="VC grover_run.31.0.1" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="1.87" steps="464"/></proof>
    </goal>
    <goal name="VC grover_run.31.0.2" expl="rewrite premises" proved="true">
    <proof prover="0"><result status="valid" time="1.66" steps="464"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC grover_run.31.1" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.71" steps="464"/></proof>
   </goal>
   <goal name="VC grover_run.31.2" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.82" steps="464"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC grover_run.32" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="1.51"/></proof>
  </goal>
  <goal name="VC grover_run.33" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.39" steps="457"/></proof>
  </goal>
  <goal name="VC grover_run.34" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC grover_run.34.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.23" steps="457"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC grover_run.35" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.39" steps="457"/></proof>
  </goal>
  <goal name="VC grover_run.36" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.01" steps="457"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>

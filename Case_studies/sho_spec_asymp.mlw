module Shor_asymptot

         use shor.Shor_spec
         use shor_circuit.Shor
         use export modular_multiplier.Multiplier
         use int.Int
         use qbricks.Semantics
         use arit.Inverse
         use qpe.Phase_estim
         use qft.Qft
         use p_int.P_minmax
         use arit.Inverse
         use  exponentiation.Complex_Exponentiation
         use  complex_operations.Base_type
         use qbricks.Circuit_macros
         use arit.Inverse
use p_set.Fset_comp
     

         (* It is assumed by Shor in his original article, available at
 * https://arxiv.org/abs/quant-ph/9508027, that min_mod_sum is asymptotically
 * bounded below by 4/pi^2. We also take it as granted, the proof would require
 * some dedicated continuous analysis material not available in WHy3.
 * We therefore define this asymptotic bound, instantiate with min_mod_sum preconditions *)
                                  
let predicate asymptotic_bound (f: int->int-> int -> ) (limit : complex)
  requires{real_ limit}
  =
  forall epsilon : complex. c_zero <. epsilon ->
  exists n'.
  forall a bound n. n'< n ->
    0<= a < power_ 2 n ->
    power_ 2 (n-1)< bound < power_ 2 n ->
    a < bound ->
    co_prime a bound ->
  f a bound n' <=. limit +. epsilon

We have, as a direct application, that multiplication by a real scalar preserves the property:

let lemma scalar_asymptotic_bound (f: int->int-> int -> complex) (n: int) (limit scal: complex)
  requires{real_ limit}
  requires{asymptotic_bound f  limit}
  requires{asymptotic_bound (fun i j k -> f i j k *. scal) (limit*.scal)}
  =()
  
end

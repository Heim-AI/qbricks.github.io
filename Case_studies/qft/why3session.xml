<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="CVC3" version="2.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.4.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.1" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="qft.mlw"/>
<theory name="Rev_qft" proved="true">
 <goal name="VC cascade_cont_rz_neg" expl="VC for cascade_cont_rz_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC cascade_cont_rz_neg.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.82" steps="342"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="342"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.05" steps="344"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.91" steps="344"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.55" steps="345"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.47" steps="342"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.48" steps="344"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.50" steps="342"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.55" steps="342"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.79" steps="343"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.77" steps="345"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.67" steps="345"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.12" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_rz_neg.12.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.65" steps="346"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_rz_neg.13" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.78" steps="350"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="350"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.90" steps="352"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.05" steps="352"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.17" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.00" steps="352"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.18" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.97" steps="353"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.19" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.78" steps="353"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.20" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.52" steps="356"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.21" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="((l - 1) + 1)" arg2="l" arg3="in" arg4="H">
   <goal name="VC cascade_cont_rz_neg.21.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H">
   </transf>
   </goal>
   <goal name="VC cascade_cont_rz_neg.21.1" expl="equality hypothesis" proved="true">
   <proof prover="3"><result status="valid" time="0.68" steps="358"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_rz_neg.22" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(n - (l + first_k))" arg2="(n + (- (first_k + l)))">
   <goal name="VC cascade_cont_rz_neg.22.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H5">
   </transf>
   </goal>
   <goal name="VC cascade_cont_rz_neg.22.1" expl="equality hypothesis" proved="true">
   <proof prover="3"><result status="valid" time="0.58" steps="360"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_rz_neg.23" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="362"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.24" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC cascade_cont_rz_neg.24.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_isum_re">
    <goal name="VC cascade_cont_rz_neg.24.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="int_minus_distr">
     <goal name="VC cascade_cont_rz_neg.24.0.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="int_to_ang_add_rev">
      <goal name="VC cascade_cont_rz_neg.24.0.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="ang_add_eq">
       <goal name="VC cascade_cont_rz_neg.24.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="((l + 1) - 1)" arg2="l">
        <goal name="VC cascade_cont_rz_neg.24.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC cascade_cont_rz_neg.24.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="3"><result status="valid" time="0.51" steps="365"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC cascade_cont_rz_neg.24.0.0.0.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC cascade_cont_rz_neg.24.0.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.61" steps="365"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC cascade_cont_rz_neg.24.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.50" steps="365"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC cascade_cont_rz_neg.24.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.50" steps="365"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_rz_neg.25" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.67" steps="340"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.26" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="3.17" steps="373"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.27" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.68" steps="346"/></proof>
  </goal>
  <goal name="VC cascade_cont_rz_neg.28" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_rz_neg.28.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_isum_one">
    <goal name="VC cascade_cont_rz_neg.28.0.0" expl="postcondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC cascade_cont_rz_neg.28.0.0.0" expl="postcondition" proved="true">
     <transf name="eliminate_let" proved="true" >
      <goal name="VC cascade_cont_rz_neg.28.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(fun (x:bitvec) -&gt;
    int_to_ang
    (- (((getbv x @ first_c) * (getbv x @ t)) * power_ 2 (n - first_k))) n)
" arg2="(fun (x:bitvec) -&gt;
    int_to_ang
    (((- (getbv x @ first_c)) * (getbv x @ t)) * power_ 2 (n + (- first_k)))
    n)">
       <goal name="VC cascade_cont_rz_neg.28.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="H3">
       </transf>
       </goal>
       <goal name="VC cascade_cont_rz_neg.28.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="3"><result status="valid" time="3.32" steps="356"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC cascade_cont_rz_neg.28.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.53" steps="353"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC cascade_cont_rz_neg.28.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="VC cascade_cont_rz_neg.28.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H6">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC cascade_cont_qft" expl="VC for cascade_cont_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC cascade_cont_qft.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.0.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.48" steps="326"/></proof>
   </goal>
   <goal name="VC cascade_cont_qft.0.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.68" steps="326"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.1" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.1.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.50" steps="328"/></proof>
   </goal>
   <goal name="VC cascade_cont_qft.1.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.49" steps="328"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.2" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.2.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.59" steps="330"/></proof>
   </goal>
   <goal name="VC cascade_cont_qft.2.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.49" steps="330"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.3" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.3.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.49" steps="331"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.4" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.4.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.66" steps="332"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.5" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.5.0" expl="precondition" proved="true">
   <transf name="replace" proved="true" arg1="(2 + (n - (t + 2)))" arg2="(n-t)">
    <goal name="VC cascade_cont_qft.5.0.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.51" steps="333"/></proof>
    </goal>
    <goal name="VC cascade_cont_qft.5.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="0.60" steps="333"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.6.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.48" steps="335"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.7.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.60" steps="334"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.49" steps="334"/></proof>
  </goal>
  <goal name="VC cascade_cont_qft.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.65" steps="335"/></proof>
  </goal>
  <goal name="VC cascade_cont_qft.10" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="H3">
  </transf>
  </goal>
  <goal name="VC cascade_cont_qft.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC cascade_cont_qft.11.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_diagonal_">
    <goal name="VC cascade_cont_qft.11.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC cascade_cont_qft.11.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="((fun (x1:bitvec) -&gt;
         int_to_ang
         (- ind_isum
            (fun (k:int) -&gt;
              ((getbv x1 @ t) * (getbv x1 @ k))
              * power_ 2 (((n - k) - 1) + t))
            (t + 1) n)
         n)
       @ x)" arg2="((fun (x:bitvec) -&gt;
    int_to_ang
    (- ind_isum
       (fun (k:int) -&gt;
         ((getbv x @ ((t + 1) + k)) * (getbv x @ t)) * power_ 2 (n - (k + 2)))
       0 ((n - (t + 2)) + 1))
    n) x)">
      <goal name="VC cascade_cont_qft.11.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="get_diagonal_">
       <goal name="VC cascade_cont_qft.11.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="H1">
       </transf>
       </goal>
       <goal name="VC cascade_cont_qft.11.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.52" steps="339"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC cascade_cont_qft.11.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC cascade_cont_qft.11.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="instantiate" proved="true" arg1="ind_isum_transl" arg2="(fun (k:int) -&gt;
       ((getbv x @ t) * (getbv x @ k)) * power_ 2 (((n - k) - 1) + t)),(t + 1),n,(t+1)">
        <goal name="VC cascade_cont_qft.11.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="VC cascade_cont_qft.11.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC cascade_cont_qft.11.0.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="replace" proved="true" arg1="(ind_isum
     (fun (b:int) -&gt;
       ((getbv x @ t) * (getbv x @ (b + (t + 1))))
       * power_ 2 (((n - (b + (t + 1))) - 1) + t))
     ((t + 1) - (t + 1)) (n - (t + 1)))
" arg2="(ind_isum
       (fun (k:int) -&gt;
         ((getbv x @ ((t + 1) + k)) * (getbv x @ t)) * power_ 2 (n - (k + 2)))
       0 ((n - (t + 2)) + 1))">
           <goal name="VC cascade_cont_qft.11.0.0.0.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
           <transf name="compute_in_goal" proved="true" >
           </transf>
           </goal>
           <goal name="VC cascade_cont_qft.11.0.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
            <goal name="VC cascade_cont_qft.11.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.67"/></proof>
            </goal>
            <goal name="VC cascade_cont_qft.11.0.0.0.1.0.0.0.0.1.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.80" steps="341"/></proof>
            </goal>
            <goal name="VC cascade_cont_qft.11.0.0.0.1.0.0.0.0.1.2" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.75" steps="341"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_rev_line" expl="VC for qft_rev_line" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC qft_rev_line.0" expl="VC for qft_rev_line" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC qft_rev_line.0.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.51" steps="328"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.1" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC qft_rev_line.0.1.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="2.73" steps="334"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_line.0.2" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.48" steps="332"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.3" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.58" steps="328"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.4" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.52" steps="328"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.5" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.69" steps="328"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.6" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.55" steps="338"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.7" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H">
   </transf>
   </goal>
   <goal name="VC qft_rev_line.0.8" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.60" steps="350"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.9" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.61" steps="350"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.10" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC qft_rev_line.0.10.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="make_bv_length">
     <goal name="VC qft_rev_line.0.10.0.0" expl="precondition" proved="true">
     <proof prover="3"><result status="valid" time="0.48" steps="355"/></proof>
     </goal>
     <goal name="VC qft_rev_line.0.10.0.1" expl="rewrite premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC qft_rev_line.0.10.0.1.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="3.60" steps="361"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC qft_rev_line.0.10.0.2" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.51" steps="355"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_line.0.11" expl="precondition" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC qft_rev_line.0.11.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="ind_isum_plus_one">
     <goal name="VC qft_rev_line.0.11.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="int_minus_distr">
      <goal name="VC qft_rev_line.0.11.0.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_ang_add_rev">
       <goal name="VC qft_rev_line.0.11.0.0.0.0" expl="precondition" proved="true">
       <transf name="apply" proved="true" arg1="ang_add_eq">
        <goal name="VC qft_rev_line.0.11.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="instantiate" proved="true" arg1="H12" arg2="(getbv x),(getbv y),n">
          <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="Hinst">
           <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="3"><result status="valid" time="3.20" steps="363"/></proof>
             </goal>
             <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="((getbv x @ t) * (getbv y @ 0))" arg2="0">
              <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.47" steps="360"/></proof>
              </goal>
              <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
              <transf name="case" proved="true" arg1="((getbv x @ t) = 0)">
               <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0.1.1.0" expl="true case (equality hypothesis)" proved="true">
               <proof prover="3"><result status="valid" time="0.50" steps="359"/></proof>
               </goal>
               <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0.1.1.1" expl="false case (equality hypothesis)" proved="true">
               <transf name="replace" proved="true" arg1="(getbv y @ 0)" arg2="0">
                <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0.1.1.1.0" expl="false case (equality hypothesis)" proved="true">
                <proof prover="3"><result status="valid" time="0.52" steps="359"/></proof>
                </goal>
                <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.0.0.1.1.1.1" expl="equality hypothesis" proved="true">
                <proof prover="2"><result status="valid" time="1.79"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC qft_rev_line.0.11.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="0.55" steps="355"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC qft_rev_line.0.11.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(ind_isum
       (fun (k:int) -&gt;
         ((getbv
           (make_bv
            (fun (i:int) -&gt; if i = t then getbv y @ 0 else getbv x @ i) n)
           @ t)
          * (getbv
             (make_bv
              (fun (i:int) -&gt; if i = t then getbv y @ 0 else getbv x @ i) n)
             @ k))
         * power_ 2 (((n - k) - 1) + t))
       (t + 1) n)" arg2="(ind_isum
     (fun (k:int) -&gt;
       ((getbv x @ k) * (getbv y @ 0)) * power_ 2 (((n - k) - 1) + t))
     (t + 1) n)">
         <goal name="VC qft_rev_line.0.11.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
         </transf>
         </goal>
         <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="ind_isum_eq">
          <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
             <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
              <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="0.56" steps="359"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <transf name="compute_specified" proved="true" >
               <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.0.1.0" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="2.88" steps="365"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.51" steps="359"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.1.0" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="2.99" steps="365"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC qft_rev_line.0.11.0.0.0.0.1.1.0.0.0.2" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="0.52" steps="359"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_line.0.11.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.49" steps="355"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC qft_rev_line.0.11.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.64" steps="355"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_line.0.12" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC qft_rev_line.0.12.0" expl="precondition" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC qft_rev_line.0.12.0.0" expl="precondition" proved="true">
     <transf name="rewrite" proved="true" arg1="H11">
      <goal name="VC qft_rev_line.0.12.0.0.0" expl="precondition" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_bv_make_">
       <goal name="VC qft_rev_line.0.12.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.52" steps="355"/></proof>
       </goal>
       <goal name="VC qft_rev_line.0.12.0.0.0.1" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC qft_rev_line.0.12.0.0.0.1.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="2.97" steps="361"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_line.0.12.0.0.0.2" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC qft_rev_line.0.12.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC qft_rev_line.0.12.0.0.0.2.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="3.06" steps="361"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_line.0.13" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC qft_rev_line.0.13.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.59" steps="340"/></proof>
    </goal>
    <goal name="VC qft_rev_line.0.13.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.62" steps="358"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_line.0.14" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC qft_rev_line.0.14.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.52" steps="341"/></proof>
    </goal>
    <goal name="VC qft_rev_line.0.14.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="3.06" steps="362"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_line.0.15" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.66" steps="330"/></proof>
   </goal>
   <goal name="VC qft_rev_line.0.16" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC qft_rev_line.0.16.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(fun (x:bitvec) (y:bitvec) -&gt;
    int_to_ang
    (- ind_isum
       (fun (j:int) -&gt;
         ((getbv x @ j) * (getbv y @ 0)) * power_ 2 (((n - j) - 1) + t))
       t n)
    n)" arg2="(fun (x:bitvec) (y:bitvec) -&gt;
    int_to_ang (((getbv x @ t) * (getbv y @ 0)) * power_ 2 (n - 1)) n)">
     <goal name="VC qft_rev_line.0.16.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="H3">
     </transf>
     </goal>
     <goal name="VC qft_rev_line.0.16.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_func">
      <goal name="VC qft_rev_line.0.16.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC qft_rev_line.0.16.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC qft_rev_line.0.16.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_func">
         <goal name="VC qft_rev_line.0.16.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC qft_rev_line.0.16.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC qft_rev_line.0.16.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.60"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_line.0.16.1" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H3">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_rev_be" expl="VC for qft_rev_be" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC qft_rev_be.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_be.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.47" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_be.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.47" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_be.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.45" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_be.4" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC qft_rev_be.4.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="2.79" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.48" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_be.6" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC qft_rev_be.6.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="3.04" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.62" steps="334"/></proof>
  </goal>
  <goal name="VC qft_rev_be.8" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC qft_rev_be.8.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="2.94" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_be.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.62" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_be.11" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.48" steps="338"/></proof>
  </goal>
  <goal name="VC qft_rev_be.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.47" steps="338"/></proof>
  </goal>
  <goal name="VC qft_rev_be.13" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC qft_rev_be.13.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="make_bv_length">
    <goal name="VC qft_rev_be.13.0.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.64" steps="350"/></proof>
    </goal>
    <goal name="VC qft_rev_be.13.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC qft_rev_be.13.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="3.10" steps="356"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.13.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.58" steps="350"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.14" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC qft_rev_be.14.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="make_bv_length">
    <goal name="VC qft_rev_be.14.0.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.54" steps="350"/></proof>
    </goal>
    <goal name="VC qft_rev_be.14.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC qft_rev_be.14.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="2.96" steps="356"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.14.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.51" steps="350"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.15" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC qft_rev_be.15.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="make_bv_length">
    <goal name="VC qft_rev_be.15.0.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.48" steps="350"/></proof>
    </goal>
    <goal name="VC qft_rev_be.15.0.1" expl="rewrite premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC qft_rev_be.15.0.1.0" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="6.21" steps="356"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.15.0.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="1.16" steps="350"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.78" steps="346"/></proof>
  </goal>
  <goal name="VC qft_rev_be.17" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="1.43" steps="347"/></proof>
  </goal>
  <goal name="VC qft_rev_be.18" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="((k - 1) + 1)" arg2="k" arg3="in" arg4="H5">
   <goal name="VC qft_rev_be.18.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="H5">
   </transf>
   </goal>
   <goal name="VC qft_rev_be.18.1" expl="equality hypothesis" proved="true">
   <proof prover="3"><result status="valid" time="0.60" steps="347"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.19" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="H10">
  </transf>
  </goal>
  <goal name="VC qft_rev_be.20" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC qft_rev_be.20.0" expl="precondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ind_isum_re">
    <goal name="VC qft_rev_be.20.0.0" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_add_rev">
     <goal name="VC qft_rev_be.20.0.0.0" expl="precondition" proved="true">
     <transf name="apply" proved="true" arg1="ang_add_eq">
      <goal name="VC qft_rev_be.20.0.0.0.0" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(ind_isum
   (fun (l:int) -&gt;
     - ind_isum
       (fun (k1:int) -&gt;
         ((getbv x @ k1) * (getbv y @ l)) * power_ 2 (((n - k1) - 1) + l))
       l n)
   0 ((k + 1) - 1))" arg2="(ind_isum
     (fun (l:int) -&gt;
       - ind_isum
         (fun (k1:int) -&gt;
           ((getbv x @ k1) * (getbv (hpart y k) @ l))
           * power_ 2 (((n - k1) - 1) + l))
         l n)
     0 k)">
       <goal name="VC qft_rev_be.20.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="VC qft_rev_be.20.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
        <goal name="VC qft_rev_be.20.0.0.0.0.1.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC qft_rev_be.20.0.0.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC qft_rev_be.20.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="int_minus_eq">
           <goal name="VC qft_rev_be.20.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
            <goal name="VC qft_rev_be.20.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="VC qft_rev_be.20.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="compute_specified" proved="true" >
              <goal name="VC qft_rev_be.20.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.32" steps="365"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC qft_rev_be.20.0.0.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.64" steps="359"/></proof>
            </goal>
            <goal name="VC qft_rev_be.20.0.0.0.0.1.0.0.0.0.2" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.55" steps="359"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC qft_rev_be.20.0.0.0.0.1.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.57" steps="355"/></proof>
        </goal>
        <goal name="VC qft_rev_be.20.0.0.0.0.1.2" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.63" steps="355"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC qft_rev_be.20.0.0.0.1" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC qft_rev_be.20.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="replace" proved="true" arg1="(ind_isum
       (fun (j:int) -&gt;
         ((getbv
           (make_bv
            (fun (i:int) -&gt;
              if 0 &lt;= i /\ i &lt; k then getbv (hpart y k) @ i else getbv x @ i)
            n)
           @ j)
          * (getbv (tpart y k) @ 0))
         * power_ 2 (((n - j) - 1) + k))
       k n)" arg2="(ind_isum
     (fun (k1:int) -&gt;
       ((getbv x @ k1) * (getbv y @ ((k + 1) - 1)))
       * power_ 2 (((n - k1) - 1) + ((k + 1) - 1)))
     ((k + 1) - 1) n)">
        <goal name="VC qft_rev_be.20.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC qft_rev_be.20.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
        <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
         <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
            <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(if 0 &lt;= k /\ k &lt; k1 then getbv (hpart y k1) @ k else getbv x @ k)" arg2="(getbv x k)">
              <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="tpart_value_b">
               <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="0.58" steps="359"/></proof>
               </goal>
               <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.66" steps="359"/></proof>
               </goal>
               <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.56" steps="359"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="3"><result status="valid" time="0.56" steps="359"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="3.18" steps="365"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC qft_rev_be.20.0.0.0.1.0.1.0.0.0.2" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.59" steps="359"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC qft_rev_be.20.0.0.0.1.0.1.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.56" steps="355"/></proof>
         </goal>
         <goal name="VC qft_rev_be.20.0.0.0.1.0.1.2" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.49" steps="355"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC qft_rev_be.20.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.56" steps="355"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.20.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.51" steps="355"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.21" expl="precondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC qft_rev_be.21.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_equal_bv_make_">
    <goal name="VC qft_rev_be.21.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.56" steps="355"/></proof>
    </goal>
    <goal name="VC qft_rev_be.21.0.1" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC qft_rev_be.21.0.1.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="3.12" steps="361"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.21.0.2" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC qft_rev_be.21.0.2.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC qft_rev_be.21.0.2.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
       <goal name="VC qft_rev_be.21.0.2.0.0.0" expl="apply premises" proved="true">
       <transf name="case" proved="true" arg1="(i &lt; (k + 1))">
        <goal name="VC qft_rev_be.21.0.2.0.0.0.0" expl="true case (apply premises)" proved="true">
        <transf name="case" proved="true" arg1="(i = k )">
         <goal name="VC qft_rev_be.21.0.2.0.0.0.0.0" expl="true case (apply premises)" proved="true">
         <transf name="rewrite" proved="true" arg1="tpart_value_b">
          <goal name="VC qft_rev_be.21.0.2.0.0.0.0.0.0" expl="true case (apply premises)" proved="true">
          <proof prover="3"><result status="valid" time="0.54" steps="363"/></proof>
          </goal>
          <goal name="VC qft_rev_be.21.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.51" steps="363"/></proof>
          </goal>
          <goal name="VC qft_rev_be.21.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.53" steps="363"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC qft_rev_be.21.0.2.0.0.0.0.1" expl="false case (true case. apply premises)" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="VC qft_rev_be.21.0.2.0.0.0.0.1.0" expl="false case (true case. apply premises)" proved="true">
          <transf name="replace" proved="true" arg1="((fun (i1:int) -&gt;
            if 0 &lt;= i1 /\ i1 &lt; k then getbv (hpart y k) @ i1
            else getbv x @ i1)
          @ i)" arg2="(getbv y i)">
           <goal name="VC qft_rev_be.21.0.2.0.0.0.0.1.0.0" expl="false case (true case. apply premises)" proved="true">
           <proof prover="3"><result status="valid" time="0.56" steps="363"/></proof>
           </goal>
           <goal name="VC qft_rev_be.21.0.2.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC qft_rev_be.21.0.2.0.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
            <proof prover="3"><result status="valid" time="3.28" steps="366"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC qft_rev_be.21.0.2.0.0.0.1" expl="false case (apply premises)" proved="true">
        <proof prover="3"><result status="valid" time="3.41" steps="363"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_be.21.0.2.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC qft_rev_be.21.0.2.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="3.21" steps="365"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_be.21.0.2.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.56" steps="359"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.22" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_be.23" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="3.41" steps="362"/></proof>
  </goal>
  <goal name="VC qft_rev_be.24" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="332"/></proof>
  </goal>
  <goal name="VC qft_rev_be.25" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC qft_rev_be.25.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(fun (x:bitvec) (y:bitvec) -&gt;
    make_bv
    (fun (i:int) -&gt;
      if 0 &lt;= i /\ i &lt; (k + 1) then getbv y @ i else getbv x @ i)
    n)" arg2="(fun (x:bitvec) (y:bitvec) -&gt;
    make_bv (fun (i:int) -&gt; if i = 0 then getbv y @ 0 else getbv x @ i) n)">
    <goal name="VC qft_rev_be.25.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(fun (x:bitvec) (y:bitvec) -&gt;
    int_to_ang
    (ind_isum
     (fun (l:int) -&gt;
       - ind_isum
         (fun (k1:int) -&gt;
           ((getbv x @ k1) * (getbv y @ l)) * power_ 2 (((n - k1) - 1) + l))
         l n)
     0 (k + 1))
    n)" arg2="(fun (x:bitvec) (y:bitvec) -&gt;
    int_to_ang
    (- ind_isum
       (fun (j:int) -&gt;
         ((getbv x @ j) * (getbv y @ 0)) * power_ 2 (((n - j) - 1) + 0))
       0 n)
    n)
">
     <goal name="VC qft_rev_be.25.0.0.0" expl="postcondition" proved="true">
     <transf name="replace" proved="true" arg1="(k+1)" arg2="1">
      <goal name="VC qft_rev_be.25.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="H3">
      </transf>
      </goal>
      <goal name="VC qft_rev_be.25.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="0.59" steps="341"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC qft_rev_be.25.0.0.1" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="set_equal_func">
      <goal name="VC qft_rev_be.25.0.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC qft_rev_be.25.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC qft_rev_be.25.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="set_equal_func">
         <goal name="VC qft_rev_be.25.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC qft_rev_be.25.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC qft_rev_be.25.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="ind_isum_one">
            <goal name="VC qft_rev_be.25.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
            <goal name="VC qft_rev_be.25.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.63" steps="341"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.25.0.1" expl="equality hypothesis" proved="true">
    <transf name="apply" proved="true" arg1="set_equal_func">
     <goal name="VC qft_rev_be.25.0.1.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC qft_rev_be.25.0.1.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC qft_rev_be.25.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="set_equal_func">
        <goal name="VC qft_rev_be.25.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC qft_rev_be.25.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC qft_rev_be.25.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="set_equal_bv_make_">
           <goal name="VC qft_rev_be.25.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="0.60" steps="341"/></proof>
           </goal>
           <goal name="VC qft_rev_be.25.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC qft_rev_be.25.0.1.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="3.05" steps="347"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC qft_rev_be.25.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.23"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_be.25.1" expl="postcondition" proved="true">
   <transf name="eliminate_let" proved="true" >
    <goal name="VC qft_rev_be.25.1.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="H3">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.26" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="324"/></proof>
  </goal>
  <goal name="VC qft_rev_be.27" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="polysquare_def">
   <goal name="VC qft_rev_be.27.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.39"/></proof>
   </goal>
   <goal name="VC qft_rev_be.27.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.64" steps="332"/></proof>
   </goal>
   <goal name="VC qft_rev_be.27.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.76" steps="332"/></proof>
   </goal>
   <goal name="VC qft_rev_be.27.3" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.70" steps="332"/></proof>
   </goal>
   <goal name="VC qft_rev_be.27.4" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.63" steps="332"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_be.28" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.61" steps="334"/></proof>
  </goal>
  <goal name="VC qft_rev_be.29" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.80" steps="334"/></proof>
  </goal>
  <goal name="VC qft_rev_be.30" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="correct_path_sum_bv_sim" arg2="result,((n - 1) + 1),(fun (x:bitvec) (y:bitvec) -&gt;
    make_bv
    (fun (i:int) -&gt;
      if 0 &lt;= i /\ i &lt; ((n - 1) + 1) then getbv y @ i else getbv x @ i)
    n),(fun (x:bitvec) (y:bitvec) -&gt;
    int_to_ang
    (ind_isum
     (fun (l:int) -&gt;
       - ind_isum
         (fun (k:int) -&gt;
           ((getbv x @ k) * (getbv y @ l)) * power_ 2 (((n - k) - 1) + l))
         l n)
     0 ((n - 1) + 1))
    n),n,(fun (_:bitvec) (y:bitvec) -&gt; y),(fun (x:bitvec) (y:bitvec) -&gt;
    int_to_ang
    (ind_isum
     (fun (l:int) -&gt;
       - ind_isum
         (fun (k:int) -&gt;
           ((getbv x @ k) * (getbv y @ l)) * power_ 2 (((n - k) - 1) + l))
         l n)
     0 n)
    n)">
   <goal name="VC qft_rev_be.30.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="Hinst">
    <goal name="VC qft_rev_be.30.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.59" steps="334"/></proof>
    </goal>
    <goal name="VC qft_rev_be.30.0.1" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC qft_rev_be.30.0.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC qft_rev_be.30.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="make_bv_length">
       <goal name="VC qft_rev_be.30.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.83" steps="338"/></proof>
       </goal>
       <goal name="VC qft_rev_be.30.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC qft_rev_be.30.0.1.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="4.61" steps="345"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_be.30.0.1.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.79" steps="338"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.30.0.2" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC qft_rev_be.30.0.2.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC qft_rev_be.30.0.2.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="set_equal_bv">
       <goal name="VC qft_rev_be.30.0.2.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="make_bv_length">
        <goal name="VC qft_rev_be.30.0.2.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.87" steps="338"/></proof>
        </goal>
        <goal name="VC qft_rev_be.30.0.2.0.0.0.1" expl="rewrite premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC qft_rev_be.30.0.2.0.0.0.1.0" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="4.45" steps="345"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC qft_rev_be.30.0.2.0.0.0.2" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="1.02" steps="338"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_be.30.0.2.0.0.1" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC qft_rev_be.30.0.2.0.0.1.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
         <goal name="VC qft_rev_be.30.0.2.0.0.1.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC qft_rev_be.30.0.2.0.0.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.66"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC qft_rev_be.30.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC qft_rev_be.30.0.2.0.0.1.0.1.0" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="3.91" steps="349"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC qft_rev_be.30.0.2.0.0.1.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC qft_rev_be.30.0.2.0.0.1.0.2.0" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.98" steps="342"/></proof>
          </goal>
          <goal name="VC qft_rev_be.30.0.2.0.0.1.0.2.1" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="make_bv_length" arg2="in" arg3="H">
           <goal name="VC qft_rev_be.30.0.2.0.0.1.0.2.1.0" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="0.86" steps="342"/></proof>
           </goal>
           <goal name="VC qft_rev_be.30.0.2.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC qft_rev_be.30.0.2.0.0.1.0.2.1.1.0" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="3.13" steps="349"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC qft_rev_be.30.0.2.0.0.1.0.2.1.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="0.61" steps="342"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.30.0.3" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC qft_rev_be.30.0.3.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC qft_rev_be.30.0.3.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="int_to_ang_eq">
       <goal name="VC qft_rev_be.30.0.3.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ind_isum_eq_gen">
        <goal name="VC qft_rev_be.30.0.3.0.0.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
        </transf>
        </goal>
        <goal name="VC qft_rev_be.30.0.3.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.51" steps="338"/></proof>
        </goal>
        <goal name="VC qft_rev_be.30.0.3.0.0.0.2" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.52" steps="338"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_be.30.0.3.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.50" steps="338"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_be.30.0.4" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="H3">
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_rev_coeff" expl="VC for qft_rev_coeff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC qft_rev_coeff.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.49" steps="324"/></proof>
  </goal>
  <goal name="VC qft_rev_coeff.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="324"/></proof>
  </goal>
  <goal name="VC qft_rev_coeff.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="4.86" steps="348"/></proof>
  </goal>
  <goal name="VC qft_rev_coeff.3" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC qft_rev_coeff.3.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC qft_rev_coeff.3.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="H15">
     <goal name="VC qft_rev_coeff.3.0.0.0" expl="postcondition" proved="true">
     <proof prover="2"><result status="valid" time="1.78"/></proof>
     </goal>
     <goal name="VC qft_rev_coeff.3.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.98" steps="322"/></proof>
     </goal>
     <goal name="VC qft_rev_coeff.3.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="1.13" steps="322"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_rev_qft_unit_be" expl="VC for path_sem_rev_qft_unit_be" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_rev_qft_unit_be.0" expl="postcondition" proved="true">
  <transf name="instantiate" proved="true" arg1="correct_path_sum_bv_apply" arg2="(qft_rev_be n),n,(fun (_:bitvec) (y:bitvec) -&gt; y),(fun (x1:bitvec) (y:bitvec) -&gt;
     int_to_ang
     (ind_isum
      (fun (l:int) -&gt;
        - ind_isum
          (fun (k:int) -&gt;
            ((getbv x1 @ k) * (getbv y @ l)) * power_ 2 (((n - k) - 1) + l))
          l n)      0 n)n),(ket_to_bv x)">
   <goal name="VC path_sem_rev_qft_unit_be.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="ket_to_bv_to_ket" arg2="in" arg3="Hinst">
    <goal name="VC path_sem_rev_qft_unit_be.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="Hinst">
     <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="scalar_eq_gen">
      <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
       <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="3.43" steps="331"/></proof>
       </goal>
       <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.56" steps="328"/></proof>
       </goal>
       <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="2.96" steps="331"/></proof>
       </goal>
       <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.3" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.3.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="qft_rev_coeff_spec">
          <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
          </transf>
          </goal>
          <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.3.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.50" steps="330"/></proof>
          </goal>
          <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.3.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="0"><result status="valid" time="1.36"/></proof>
          </goal>
          <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.0.3.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="3.10" steps="333"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC path_sem_rev_qft_unit_be.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.55" steps="328"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC path_sem_rev_qft_unit_be.0.0.0.1" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC path_sem_rev_qft_unit_be.0.0.0.1.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC path_sem_rev_qft_unit_be.0.0.0.1.0.0" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="2.96" steps="335"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC path_sem_rev_qft_unit_be.0.0.0.2" expl="rewrite premises" proved="true">
     <transf name="apply" proved="true" arg1="ket_to_bv_length">
      <goal name="VC path_sem_rev_qft_unit_be.0.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.50" steps="328"/></proof>
      </goal>
      <goal name="VC path_sem_rev_qft_unit_be.0.0.0.2.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(width (qft_rev_be n))" arg2="n">
       <goal name="VC path_sem_rev_qft_unit_be.0.0.0.2.1.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="2.81" steps="331"/></proof>
       </goal>
       <goal name="VC path_sem_rev_qft_unit_be.0.0.0.2.1.1" expl="equality hypothesis" proved="true">
       <proof prover="3"><result status="valid" time="2.76" steps="331"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC path_sem_rev_qft_unit_be.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC path_sem_rev_qft_unit_be.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="apply" proved="true" arg1="qft_rev_be_spec">
       <goal name="VC path_sem_rev_qft_unit_be.0.0.0.3.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.49" steps="328"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC path_sem_rev_qft_unit_be.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.68" steps="328"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_rev_coeff" expl="VC for int_qft_rev_coeff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_rev_coeff.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.82" steps="326"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.77" steps="330"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.73" steps="330"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.73" steps="330"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.4" expl="precondition" proved="true">
  <transf name="replace" proved="true" arg1="(-i)" arg2="(- (div i (power_ 2 n) * power_ 2 n + mod i (power_ 2 n)))">
   <goal name="VC int_qft_rev_coeff.4.0" expl="precondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall a b c. a + (b-c) = a+b-c)">
    <goal name="VC int_qft_rev_coeff.4.0.0" expl="asserted formula" proved="true">
    <proof prover="3"><result status="valid" time="0.54" steps="330"/></proof>
    </goal>
    <goal name="VC int_qft_rev_coeff.4.0.1" expl="precondition" proved="true">
    <transf name="rewrite" proved="true" arg1="h">
     <goal name="VC int_qft_rev_coeff.4.0.1.0" expl="precondition" proved="true">
     <proof prover="3"><result status="valid" time="0.53" steps="330"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC int_qft_rev_coeff.4.1" expl="equality hypothesis" proved="true">
   <proof prover="0"><result status="valid" time="1.22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC int_qft_rev_coeff.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.19"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.02" steps="334"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="332"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.8" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="power_to_">
   <goal name="VC int_qft_rev_coeff.8.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="3.16" steps="333"/></proof>
   </goal>
   <goal name="VC int_qft_rev_coeff.8.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.58" steps="332"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC int_qft_rev_coeff.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="336"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.72" steps="346"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.65" steps="344"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.12" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="power_to_">
   <goal name="VC int_qft_rev_coeff.12.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="3.50" steps="345"/></proof>
   </goal>
   <goal name="VC int_qft_rev_coeff.12.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.53" steps="344"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC int_qft_rev_coeff.13" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.46" steps="348"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.78" steps="350"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.58" steps="350"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.81" steps="330"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.17" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.76" steps="330"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.18" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.80" steps="330"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.08"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="1.05"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.21" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="2.98" steps="334"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.22" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="332"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.23" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="power_to_">
   <goal name="VC int_qft_rev_coeff.23.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="3.18" steps="333"/></proof>
   </goal>
   <goal name="VC int_qft_rev_coeff.23.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.61" steps="332"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC int_qft_rev_coeff.24" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="336"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.25" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="4.83" steps="346"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.26" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.79" steps="344"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.27" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="power_to_">
   <goal name="VC int_qft_rev_coeff.27.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="5.13" steps="345"/></proof>
   </goal>
   <goal name="VC int_qft_rev_coeff.27.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.85" steps="344"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC int_qft_rev_coeff.28" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="4.71" steps="348"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.29" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="5.09" steps="350"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.30" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.77" steps="350"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.31" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.76" steps="324"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.32" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="5.03" steps="342"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.33" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.84" steps="332"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.34" expl="precondition" proved="true">
  <transf name="rewrite" proved="true" arg1="power_to_">
   <goal name="VC int_qft_rev_coeff.34.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="4.99" steps="341"/></proof>
   </goal>
   <goal name="VC int_qft_rev_coeff.34.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.74" steps="332"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC int_qft_rev_coeff.35" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="6.05" steps="345"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.36" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="5.54" steps="347"/></proof>
  </goal>
  <goal name="VC int_qft_rev_coeff.37" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC int_qft_rev_coeff.37.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC int_qft_rev_coeff.37.0.0" expl="postcondition" proved="true">
    <transf name="destruct" proved="true" arg1="H9">
     <goal name="VC int_qft_rev_coeff.37.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="set_ang_exp_eq">
      <goal name="VC int_qft_rev_coeff.37.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="i_to_c_mult">
       <goal name="VC int_qft_rev_coeff.37.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="real_to_ang_to_int_to_ang">
        <goal name="VC int_qft_rev_coeff.37.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="i_to_c_mult">
         <goal name="VC int_qft_rev_coeff.37.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="real_to_ang_to_int_to_ang">
          <goal name="VC int_qft_rev_coeff.37.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="assert" proved="true" arg1="(forall i i&#39;  n . 0&lt;n -&gt; mod i (power_ 2 n) = mod i&#39; (power_ 2 n) -&gt; int_to_ang i  n = int_to_ang i&#39;  n )">
           <goal name="VC int_qft_rev_coeff.37.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="2"><result status="valid" time="2.04"/></proof>
           </goal>
           <goal name="VC int_qft_rev_coeff.37.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
           <proof prover="2"><result status="valid" time="1.81"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC int_qft_rev_coeff.37.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.67" steps="314"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC int_qft_rev_coeff.37.0.0.0.0.0.1" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="1.15"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC int_qft_rev_coeff.37.0.0.1" expl="postcondition" proved="true">
     <transf name="destruct" proved="true" arg1="H9">
      <goal name="VC int_qft_rev_coeff.37.0.0.1.0" expl="postcondition" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="H9">
         <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0" expl="postcondition" proved="true">
         <transf name="apply" proved="true" arg1="set_ang_exp_eq">
          <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="real_to_ang_eq">
           <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="real_mult">
            <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="1.71"/></proof>
            </goal>
            <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="0.65" steps="322"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="( mod (- i) (power_ 2 n))" arg2="((power_ 2 n - mod i (power_ 2 n)))">
            <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(power_ 2 n - mod i (power_ 2 n))" arg2="(power_ 2 n + (- mod i (power_ 2 n)))">
             <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
              <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
              <transf name="assert" proved="true" arg1="(forall a b c d.(a+.b) *. c*.d= a*.d*.c +. b*.c*.d)">
               <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.0.0" expl="asserted formula" proved="true">
                <transf name="rewrite" proved="true" arg1="mult_distr_add_l">
                 <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0" expl="asserted formula" proved="true">
                 <transf name="rewrite" proved="true" arg1="mult_distr_add_l">
                  <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
                  <proof prover="3"><result status="valid" time="0.67" steps="322"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="h">
                <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.1.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="add_eq_t">
                 <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="one_mult_t">
                  <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                  <proof prover="4"><result status="valid" time="1.58"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.0.0.1.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="0.66" steps="322"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
             <proof prover="3"><result status="valid" time="0.67" steps="322"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC int_qft_rev_coeff.37.0.0.1.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="3"><result status="valid" time="0.73" steps="322"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC int_qft_rev_coeff.37.0.0.1.1" expl="postcondition" proved="true">
      <transf name="eliminate_let" proved="true" >
       <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0" expl="postcondition" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="H9">
         <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0" expl="postcondition" proved="true">
         <transf name="replace" proved="true" arg1="(mod (- i) (power_ 2 n))" arg2="(power_ 2 n - mod i (power_ 2 n))">
          <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0" expl="postcondition" proved="true">
          <transf name="apply" proved="true" arg1="set_ang_exp_eq">
           <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="real_to_ang_eq">
            <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="real_mult">
             <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="real_mult">
              <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="0.74" steps="322"/></proof>
              </goal>
              <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="0.71" steps="322"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <proof prover="3"><result status="valid" time="0.72" steps="322"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1" expl="apply premises" proved="true">
            <transf name="assert" proved="true" arg1="(forall a b c d.(a+.b) *. c*.d= a*.d*.c +. b*.c*.d)">
             <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.0" expl="asserted formula" proved="true">
             <transf name="split_vc" proved="true" >
              <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
              <transf name="rewrite" proved="true" arg1="mult_distr_add_l">
               <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.0.0.0" expl="asserted formula" proved="true">
               <transf name="rewrite" proved="true" arg1="mult_distr_add_l">
                <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.0.0.0.0" expl="asserted formula" proved="true">
                <proof prover="3"><result status="valid" time="0.69" steps="322"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.1" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(power_ 2 n - mod i (power_ 2 n))" arg2="(power_ 2 n + (- mod i (power_ 2 n)))">
              <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="i_to_c_add_rev">
               <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="h">
                <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="one_mult_t">
                 <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                 </transf>
                 </goal>
                 <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="4"><result status="valid" time="1.68"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.0.0.1.1.1" expl="equality hypothesis" proved="true">
              <proof prover="3"><result status="valid" time="0.69" steps="322"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC int_qft_rev_coeff.37.0.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="3"><result status="valid" time="0.71" steps="322"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC int_qft_rev_coeff.38" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H">
   <goal name="VC int_qft_rev_coeff.38.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="qft_rev_coeff_def">
    <goal name="VC int_qft_rev_coeff.38.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
     <goal name="VC int_qft_rev_coeff.38.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="int_bit_inversion_def">
      <goal name="VC int_qft_rev_coeff.38.0.0.0.0" expl="postcondition" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="VC int_qft_rev_coeff.38.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.54" steps="344"/></proof>
      </goal>
      <goal name="VC int_qft_rev_coeff.38.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="power_to_">
       <goal name="VC int_qft_rev_coeff.38.0.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.53"/></proof>
       </goal>
       <goal name="VC int_qft_rev_coeff.38.0.0.0.2.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.52" steps="344"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC int_qft_rev_coeff.38.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.62" steps="344"/></proof>
     </goal>
     <goal name="VC int_qft_rev_coeff.38.0.0.2" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="power_to_">
      <goal name="VC int_qft_rev_coeff.38.0.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="4.77" steps="350"/></proof>
      </goal>
      <goal name="VC int_qft_rev_coeff.38.0.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.60" steps="344"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC int_qft_rev_coeff.38.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.54" steps="344"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_rev_coeff_int_to_ang" expl="VC for qft_rev_coeff_int_to_ang" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC qft_rev_coeff_int_to_ang.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="qft_rev_coeff_def">
   <goal name="VC qft_rev_coeff_int_to_ang.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="set_ang_exp_eq">
    <goal name="VC qft_rev_coeff_int_to_ang.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="int_to_ang_def">
     <goal name="VC qft_rev_coeff_int_to_ang.0.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="real_to_ang_eq">
      <goal name="VC qft_rev_coeff_int_to_ang.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="real_mult">
       <goal name="VC qft_rev_coeff_int_to_ang.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="3.86" steps="330"/></proof>
       </goal>
       <goal name="VC qft_rev_coeff_int_to_ang.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="3.22" steps="330"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC qft_rev_coeff_int_to_ang.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.58"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC qft_rev_coeff_int_to_ang.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.74" steps="328"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_coeff_int_to_ang.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.78" steps="328"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_rev_qft_ket_be" expl="VC for path_sem_rev_qft_ket_be" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_rev_qft_ket_be.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_rev_qft_unit_be">
   <goal name="VC path_sem_rev_qft_ket_be.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq">
    <goal name="VC path_sem_rev_qft_ket_be.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="VC path_sem_rev_qft_ket_be.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.54" steps="328"/></proof>
     </goal>
     <goal name="VC path_sem_rev_qft_ket_be.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.54" steps="328"/></proof>
     </goal>
     <goal name="VC path_sem_rev_qft_ket_be.0.0.0.2" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC path_sem_rev_qft_ket_be.0.0.0.2.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC path_sem_rev_qft_ket_be.0.0.0.2.0.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="1.50"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC path_sem_rev_qft_ket_be.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.48" steps="328"/></proof>
   </goal>
   <goal name="VC path_sem_rev_qft_ket_be.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="2.82" steps="330"/></proof>
   </goal>
   <goal name="VC path_sem_rev_qft_ket_be.0.3" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.13"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_path_sem_rev_qft_ket_be" expl="VC for get_path_sem_rev_qft_ket_be" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_path_sem_rev_qft_ket_be.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_rev_qft_ket_be">
   <goal name="VC get_path_sem_rev_qft_ket_be.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_ket_value">
    <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.49" steps="332"/></proof>
     </goal>
     <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
      <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="sum_null_but_maybe_one_elt" arg2="(fun (e1:bitvec) -&gt;
    get_ket (qft_rev_coeff (int_to_bv i n) e1 n *.. bv_to_ket e1) j),(n_bvs n),(int_to_bv j n)">
        <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="scalar_ket_value">
           <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="mult_one_t">
            <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="get_ket_bv_to_ket_length">
              <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="3.00" steps="335"/></proof>
              </goal>
              <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="1.21"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="3.08" steps="334"/></proof>
         </goal>
         <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.2.0" expl="rewrite premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.2.0.0" expl="rewrite premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_ket_value">
            <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
            <transf name="rewrite" proved="true" arg1="get_ket_bv_to_ket_length">
             <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.2.0.0.0.0" expl="rewrite premises" proved="true">
             <transf name="assert" proved="true" arg1="(not ( j = bv_to_int k))">
              <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.2.0.0.0.0.0" expl="asserted formula" proved="true">
              <proof prover="3"><result status="valid" time="2.88" steps="339"/></proof>
              </goal>
              <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="2.98" steps="341"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="0"><result status="valid" time="1.03"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.49" steps="332"/></proof>
      </goal>
      <goal name="VC get_path_sem_rev_qft_ket_be.0.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.15"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC get_path_sem_rev_qft_ket_be.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.51" steps="332"/></proof>
   </goal>
   <goal name="VC get_path_sem_rev_qft_ket_be.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.50" steps="332"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_rev_qft_ket_ind_be" expl="VC for path_sem_rev_qft_ket_ind_be" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_rev_qft_ket_ind_be.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_rev_qft_unit_be">
   <goal name="VC path_sem_rev_qft_ket_ind_be.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq">
    <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.60" steps="328"/></proof>
     </goal>
     <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.54" steps="328"/></proof>
     </goal>
     <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0" expl="apply premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_spec">
         <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="mod_inf">
          <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="mod_inf">
           <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="2"><result status="valid" time="1.82"/></proof>
           </goal>
           <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="replace" proved="true" arg1="n" arg2="(length a)">
            <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="1.83"/></proof>
            </goal>
            <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
            <proof prover="0"><result status="valid" time="1.34"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.53" steps="330"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC path_sem_rev_qft_ket_ind_be.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.52" steps="330"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC path_sem_rev_qft_ket_ind_be.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.57" steps="328"/></proof>
   </goal>
   <goal name="VC path_sem_rev_qft_ket_ind_be.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="3.03" steps="330"/></proof>
   </goal>
   <goal name="VC path_sem_rev_qft_ket_ind_be.0.3" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.18"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_rev_qft_bv_be" expl="VC for path_sem_rev_qft_bv_be" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_rev_qft_bv_be.0" expl="postcondition" proved="true">
  <transf name="replace" proved="true" arg1="(bv_to_ket x)" arg2="(ket n (bv_to_int x))">
   <goal name="VC path_sem_rev_qft_bv_be.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_rev_qft_ket_ind_be">
    <goal name="VC path_sem_rev_qft_bv_be.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="scalar_eq">
     <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="ket_sum_eq">
      <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.51" steps="326"/></proof>
      </goal>
      <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.52" steps="326"/></proof>
      </goal>
      <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_spec">
          <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="mod_inf">
           <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="mod_inf">
            <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(int_to_bv (bv_to_int x) n)" arg2="x">
             <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(int_to_bv (bv_to_int a) n)" arg2="a">
              <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="0.54" steps="328"/></proof>
              </goal>
              <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="3"><result status="valid" time="3.05" steps="330"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <proof prover="3"><result status="valid" time="3.02" steps="330"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <transf name="replace" proved="true" arg1="n" arg2="(length a)">
             <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0.1.0" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="1.67"/></proof>
             </goal>
             <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="3"><result status="valid" time="2.76" steps="330"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.70"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC path_sem_rev_qft_bv_be.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.50" steps="328"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC path_sem_rev_qft_bv_be.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.52" steps="326"/></proof>
    </goal>
    <goal name="VC path_sem_rev_qft_bv_be.0.0.2" expl="rewrite premises" proved="true">
    <proof prover="2"><result status="valid" time="1.47"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC path_sem_rev_qft_bv_be.0.1" expl="equality hypothesis" proved="true">
   <proof prover="3"><result status="valid" time="2.88" steps="328"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_rev_coeff_expo" expl="VC for int_qft_rev_coeff_expo" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_rev_coeff_expo.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC int_qft_rev_coeff_expo.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_spec1">
    <goal name="VC int_qft_rev_coeff_expo.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="cpower_ang_exp_real">
     <goal name="VC int_qft_rev_coeff_expo.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.52" steps="324"/></proof>
     </goal>
     <goal name="VC int_qft_rev_coeff_expo.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="3.09" steps="326"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC int_qft_rev_coeff_expo.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.53" steps="324"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_rev_pre" expl="VC for qft_rev_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC qft_rev_pre.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="326"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.2" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="map_antec" arg2="(fun (y0:bitvec) -&gt; bv_inversion y0),(n_bvs n),e">
   <goal name="VC qft_rev_pre.2.0" expl="precondition" proved="true">
   <transf name="destruct" proved="true" arg1="Hinst">
    <goal name="VC qft_rev_pre.2.0.0" expl="destruct premise" proved="true">
    <transf name="apply" proved="true" arg1="H">
    </transf>
    </goal>
    <goal name="VC qft_rev_pre.2.0.1" expl="precondition" proved="true">
    <transf name="destruct" proved="true" arg1="Hinst">
     <goal name="VC qft_rev_pre.2.0.1.0" expl="precondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC qft_rev_pre.2.0.1.0.0" expl="precondition" proved="true">
      <transf name="rewrite" proved="true" arg1="Hinst">
       <goal name="VC qft_rev_pre.2.0.1.0.0.0" expl="precondition" proved="true">
       <transf name="apply" proved="true" arg1="in_n_bvs">
        <goal name="VC qft_rev_pre.2.0.1.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.51" steps="338"/></proof>
        </goal>
        <goal name="VC qft_rev_pre.2.0.1.0.0.0.1" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC qft_rev_pre.2.0.1.0.0.0.1.0" expl="apply premises" proved="true">
         <proof prover="2"><result status="valid" time="1.69"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_pre.3" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_map_mem">
   <goal name="VC qft_rev_pre.3.0" expl="apply premises" proved="true">
   <transf name="exists" proved="true" arg1="(bv_inversion e)">
    <goal name="VC qft_rev_pre.3.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC qft_rev_pre.3.0.0.0" proved="true">
     <proof prover="0"><result status="valid" time="1.15"/></proof>
     </goal>
     <goal name="VC qft_rev_pre.3.0.0.1" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC qft_rev_pre.3.0.0.1.0" proved="true">
      <proof prover="3"><result status="valid" time="2.95" steps="336"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_pre.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="348"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="334"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="336"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.50" steps="344"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="364"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="352"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="354"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="362"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.68" steps="378"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.13" expl="precondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC qft_rev_pre.13.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="set_bijective_auto">
    <goal name="VC qft_rev_pre.13.0.0" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC qft_rev_pre.13.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.58"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_pre.13.0.1" expl="apply premises" proved="true">
    <transf name="compute_specified" proved="true" >
     <goal name="VC qft_rev_pre.13.0.1.0" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC qft_rev_pre.13.0.1.0.0" expl="apply premises" proved="true">
      <transf name="exists" proved="true" arg1="(n-1-e&#39;)">
       <goal name="VC qft_rev_pre.13.0.1.0.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC qft_rev_pre.13.0.1.0.0.0.0" proved="true">
        <proof prover="0"><result status="valid" time="1.81"/></proof>
        </goal>
        <goal name="VC qft_rev_pre.13.0.1.0.0.0.1" proved="true">
        <proof prover="3"><result status="valid" time="0.76" steps="380"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_pre.14" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.67" steps="384"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.15" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC qft_rev_pre.15.0" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="0.55" steps="392"/></proof>
   </goal>
   <goal name="VC qft_rev_pre.15.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_rev_qft_bv_be">
    <goal name="VC qft_rev_pre.15.1.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.56" steps="392"/></proof>
    </goal>
    <goal name="VC qft_rev_pre.15.1.1" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.76" steps="392"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_pre.16" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC qft_rev_pre.16.0" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="scalar_ket_l">
    <goal name="VC qft_rev_pre.16.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="H9">
     <goal name="VC qft_rev_pre.16.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="5.34" steps="398"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_pre.16.1" expl="apply premises" proved="true">
   <transf name="rewrite" proved="true" arg1="path_sem_scal">
    <goal name="VC qft_rev_pre.16.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="VC qft_rev_pre.16.1.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="scalar_eq_gen">
      <goal name="VC qft_rev_pre.16.1.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="ket_sum_eq">
       <goal name="VC qft_rev_pre.16.1.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.60" steps="394"/></proof>
       </goal>
       <goal name="VC qft_rev_pre.16.1.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.58" steps="394"/></proof>
       </goal>
       <goal name="VC qft_rev_pre.16.1.0.0.0.2" expl="apply premises" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC qft_rev_pre.16.1.0.0.0.2.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="path_sem_scal">
          <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_hyp_specified" proved="true" arg1="in" arg2="H6">
           <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="H6">
            <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(make_bv (fun (i:int) -&gt; getbv a @ ((n - 1) - i)) n)" arg2="(bv_inversion a)">
             <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="3"><result status="valid" time="0.56" steps="396"/></proof>
             </goal>
             <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
             <transf name="eliminate_definition" proved="true" >
              <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="bv_inversion_def">
               <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
               <transf name="replace" proved="true" arg1="(length a )" arg2="n">
                <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
                <transf name="apply" proved="true" arg1="set_equal_bv_make">
                 <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                 <transf name="compute_specified" proved="true" >
                  <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.94"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="0.73" steps="364"/></proof>
                 </goal>
                 <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.55"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                <proof prover="2"><result status="valid" time="1.55"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.42"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC qft_rev_pre.16.1.0.0.0.2.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="4.71" steps="400"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC qft_rev_pre.16.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.55" steps="394"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC qft_rev_pre.16.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.58" steps="394"/></proof>
     </goal>
     <goal name="VC qft_rev_pre.16.1.0.2" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.58" steps="394"/></proof>
     </goal>
     <goal name="VC qft_rev_pre.16.1.0.3" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="H9">
      <goal name="VC qft_rev_pre.16.1.0.3.0" expl="rewrite premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC qft_rev_pre.16.1.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC qft_rev_pre.16.1.0.3.0.0.0" expl="rewrite premises" proved="true">
        <proof prover="2"><result status="valid" time="1.65"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev_pre.16.1.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="4.96" steps="398"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_pre.17" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.62" steps="396"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.18" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.58" steps="394"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.19" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="412"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.20" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="396"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.21" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_injective">
   <goal name="VC qft_rev_pre.21.0" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC qft_rev_pre.21.0.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC qft_rev_pre.21.0.0.0" expl="apply premises" proved="true">
     <proof prover="2"><result status="valid" time="1.67"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_pre.22" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="398"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.23" expl="precondition" proved="true">
  <transf name="apply" proved="true" arg1="set_bijective_auto">
   <goal name="VC qft_rev_pre.23.0" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC qft_rev_pre.23.0.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.69"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_pre.23.1" expl="apply premises" proved="true">
   <transf name="compute_specified" proved="true" >
    <goal name="VC qft_rev_pre.23.1.0" expl="apply premises" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC qft_rev_pre.23.1.0.0" expl="apply premises" proved="true">
     <transf name="exists" proved="true" arg1="(n-1-e&#39;)">
      <goal name="VC qft_rev_pre.23.1.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC qft_rev_pre.23.1.0.0.0.0" proved="true">
       <proof prover="0"><result status="valid" time="1.52"/></proof>
       </goal>
       <goal name="VC qft_rev_pre.23.1.0.0.0.1" proved="true">
       <proof prover="3"><result status="valid" time="0.65" steps="400"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_pre.24" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.77" steps="398"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.25" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.58" steps="400"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.26" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.56" steps="410"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.27" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="2.05"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.28" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.58" steps="413"/></proof>
  </goal>
  <goal name="VC qft_rev_pre.29" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="sem_to_path_sem">
   <goal name="VC qft_rev_pre.29.0" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC qft_rev_pre.29.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result_def">
     <goal name="VC qft_rev_pre.29.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="( ket_sum_l (n_bvs n)
       (fun (y:bitvec) -&gt; qft_rev_coeff x (bv_inversion y) n *.. bv_to_ket y)
       n)" arg2="(ket_sum_l (n_bvs n)
       (fun (y:bitvec) -&gt; qft_rev_coeff x y n *.. bv_to_ket (bv_inversion y))
       n)">
      <goal name="VC qft_rev_pre.29.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="H27">
      </transf>
      </goal>
      <goal name="VC qft_rev_pre.29.0.0.0.1" expl="equality hypothesis" proved="true">
      <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs n)
    (fun (y:bitvec) -&gt; qft_rev_coeff x y n *.. bv_to_ket (bv_inversion y)) n)" arg2="(ket_sum_l (map1 (fun (y0:bitvec) -&gt; bv_inversion y0) (n_bvs n))
  (fun (y:bitvec) -&gt;
    if length y = n then qft_rev_coeff x y n *.. bv_to_ket (bv_inversion y)
    else bv_to_ket x)
  n)">
       <goal name="VC qft_rev_pre.29.0.0.0.1.0" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="H20">
        <goal name="VC qft_rev_pre.29.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC qft_rev_pre.29.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="ket_sum_eq">
          <goal name="VC qft_rev_pre.29.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.84" steps="384"/></proof>
          </goal>
          <goal name="VC qft_rev_pre.29.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.84" steps="384"/></proof>
          </goal>
          <goal name="VC qft_rev_pre.29.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC qft_rev_pre.29.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
           <transf name="eliminate_if" proved="true" >
            <goal name="VC qft_rev_pre.29.0.0.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
            <proof prover="2"><result status="valid" time="2.03"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_pre.29.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="VC qft_rev_pre.29.0.0.0.1.1.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.82" steps="384"/></proof>
        </goal>
        <goal name="VC qft_rev_pre.29.0.0.0.1.1.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H76">
         <goal name="VC qft_rev_pre.29.0.0.0.1.1.1.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.83" steps="384"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC qft_rev_pre.29.0.0.0.1.1.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC qft_rev_pre.29.0.0.0.1.1.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC qft_rev_pre.29.0.0.0.1.1.2.0.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="2.03"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_rev" expl="VC for qft_rev" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC qft_rev.0" expl="VC for qft_rev" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC qft_rev.0.0" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC qft_rev.0.0.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.60" steps="324"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev.0.1" expl="precondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC qft_rev.0.1.0" expl="precondition" proved="true">
    <transf name="apply" proved="true" arg1="set_bijective_auto">
     <goal name="VC qft_rev.0.1.0.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC qft_rev.0.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.70"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC qft_rev.0.1.0.1" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC qft_rev.0.1.0.1.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC qft_rev.0.1.0.1.0.0" expl="apply premises" proved="true">
       <transf name="exists" proved="true" arg1="(n-1-e&#39;)">
        <goal name="VC qft_rev.0.1.0.1.0.0.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC qft_rev.0.1.0.1.0.0.0.0" proved="true">
         <proof prover="0"><result status="valid" time="1.60"/></proof>
         </goal>
         <goal name="VC qft_rev.0.1.0.1.0.0.0.1" proved="true">
         <proof prover="3"><result status="valid" time="0.82" steps="326"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev.0.2" expl="precondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC qft_rev.0.2.0" expl="precondition" proved="true">
    <proof prover="3"><result status="valid" time="0.84" steps="330"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev.0.3" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.85" steps="338"/></proof>
   </goal>
   <goal name="VC qft_rev.0.4" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="polysquare_def">
    <goal name="VC qft_rev.0.4.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.36"/></proof>
    </goal>
    <goal name="VC qft_rev.0.4.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.58" steps="348"/></proof>
    </goal>
    <goal name="VC qft_rev.0.4.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.56" steps="348"/></proof>
    </goal>
    <goal name="VC qft_rev.0.4.3" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.65" steps="348"/></proof>
    </goal>
    <goal name="VC qft_rev.0.4.4" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.63" steps="348"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev.0.5" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="1.74"/></proof>
   </goal>
   <goal name="VC qft_rev.0.6" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC qft_rev.0.6.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.58" steps="351"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev.0.7" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(sequence (qft_rev_be n)
   (permutation_circuit n ((fun (y0:int) (y1:int) -&gt; y0 - y1) @ (n - 1))))" arg2="(qft_rev_pre n x)">
    <goal name="VC qft_rev.0.7.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC qft_rev.0.7.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="qft_rev_pre_spec">
      <goal name="VC qft_rev.0.7.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.55" steps="354"/></proof>
      </goal>
      <goal name="VC qft_rev.0.7.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.62" steps="354"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev.0.7.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="3.18" steps="356"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev.0.8" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="H3">
    <goal name="VC qft_rev.0.8.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="scalar_ket_value">
     <goal name="VC qft_rev.0.8.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="mult_eq_t">
      <goal name="VC qft_rev.0.8.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.58" steps="358"/></proof>
      </goal>
      <goal name="VC qft_rev.0.8.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
       <goal name="VC qft_rev.0.8.0.0.1.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
        <goal name="VC qft_rev.0.8.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(sum (n_bvs n)
  (fun (e1:bitvec) -&gt;
    get_ket (qft_rev_coeff x (bv_inversion e1) n *.. bv_to_ket e1) i))" arg2="(sum (n_bvs n)
  (fun (e1:bitvec) -&gt;
    (qft_rev_coeff x (bv_inversion e1) n *. (if bv_to_int e1 = i then c_one else c_zero)) ))">
         <goal name="VC qft_rev.0.8.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="instantiate" proved="true" arg1="sum_null_but_maybe_one_elt" arg2="(fun (e1:bitvec) -&gt;
    qft_rev_coeff x (bv_inversion e1) n
    *. (if bv_to_int e1 = i then c_one else c_zero)),(n_bvs n),(int_to_bv i n)">
          <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="Hinst">
           <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="3"><result status="valid" time="3.53" steps="361"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="0"><result status="valid" time="1.23"/></proof>
           </goal>
           <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.2.0" expl="rewrite premises" proved="true">
            <transf name="compute_specified" proved="true" >
             <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.2.0.0" expl="rewrite premises" proved="true">
             <transf name="eliminate_if" proved="true" >
              <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.2.0.0.0" proved="true">
              <transf name="split_vc" proved="true" >
               <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.2.0.0.0.0" expl="rewrite premises" proved="true">
               <proof prover="5"><result status="valid" time="13.64"/></proof>
               </goal>
               <goal name="VC qft_rev.0.8.0.0.1.0.0.0.0.2.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="1.40"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC qft_rev.0.8.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
         <transf name="apply" proved="true" arg1="sum_eq">
          <goal name="VC qft_rev.0.8.0.0.1.0.0.1.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC qft_rev.0.8.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="VC qft_rev.0.8.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="scalar_ket_value">
             <goal name="VC qft_rev.0.8.0.0.1.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="mult_eq_t">
              <goal name="VC qft_rev.0.8.0.0.1.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="0.49" steps="360"/></proof>
              </goal>
              <goal name="VC qft_rev.0.8.0.0.1.0.0.1.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="1.33"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev.0.8.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.49" steps="358"/></proof>
       </goal>
       <goal name="VC qft_rev.0.8.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.07"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_rev.0.8.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.50" steps="358"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Qft" proved="true">
 <goal name="VC qft" expl="VC for qft" proved="true">
 <transf name="eliminate_let" proved="true" >
  <goal name="VC qft.0" expl="VC for qft" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC qft.0.0" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.49" steps="324"/></proof>
   </goal>
   <goal name="VC qft.0.1" expl="precondition" proved="true">
   <proof prover="3"><result status="valid" time="0.50" steps="330"/></proof>
   </goal>
   <goal name="VC qft.0.2" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="polysquare_def">
    <goal name="VC qft.0.2.0" expl="postcondition" proved="true">
    <proof prover="0"><result status="valid" time="1.05"/></proof>
    </goal>
    <goal name="VC qft.0.2.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.57" steps="336"/></proof>
    </goal>
    <goal name="VC qft.0.2.2" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.56" steps="336"/></proof>
    </goal>
    <goal name="VC qft.0.2.3" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.57" steps="336"/></proof>
    </goal>
    <goal name="VC qft.0.2.4" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.60" steps="336"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft.0.3" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.61" steps="337"/></proof>
   </goal>
   <goal name="VC qft.0.4" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC qft.0.4.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.56" steps="337"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft.0.5" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_reverse">
    <goal name="VC qft.0.5.0" expl="apply premises" proved="true">
    <proof prover="0"><result status="valid" time="1.10"/></proof>
    </goal>
    <goal name="VC qft.0.5.1" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC qft.0.5.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="qft_rev_spec1">
      <goal name="VC qft.0.5.1.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="VC qft.0.5.1.0.0.0" expl="apply premises" proved="true">
       <transf name="compute_specified" proved="true" >
       </transf>
       </goal>
       <goal name="VC qft.0.5.1.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.85" steps="340"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC qft.0.5.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.82" steps="340"/></proof>
      </goal>
      <goal name="VC qft.0.5.1.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.67" steps="340"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff" expl="VC for int_qft_coeff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.50" steps="324"/></proof>
  </goal>
  <goal name="VC int_qft_coeff.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.16"/></proof>
  </goal>
  <goal name="VC int_qft_coeff.2" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC int_qft_coeff.2.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_spec">
    <goal name="VC int_qft_coeff.2.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="qft_rev_coeff_int_to_ang">
     <goal name="VC int_qft_coeff.2.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
      <goal name="VC int_qft_coeff.2.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="(mod (int_bit_inversion (mod j (power_ 2 n)) n) (power_ 2 n))" arg2="((int_bit_inversion (mod j (power_ 2 n)) n))">
       <goal name="VC int_qft_coeff.2.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="replace" proved="true" arg1="(bv_inversion
         (int_to_bv (int_bit_inversion (mod j (power_ 2 n)) n) n))" arg2="(int_to_bv (mod j (power_ 2 n))n)">
        <goal name="VC int_qft_coeff.2.0.0.0.0.0.0" expl="postcondition" proved="true">
        <transf name="rewrite" proved="true" arg1="bv_to_int_to_bv">
         <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0" expl="postcondition" proved="true">
         <transf name="eliminate_definition" proved="true" >
          <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
          <transf name="rewrite" proved="true" arg1="result_def">
           <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0" expl="postcondition" proved="true">
           <transf name="apply" proved="true" arg1="set_ang_exp_eq">
            <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="assert" proved="true" arg1="(forall k k&#39; n. 0&lt;n -&gt; mod k (power_ 2 n) = mod k&#39; (power_ 2 n) -&gt; int_to_ang k n = int_to_ang k&#39; n)">
             <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.0" expl="asserted formula" proved="true">
             <proof prover="2"><result status="valid" time="1.87"/></proof>
             </goal>
             <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="h">
              <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="0.72" steps="300"/></proof>
              </goal>
              <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="mod_mod_mult_rev">
               <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="goal_comm">
                <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                <transf name="rewrite" proved="true" arg1="mod_mod_mult_rev">
                 <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="mod_eq">
                  <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="mult_eq">
                   <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="instantiate" proved="true" arg1="unicity_div_mod" arg2="(-i),(power_ 2 n),(- (div i (power 2 n)) +1 ),(- mod i (power_ 2 n))">
                    <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="split_all_full" proved="true" >
                     <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="4"><result status="valid" time="1.65"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.1" expl="apply premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.85"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                 <proof prover="2"><result status="valid" time="1.97"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="1.76"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.57" steps="330"/></proof>
         </goal>
         <goal name="VC int_qft_coeff.2.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.79"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC int_qft_coeff.2.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="0"><result status="valid" time="1.91"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC int_qft_coeff.2.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="0"><result status="valid" time="1.68"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC int_qft_coeff.2.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.52" steps="330"/></proof>
      </goal>
      <goal name="VC int_qft_coeff.2.0.0.0.2" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="power_to_">
       <goal name="VC int_qft_coeff.2.0.0.0.2.0" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.23"/></proof>
       </goal>
       <goal name="VC int_qft_coeff.2.0.0.0.2.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.53" steps="330"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC int_qft_coeff.2.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.55" steps="330"/></proof>
     </goal>
     <goal name="VC int_qft_coeff.2.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.25"/></proof>
     </goal>
     <goal name="VC int_qft_coeff.2.0.0.3" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.32"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC int_qft_coeff.2.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.52" steps="330"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff_rev" expl="VC for int_qft_coeff_rev" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_rev.0" expl="postcondition" proved="true">
  <transf name="compute_specified" proved="true" >
   <goal name="VC int_qft_coeff_rev.0.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.19"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff_minus_to_right" expl="VC for int_qft_coeff_minus_to_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_minus_to_right.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.39"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff_minus_to_left" expl="VC for int_qft_coeff_minus_to_left" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_minus_to_left.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff_as_real" expl="VC for int_qft_coeff_as_real" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_as_real.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff_expo" expl="VC for int_qft_coeff_expo" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_expo.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC int_qft_coeff_expo.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
    <goal name="VC int_qft_coeff_expo.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(int_to_ang (i * j) n)" arg2="(ang_mult_int (int_to_ang (i ) n) j)">
     <goal name="VC int_qft_coeff_expo.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="3.05" steps="326"/></proof>
     </goal>
     <goal name="VC int_qft_coeff_expo.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="3.09" steps="326"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC int_qft_coeff_expo.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.53" steps="324"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff_expo_" expl="VC for int_qft_coeff_expo_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_expo_.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC int_qft_coeff_expo_.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
    <goal name="VC int_qft_coeff_expo_.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="(int_to_ang (i * j) n)" arg2="(ang_mult_int (int_to_ang (j ) n) i)">
     <goal name="VC int_qft_coeff_expo_.0.0.0.0" expl="postcondition" proved="true">
     <proof prover="0"><result status="valid" time="1.36"/></proof>
     </goal>
     <goal name="VC int_qft_coeff_expo_.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="3"><result status="valid" time="2.92" steps="326"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC int_qft_coeff_expo_.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.58" steps="324"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff_as_mod" expl="VC for int_qft_coeff_as_mod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_as_mod.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
   <goal name="VC int_qft_coeff_as_mod.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
    <goal name="VC int_qft_coeff_as_mod.0.0.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="1.73"/></proof>
    </goal>
    <goal name="VC int_qft_coeff_as_mod.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.50" steps="324"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC int_qft_coeff_as_mod.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.55" steps="324"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_rev_coeff_to_qft_coeff" expl="VC for int_qft_rev_coeff_to_qft_coeff" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_rev_coeff_to_qft_coeff.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_def">
    <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="int_qft_coeff_as_mod">
     <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
      <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_ang_def">
       <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="set_ang_exp_eq">
        <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="real_to_ang_eq">
         <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="real_mult">
          <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="3.14" steps="334"/></proof>
          </goal>
          <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="2.88" steps="334"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="(/.)_def">
          <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="apply" proved="true" arg1="mult_eq_t">
           <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <proof prover="0"><result status="valid" time="1.71"/></proof>
           </goal>
           <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0.1" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="pow_inv_2_def">
            <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="power_to_">
             <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0.1.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="(/.)_def">
              <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="2.93" steps="334"/></proof>
              </goal>
              <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="1.81"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="0.55" steps="332"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.54" steps="332"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="2.01"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.53" steps="332"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.50" steps="332"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.49" steps="332"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC int_qft_rev_coeff_to_qft_coeff.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.55" steps="332"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_rev_" expl="VC for qft_rev_" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC qft_rev_.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="324"/></proof>
  </goal>
  <goal name="VC qft_rev_.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.52" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="330"/></proof>
  </goal>
  <goal name="VC qft_rev_.4" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC qft_rev_.4.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC qft_rev_.4.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC qft_rev_.4.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="qft_rev_spec1">
      <goal name="VC qft_rev_.4.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="VC qft_rev_.4.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="VC qft_rev_.4.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.75" steps="302"/></proof>
        </goal>
        <goal name="VC qft_rev_.4.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.62" steps="302"/></proof>
        </goal>
        <goal name="VC qft_rev_.4.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="VC qft_rev_.4.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(qft_rev_coeff x (bv_inversion a) n)" arg2="(int_qft_rev_coeff (bv_to_int x) (bv_to_int(bv_inversion a)) n)">
           <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq_gen">
            <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
            <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_to_qft_coeff">
             <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(int_bit_inversion (bv_to_int (bv_inversion a)) n)" arg2="(bv_to_int a)">
              <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.0.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="1.64"/></proof>
              </goal>
              <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="int_bit_inversion_def">
               <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.0.1.0" expl="equality hypothesis" proved="true">
               <proof prover="2"><result status="valid" time="1.80"/></proof>
               </goal>
               <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.0.1.1" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.67" steps="304"/></proof>
               </goal>
               <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.0.1.2" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="1.63"/></proof>
               </goal>
              </transf>
              </goal>
             </transf>
             </goal>
             <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.1" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="0.58" steps="304"/></proof>
             </goal>
             <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.2" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="1.57"/></proof>
             </goal>
             <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.0.1.3" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="1.59"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_spec">
            <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.1.0" expl="equality hypothesis" proved="true">
            <transf name="rewrite" proved="true" arg1="mod_inf">
             <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.1.0.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="mod_inf">
              <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
              <proof prover="2"><result status="valid" time="1.61"/></proof>
              </goal>
              <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.1.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="1.59"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
             <proof prover="2"><result status="valid" time="1.92"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC qft_rev_.4.0.0.0.0.0.2.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.62" steps="304"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_.4.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.65" steps="302"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC qft_rev_.4.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.63" steps="302"/></proof>
      </goal>
      <goal name="VC qft_rev_.4.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.65" steps="302"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_.5" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC qft_rev_.5.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC qft_rev_.5.0.0" expl="postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC qft_rev_.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="qft_rev_spec">
      <goal name="VC qft_rev_.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="replace" proved="true" arg1="( qft_rev_coeff x (bv_inversion (int_to_bv i n)) n)" arg2="( int_qft_rev_coeff (bv_to_int x) (int_bit_inversion i n)n)">
       <goal name="VC qft_rev_.5.0.0.0.0.0" expl="postcondition" proved="true">
       <transf name="apply" proved="true" arg1="mult_eq_t">
        <goal name="VC qft_rev_.5.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.61" steps="306"/></proof>
        </goal>
        <goal name="VC qft_rev_.5.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_to_qft_coeff">
         <goal name="VC qft_rev_.5.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(int_bit_inversion (int_bit_inversion i n) n)" arg2="i">
          <goal name="VC qft_rev_.5.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="1.63"/></proof>
          </goal>
          <goal name="VC qft_rev_.5.0.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
          <proof prover="2"><result status="valid" time="1.65"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC qft_rev_.5.0.0.0.0.0.1.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.65" steps="306"/></proof>
         </goal>
         <goal name="VC qft_rev_.5.0.0.0.0.0.1.2" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.59"/></proof>
         </goal>
         <goal name="VC qft_rev_.5.0.0.0.0.0.1.3" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.58"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_rev_.5.0.0.0.0.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_spec">
        <goal name="VC qft_rev_.5.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
        <transf name="rewrite" proved="true" arg1="mod_inf">
         <goal name="VC qft_rev_.5.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="mod_inf">
          <goal name="VC qft_rev_.5.0.0.0.0.1.0.0.0" expl="equality hypothesis" proved="true">
          <transf name="replace" proved="true" arg1="(bv_inversion (int_to_bv i n))" arg2="(int_to_bv (int_bit_inversion i n) n)">
           <goal name="VC qft_rev_.5.0.0.0.0.1.0.0.0.0" expl="equality hypothesis" proved="true">
           <proof prover="2"><result status="valid" time="1.57"/></proof>
           </goal>
           <goal name="VC qft_rev_.5.0.0.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
           <transf name="rewrite" proved="true" arg1="int_bit_inversion_def">
            <goal name="VC qft_rev_.5.0.0.0.0.1.0.0.0.1.0" expl="equality hypothesis" proved="true">
            <proof prover="2"><result status="valid" time="1.54"/></proof>
            </goal>
            <goal name="VC qft_rev_.5.0.0.0.0.1.0.0.0.1.1" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.62" steps="306"/></proof>
            </goal>
            <goal name="VC qft_rev_.5.0.0.0.0.1.0.0.0.1.2" expl="rewrite premises" proved="true">
            <proof prover="2"><result status="valid" time="1.67"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC qft_rev_.5.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.63"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC qft_rev_.5.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.61"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC qft_rev_.5.0.0.0.0.1.1" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="0.60" steps="306"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC qft_rev_.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.61" steps="306"/></proof>
      </goal>
      <goal name="VC qft_rev_.5.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.67" steps="306"/></proof>
      </goal>
      <goal name="VC qft_rev_.5.0.0.0.3" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.67" steps="306"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC qft_rev_.6" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="H3">
   <goal name="VC qft_rev_.6.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.34"/></proof>
   </goal>
   <goal name="VC qft_rev_.6.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.50" steps="336"/></proof>
   </goal>
   <goal name="VC qft_rev_.6.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.68" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_rev_qft_unit" expl="VC for path_sem_rev_qft_unit" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_rev_qft_unit.0" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC path_sem_rev_qft_unit.0.0" expl="postcondition" proved="true">
   <transf name="replace" proved="true" arg1="(qft_rev n)" arg2="(qft_rev_ n)">
    <goal name="VC path_sem_rev_qft_unit.0.0.0" expl="postcondition" proved="true">
    <transf name="replace" proved="true" arg1="x" arg2="(bv_to_ket (ket_to_bv x))">
     <goal name="VC path_sem_rev_qft_unit.0.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="qft_rev__spec2">
      <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="scalar_eq_gen">
       <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="ket_sum_eq">
        <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.0" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.55" steps="328"/></proof>
        </goal>
        <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.55" steps="328"/></proof>
        </goal>
        <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0" expl="apply premises" proved="true">
          <transf name="replace" proved="true" arg1="(bv_to_ket (ket_to_bv x))" arg2="x">
           <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(bv_to_int (ket_to_bv x))" arg2="(ket_to_int x)">
            <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="scalar_eq_gen">
             <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
             <proof prover="3"><result status="valid" time="0.56" steps="330"/></proof>
             </goal>
             <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0.0.1" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="int_qft_coeff_rev">
              <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0.0.1.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="int_qft_coeff_minus_to_left">
               <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0.0.1.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="0.55" steps="330"/></proof>
               </goal>
               <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.64" steps="330"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0.0.1.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.62" steps="330"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.0.1" expl="equality hypothesis" proved="true">
            <proof prover="0"><result status="valid" time="1.22"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.0.2.0.0.1" expl="equality hypothesis" proved="true">
           <proof prover="0"><result status="valid" time="1.25"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC path_sem_rev_qft_unit.0.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.54" steps="328"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC path_sem_rev_qft_unit.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.56" steps="328"/></proof>
      </goal>
      <goal name="VC path_sem_rev_qft_unit.0.0.0.0.2" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.27"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC path_sem_rev_qft_unit.0.0.0.1" expl="equality hypothesis" proved="true">
     <proof prover="0"><result status="valid" time="1.26"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="VC path_sem_rev_qft_unit.0.0.1" expl="equality hypothesis" proved="true">
    <proof prover="0"><result status="valid" time="1.53"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_rev_qft_unit_int" expl="VC for path_sem_rev_qft_unit_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_rev_qft_unit_int.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_rev_qft_unit">
   <goal name="VC path_sem_rev_qft_unit_int.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="scalar_eq">
    <goal name="VC path_sem_rev_qft_unit_int.0.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="ket_sum_eq">
     <goal name="VC path_sem_rev_qft_unit_int.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.76" steps="328"/></proof>
     </goal>
     <goal name="VC path_sem_rev_qft_unit_int.0.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.55" steps="328"/></proof>
     </goal>
     <goal name="VC path_sem_rev_qft_unit_int.0.0.0.2" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC path_sem_rev_qft_unit_int.0.0.0.2.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.18"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC path_sem_rev_qft_unit_int.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.51" steps="328"/></proof>
   </goal>
   <goal name="VC path_sem_rev_qft_unit_int.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="3.46" steps="330"/></proof>
   </goal>
   <goal name="VC path_sem_rev_qft_unit_int.0.3" expl="rewrite premises" proved="true">
   <proof prover="0"><result status="valid" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC sem_rev_qft_unit" expl="VC for sem_rev_qft_unit" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sem_rev_qft_unit.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC sem_rev_qft_unit.0.0" expl="apply premises" proved="true">
   <transf name="replace" proved="true" arg1="(width (qft_rev n))" arg2="n">
    <goal name="VC sem_rev_qft_unit.0.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.69" steps="328"/></proof>
    </goal>
    <goal name="VC sem_rev_qft_unit.0.0.1" expl="equality hypothesis" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC sem_rev_qft_unit.0.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="apply" proved="true" arg1="qft_rev_spec2">
      <goal name="VC sem_rev_qft_unit.0.0.1.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.79" steps="328"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC sem_rev_qft_unit.0.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_rev_qft_unit">
    <goal name="VC sem_rev_qft_unit.0.1.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.66" steps="328"/></proof>
    </goal>
    <goal name="VC sem_rev_qft_unit.0.1.1" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.66" steps="328"/></proof>
    </goal>
    <goal name="VC sem_rev_qft_unit.0.1.2" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.53" steps="328"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC sem_rev_qft_unit_int" expl="VC for sem_rev_qft_unit_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sem_rev_qft_unit_int.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC sem_rev_qft_unit_int.0.0" expl="apply premises" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="VC sem_rev_qft_unit_int.0.0.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="qft_rev_spec2">
     <goal name="VC sem_rev_qft_unit_int.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="0"><result status="valid" time="1.50"/></proof>
     </goal>
     <goal name="VC sem_rev_qft_unit_int.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.55" steps="328"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC sem_rev_qft_unit_int.0.1" expl="apply premises" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_rev_qft_unit_int">
    <goal name="VC sem_rev_qft_unit_int.0.1.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.67" steps="328"/></proof>
    </goal>
    <goal name="VC sem_rev_qft_unit_int.0.1.1" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.55" steps="328"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC int_qft_coeff_eq" expl="VC for int_qft_coeff_eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_eq.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.27"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC rev_qft_apply_qft" expl="VC for rev_qft_apply_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC rev_qft_apply_qft.0" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_scal">
   <goal name="VC rev_qft_apply_qft.0.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_ket_value">
    <goal name="VC rev_qft_apply_qft.0.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="path_sem_sum_">
     <goal name="VC rev_qft_apply_qft.0.0.0.0" expl="assertion" proved="true">
     <transf name="apply" proved="true" arg1="mult_eq_t">
      <goal name="VC rev_qft_apply_qft.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
      </transf>
      </goal>
      <goal name="VC rev_qft_apply_qft.0.0.0.0.1" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
       <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="sum_eq">
        <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="compute_specified" proved="true" >
         <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="path_sem_scal">
           <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="scalar_ket_value">
            <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="split_all_full" proved="true" >
             <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="qft_rev_spec">
              <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="mult_assoc_rev">
               <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="apply" proved="true" arg1="mult_eq_t">
                <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <transf name="apply" proved="true" arg1="mult_eq_inv_t">
                 <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="0.58" steps="342"/></proof>
                 </goal>
                 <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                 <proof prover="3"><result status="valid" time="0.60" steps="342"/></proof>
                 </goal>
                </transf>
                </goal>
                <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
                <transf name="replace" proved="true" arg1="(qft_rev_coeff x (bv_inversion (int_to_bv j n)) n)" arg2="(int_qft_rev_coeff (bv_to_int x) (int_bit_inversion j n) n)">
                 <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0" expl="apply premises" proved="true">
                 <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_to_qft_coeff">
                  <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                  <transf name="replace" proved="true" arg1="(int_bit_inversion (int_bit_inversion j n) n)" arg2="j">
                   <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
                    <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                    <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
                     <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
                     <proof prover="3"><result status="valid" time="0.55" steps="342"/></proof>
                     </goal>
                     <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
                     <proof prover="3"><result status="valid" time="0.62" steps="342"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="3"><result status="valid" time="0.56" steps="342"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                   <proof prover="0"><result status="valid" time="1.52"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.82" steps="342"/></proof>
                  </goal>
                  <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.2" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="2.22"/></proof>
                  </goal>
                  <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.3" expl="rewrite premises" proved="true">
                  <proof prover="0"><result status="valid" time="1.47"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
                 <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_spec">
                  <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
                  <transf name="rewrite" proved="true" arg1="mod_inf">
                   <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
                   <transf name="rewrite" proved="true" arg1="mod_inf">
                    <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                    <transf name="replace" proved="true" arg1="(int_to_bv (bv_to_int x) n)" arg2="x">
                     <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0" expl="equality hypothesis" proved="true">
                     <transf name="replace" proved="true" arg1="(bv_inversion (int_to_bv j n))" arg2="(int_to_bv (int_bit_inversion j n) n)">
                      <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0" expl="equality hypothesis" proved="true">
                      <proof prover="3"><result status="valid" time="0.71" steps="342"/></proof>
                      </goal>
                      <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
                      <proof prover="0"><result status="valid" time="1.21"/></proof>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1" expl="equality hypothesis" proved="true">
                     <proof prover="3"><result status="valid" time="3.04" steps="344"/></proof>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                    <proof prover="0"><result status="valid" time="1.18"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.98"/></proof>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                  <proof prover="3"><result status="valid" time="0.54" steps="342"/></proof>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.51" steps="342"/></proof>
              </goal>
              <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.2" expl="rewrite premises" proved="true">
              <proof prover="0"><result status="valid" time="1.35"/></proof>
              </goal>
              <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.0.0.0.3" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.51" steps="342"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
           <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
            <goal name="VC rev_qft_apply_qft.0.0.0.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.01"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC rev_qft_apply_qft.0.0.0.0.1.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.51" steps="340"/></proof>
       </goal>
       <goal name="VC rev_qft_apply_qft.0.0.0.0.1.2" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.03"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC rev_qft_apply_qft.0.0.0.1" expl="rewrite premises" proved="true">
     <proof prover="5"><result status="valid" time="11.65"/></proof>
     </goal>
     <goal name="VC rev_qft_apply_qft.0.0.0.2" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.11"/></proof>
     </goal>
     <goal name="VC rev_qft_apply_qft.0.0.0.3" expl="rewrite premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC rev_qft_apply_qft.0.0.0.3.0" expl="rewrite premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC rev_qft_apply_qft.0.0.0.3.0.0" expl="rewrite premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_ket_l">
        <goal name="VC rev_qft_apply_qft.0.0.0.3.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="is_a_ket_l_bv_to_ket">
         <goal name="VC rev_qft_apply_qft.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.17"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rev_qft_apply_qft.0.1" expl="rewrite premises" proved="true">
   <proof prover="5"><result status="valid" time="0.66"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rev_qft_apply_qft.1" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="H2">
   <goal name="VC rev_qft_apply_qft.1.0" expl="assertion" proved="true">
   <transf name="apply" proved="true" arg1="mult_eq_t">
    <goal name="VC rev_qft_apply_qft.1.0.0" expl="apply premises" proved="true">
    <proof prover="3"><result status="valid" time="0.65" steps="340"/></proof>
    </goal>
    <goal name="VC rev_qft_apply_qft.1.0.1" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="sum_eq">
     <goal name="VC rev_qft_apply_qft.1.0.1.0" expl="apply premises" proved="true">
     <transf name="compute_specified" proved="true" >
      <goal name="VC rev_qft_apply_qft.1.0.1.0.0" expl="apply premises" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="mult_assoc1">
        <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="mult_eq_t">
         <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.55" steps="342"/></proof>
         </goal>
         <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1" expl="apply premises" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
           <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="int_qft_coeff_def">
            <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="ang_exp_mult">
             <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="Int_To_Ang_add">
              <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="ang_mult_int_in">
               <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="0.76" steps="342"/></proof>
               </goal>
               <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.53" steps="342"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.48" steps="342"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
            <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="3"><result status="valid" time="0.56" steps="342"/></proof>
            </goal>
           </transf>
           </goal>
           <goal name="VC rev_qft_apply_qft.1.0.1.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="0.47" steps="342"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rev_qft_apply_qft.1.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.51" steps="340"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rev_qft_apply_qft.2" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="H2">
   <goal name="VC rev_qft_apply_qft.2.0" expl="assertion" proved="true">
   <transf name="replace" proved="true" arg1="(sum (n_bvs n)
      (fun (y:bitvec) -&gt;
        pow_inv_sqrt_2 n
        *. ang_exp
           (ang_mult_int
            (int_to_ang ( i  -  j ) n)
            (bv_to_int y))))" arg2="( pow_inv_sqrt_2 n
        *. sum (n_bvs n)
      (fun (y:bitvec) -&gt;
       ang_exp
           (ang_mult_int
            (int_to_ang ( i -  j ) n)
            (bv_to_int y))))
">
    <goal name="VC rev_qft_apply_qft.2.0.0" expl="assertion" proved="true">
    <transf name="rewrite" proved="true" arg1="mult_assoc_rev">
     <goal name="VC rev_qft_apply_qft.2.0.0.0" expl="assertion" proved="true">
     <transf name="apply" proved="true" arg1="mult_eq_t">
      <goal name="VC rev_qft_apply_qft.2.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="5"><result status="valid" time="12.02"/></proof>
      </goal>
      <goal name="VC rev_qft_apply_qft.2.0.0.0.1" expl="apply premises" proved="true">
      <transf name="replace" proved="true" arg1="(sum (to_fset 0 (power_ 2 n))
    (fun (y:int) -&gt; cpower (ang_exp (int_to_ang (i - j) n)) y))" arg2="(ind_sum 
    (fun (y:int) -&gt; cpower (ang_exp (int_to_ang (i - j) n)) y) 0 (power_ 2 n))">
       <goal name="VC rev_qft_apply_qft.2.0.0.0.1.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="ind_sum_bv">
        <goal name="VC rev_qft_apply_qft.2.0.0.0.1.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="sum_eq">
         <goal name="VC rev_qft_apply_qft.2.0.0.0.1.0.0.0" expl="apply premises" proved="true">
         <transf name="split_vc" proved="true" >
          <goal name="VC rev_qft_apply_qft.2.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
          <transf name="compute_specified" proved="true" >
           <goal name="VC rev_qft_apply_qft.2.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
           <proof prover="2"><result status="valid" time="1.35"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC rev_qft_apply_qft.2.0.0.0.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="0.46" steps="340"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC rev_qft_apply_qft.2.0.0.0.1.1" expl="equality hypothesis" proved="true">
       <transf name="rewrite" proved="true" arg1="ind_sum_to_sum">
        <goal name="VC rev_qft_apply_qft.2.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
        <proof prover="3"><result status="valid" time="0.54" steps="340"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC rev_qft_apply_qft.2.0.1" expl="equality hypothesis" proved="true">
    <transf name="rewrite" proved="true" arg1="sum_scal_rev">
     <goal name="VC rev_qft_apply_qft.2.0.1.0" expl="equality hypothesis" proved="true">
     <transf name="compute_specified" proved="true" >
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rev_qft_apply_qft.2.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.47" steps="340"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rev_qft_apply_qft.3" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="H3">
   <goal name="VC rev_qft_apply_qft.3.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="geometric_series_init_one">
    <goal name="VC rev_qft_apply_qft.3.0.0" expl="assertion" proved="true">
    <transf name="assert" proved="true" arg1="(forall a b. a = c_one -&gt; b &lt;&gt; c_one -&gt; (c_one -. a)/.(c_one -. b) = c_zero)">
     <goal name="VC rev_qft_apply_qft.3.0.0.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC rev_qft_apply_qft.3.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="((c_one -. b) &lt;&gt; c_zero)">
       <goal name="VC rev_qft_apply_qft.3.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="1.28"/></proof>
       </goal>
       <goal name="VC rev_qft_apply_qft.3.0.0.0.0.1" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="((c_one -. a) = c_zero)">
        <goal name="VC rev_qft_apply_qft.3.0.0.0.0.1.0" expl="asserted formula" proved="true">
        <proof prover="0"><result status="valid" time="1.60"/></proof>
        </goal>
        <goal name="VC rev_qft_apply_qft.3.0.0.0.0.1.1" expl="asserted formula" proved="true">
        <transf name="rewrite" proved="true" arg1="h1">
         <goal name="VC rev_qft_apply_qft.3.0.0.0.0.1.1.0" expl="asserted formula" proved="true">
         <transf name="rewrite" proved="true" arg1="(/.)_def">
          <goal name="VC rev_qft_apply_qft.3.0.0.0.0.1.1.0.0" expl="asserted formula" proved="true">
          <proof prover="0"><result status="valid" time="1.22"/></proof>
          </goal>
          <goal name="VC rev_qft_apply_qft.3.0.0.0.0.1.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.58" steps="350"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC rev_qft_apply_qft.3.0.0.1" expl="assertion" proved="true">
     <transf name="rewrite" proved="true" arg1="h">
      <goal name="VC rev_qft_apply_qft.3.0.0.1.0" expl="assertion" proved="true">
      <proof prover="0"><result status="valid" time="1.13"/></proof>
      </goal>
      <goal name="VC rev_qft_apply_qft.3.0.0.1.1" expl="rewrite premises" proved="true">
      <transf name="rewrite" proved="true" arg1="ang_mult_int_exp_rev">
       <goal name="VC rev_qft_apply_qft.3.0.0.1.1.0" expl="rewrite premises" proved="true">
       <transf name="rewrite" proved="true" arg1="ang_mult_int_in">
        <goal name="VC rev_qft_apply_qft.3.0.0.1.1.0.0" expl="rewrite premises" proved="true">
        <transf name="replace" proved="true" arg1="(power_ 2 n * (i - j))" arg2="( (i - j)*power_ 2 n )">
         <goal name="VC rev_qft_apply_qft.3.0.0.1.1.0.0.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="int_to_ang_cycles_zero_mult_">
          <goal name="VC rev_qft_apply_qft.3.0.0.1.1.0.0.0.0" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.56" steps="342"/></proof>
          </goal>
          <goal name="VC rev_qft_apply_qft.3.0.0.1.1.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.54" steps="342"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC rev_qft_apply_qft.3.0.0.1.1.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="3"><result status="valid" time="0.54" steps="342"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC rev_qft_apply_qft.3.0.0.1.1.0.1" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="0.58" steps="342"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC rev_qft_apply_qft.3.0.0.1.2" expl="rewrite premises" proved="true">
      <transf name="assert" proved="true" arg1="( (int_to_ang ( i  -  j ) n) &lt;&gt; ang_zero)">
       <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0" expl="asserted formula" proved="true">
       <transf name="replace" proved="true" arg1="(int_to_ang (i - j) n)" arg2="(int_to_ang ((mod i (power_ 2 n)) - j) n)">
        <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.0" expl="asserted formula" proved="true">
        <transf name="assert" proved="true" arg1="(not (mod (mod i (power_ 2 n) - j) (power_ 2 n))=0)">
         <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.0.0" expl="asserted formula" proved="true">
         <transf name="case" proved="true" arg1="(mod i (power_ 2 n) &lt; j)">
          <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.0.0.0" expl="asserted formula (true case)" proved="true">
          <transf name="assert" proved="true" arg1="(- power_ 2 n &lt; mod i (power_ 2 n) - j &lt;0)">
           <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.0.0.0.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="1.10"/></proof>
           </goal>
           <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.0.0.0.1" expl="asserted formula (true case)" proved="true">
           <proof prover="0"><result status="valid" time="1.29"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.0.0.1" expl="asserted formula (false case)" proved="true">
          <proof prover="0"><result status="valid" time="1.30"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.0.1" expl="asserted formula" proved="true">
         <proof prover="0"><result status="valid" time="1.15"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.1" expl="equality hypothesis" proved="true">
        <transf name="replace" proved="true" arg1="(i - j)" arg2="((mod i (power_ 2 n) - j) + (div i (power_ 2 n) * power_ 2 n))">
         <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.1.0" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="int_to_ang_cycles_gen">
          <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.1.0.0" expl="equality hypothesis" proved="true">
          <proof prover="3"><result status="valid" time="0.58" steps="342"/></proof>
          </goal>
          <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.61" steps="342"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC rev_qft_apply_qft.3.0.0.1.2.0.1.1" expl="equality hypothesis" proved="true">
         <proof prover="0"><result status="valid" time="1.07"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC rev_qft_apply_qft.3.0.0.1.2.1" expl="rewrite premises" proved="true">
       <proof prover="0"><result status="valid" time="1.12"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC rev_qft_apply_qft.3.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.56" steps="342"/></proof>
    </goal>
    <goal name="VC rev_qft_apply_qft.3.0.2" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(int_to_ang (i - j) n)" arg2="(int_to_ang ((mod i (power_ 2 n)) - j) n)">
     <goal name="VC rev_qft_apply_qft.3.0.2.0" expl="rewrite premises" proved="true">
     <transf name="assert" proved="true" arg1="(not (mod (mod i (power_ 2 n) - j) (power_ 2 n))=0)">
      <goal name="VC rev_qft_apply_qft.3.0.2.0.0" expl="asserted formula" proved="true">
      <transf name="case" proved="true" arg1="(mod i (power_ 2 n) &lt; j)">
       <goal name="VC rev_qft_apply_qft.3.0.2.0.0.0" expl="asserted formula (true case)" proved="true">
       <transf name="assert" proved="true" arg1="(- power_ 2 n &lt; mod i (power_ 2 n) - j &lt;0)">
        <goal name="VC rev_qft_apply_qft.3.0.2.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="3"><result status="valid" time="3.03" steps="346"/></proof>
        </goal>
        <goal name="VC rev_qft_apply_qft.3.0.2.0.0.0.1" expl="asserted formula (true case)" proved="true">
        <proof prover="0"><result status="valid" time="1.24"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC rev_qft_apply_qft.3.0.2.0.0.1" expl="asserted formula (false case)" proved="true">
       <proof prover="0"><result status="valid" time="1.23"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC rev_qft_apply_qft.3.0.2.0.1" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.13"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC rev_qft_apply_qft.3.0.2.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(i - j)" arg2="((mod i (power_ 2 n) - j) + (div i (power_ 2 n) * power_ 2 n))">
      <goal name="VC rev_qft_apply_qft.3.0.2.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_ang_cycles_gen">
       <goal name="VC rev_qft_apply_qft.3.0.2.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="3"><result status="valid" time="0.51" steps="342"/></proof>
       </goal>
       <goal name="VC rev_qft_apply_qft.3.0.2.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.48" steps="342"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC rev_qft_apply_qft.3.0.2.1.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.17"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rev_qft_apply_qft.3.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.51" steps="342"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rev_qft_apply_qft.4" expl="assertion" proved="true">
  <transf name="rewrite" proved="true" arg1="H4">
   <goal name="VC rev_qft_apply_qft.4.0" expl="assertion" proved="true">
   <transf name="rewrite" proved="true" arg1="geometric_series_c_one_init_one">
    <goal name="VC rev_qft_apply_qft.4.0.0" expl="assertion" proved="true">
    <proof prover="0"><result status="valid" time="1.19"/></proof>
    </goal>
    <goal name="VC rev_qft_apply_qft.4.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.54" steps="342"/></proof>
    </goal>
    <goal name="VC rev_qft_apply_qft.4.0.2" expl="rewrite premises" proved="true">
    <transf name="replace" proved="true" arg1="(int_to_ang (i - j) n)" arg2="(int_to_ang ((mod i (power_ 2 n)) - j) n)">
     <goal name="VC rev_qft_apply_qft.4.0.2.0" expl="rewrite premises" proved="true">
     <proof prover="0"><result status="valid" time="1.14"/></proof>
     </goal>
     <goal name="VC rev_qft_apply_qft.4.0.2.1" expl="equality hypothesis" proved="true">
     <transf name="replace" proved="true" arg1="(i - j)" arg2="((mod i (power_ 2 n) - j) + (div i (power_ 2 n) * power_ 2 n))">
      <goal name="VC rev_qft_apply_qft.4.0.2.1.0" expl="equality hypothesis" proved="true">
      <transf name="rewrite" proved="true" arg1="int_to_ang_cycles_gen">
       <goal name="VC rev_qft_apply_qft.4.0.2.1.0.0" expl="equality hypothesis" proved="true">
       <proof prover="3"><result status="valid" time="0.51" steps="342"/></proof>
       </goal>
       <goal name="VC rev_qft_apply_qft.4.0.2.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.52" steps="342"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC rev_qft_apply_qft.4.0.2.1.1" expl="equality hypothesis" proved="true">
      <proof prover="0"><result status="valid" time="1.31"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rev_qft_apply_qft.4.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.51" steps="342"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC rev_qft_apply_qft.5" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="set_equal_ket_l">
   <goal name="VC rev_qft_apply_qft.5.0" expl="apply premises" proved="true">
   <transf name="exists" proved="true" arg1="n">
    <goal name="VC rev_qft_apply_qft.5.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="VC rev_qft_apply_qft.5.0.0.0" proved="true">
     <transf name="apply" proved="true" arg1="path_sem_ket_l">
      <goal name="VC rev_qft_apply_qft.5.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.49"/></proof>
      </goal>
      <goal name="VC rev_qft_apply_qft.5.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="0"><result status="valid" time="1.28"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC rev_qft_apply_qft.5.0.0.1" proved="true">
     <proof prover="0"><result status="valid" time="1.24"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC rev_qft_apply_qft.5.1" expl="apply premises" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC rev_qft_apply_qft.5.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="get__ket_value">
     <goal name="VC rev_qft_apply_qft.5.1.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="indic_spec">
      <goal name="VC rev_qft_apply_qft.5.1.0.0.0" expl="apply premises" proved="true">
      <transf name="eliminate_if" proved="true" >
       <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="H">
         <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="H3">
          <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="5"><result status="valid" time="0.53"/></proof>
          </goal>
          <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="3"><result status="valid" time="0.53" steps="342"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="H4">
         <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="((ket_length
     (path_sem (qft_rev n)
      (pow_inv_sqrt_2 n
       *.. ket_sum_l (n_bvs n)
           (fun (y:bitvec) -&gt;
             int_qft_coeff i1 (bv_to_int y) n *.. bv_to_ket y)
           n))))" arg2="n" arg3="in" arg4="H1">
          <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="0"><result status="valid" time="1.14"/></proof>
          </goal>
          <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0.1" expl="equality hypothesis" proved="true">
          <transf name="assert" proved="true" arg1="(forall x . forall l. is_a_ket_l x l -&gt; ket_length x = l)">
           <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0.1.0" expl="asserted formula" proved="true">
           <proof prover="0"><result status="valid" time="1.18"/></proof>
           </goal>
           <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0.1.1" expl="equality hypothesis" proved="true">
           <transf name="apply" proved="true" arg1="h">
            <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0.1.1.0" expl="apply premises" proved="true">
            <transf name="apply" proved="true" arg1="path_sem_ket_l">
             <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0.1.1.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_ket_l">
              <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0.1.1.0.0.0" expl="apply premises" proved="true">
              <proof prover="5"><result status="valid" time="0.51"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.0.1.1.0.1" expl="apply premises" proved="true">
             <proof prover="0"><result status="valid" time="1.16"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC rev_qft_apply_qft.5.1.0.0.0.0.1.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.50" steps="342"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC rev_qft_apply_qft.5.1.0.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.50" steps="340"/></proof>
     </goal>
     <goal name="VC rev_qft_apply_qft.5.1.0.2" expl="rewrite premises" proved="true">
     <transf name="rewrite" proved="true" arg1="power_to_">
      <goal name="VC rev_qft_apply_qft.5.1.0.2.0" expl="rewrite premises" proved="true">
      <proof prover="2"><result status="valid" time="1.52"/></proof>
      </goal>
      <goal name="VC rev_qft_apply_qft.5.1.0.2.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.52" steps="340"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC rev_qft_apply_qft.5.1.0.3" expl="rewrite premises" proved="true">
     <transf name="replace" proved="true" arg1="(ket_length
     (path_sem (qft_rev n)
      (pow_inv_sqrt_2 n
       *.. ket_sum_l (n_bvs n)
           (fun (y:bitvec) -&gt;
             int_qft_coeff i1 (bv_to_int y) n *.. bv_to_ket y)
           n)))" arg2="n" arg3="in" arg4="H">
      <goal name="VC rev_qft_apply_qft.5.1.0.3.0" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.51" steps="340"/></proof>
      </goal>
      <goal name="VC rev_qft_apply_qft.5.1.0.3.1" expl="equality hypothesis" proved="true">
      <transf name="assert" proved="true" arg1="(forall x . forall l. is_a_ket_l x l -&gt; ket_length x = l)">
       <goal name="VC rev_qft_apply_qft.5.1.0.3.1.0" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="1.30"/></proof>
       </goal>
       <goal name="VC rev_qft_apply_qft.5.1.0.3.1.1" expl="equality hypothesis" proved="true">
       <transf name="apply" proved="true" arg1="h">
        <goal name="VC rev_qft_apply_qft.5.1.0.3.1.1.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="path_sem_ket_l">
         <goal name="VC rev_qft_apply_qft.5.1.0.3.1.1.0.0" expl="apply premises" proved="true">
         <transf name="apply" proved="true" arg1="scalar_ket_l">
          <goal name="VC rev_qft_apply_qft.5.1.0.3.1.1.0.0.0" expl="apply premises" proved="true">
          <proof prover="5"><result status="valid" time="0.53"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC rev_qft_apply_qft.5.1.0.3.1.1.0.1" expl="apply premises" proved="true">
         <proof prover="0"><result status="valid" time="1.33"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_qft" expl="VC for apply_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC apply_qft.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="352"/></proof>
  </goal>
  <goal name="VC apply_qft.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="336"/></proof>
  </goal>
  <goal name="VC apply_qft.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="340"/></proof>
  </goal>
  <goal name="VC apply_qft.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.58" steps="348"/></proof>
  </goal>
  <goal name="VC apply_qft.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.41"/></proof>
  </goal>
  <goal name="VC apply_qft.5" expl="postcondition" proved="true">
  <transf name="split_all_full" proved="true" >
   <goal name="VC apply_qft.5.0" expl="postcondition" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC apply_qft.5.0.0" expl="postcondition" proved="true">
    <transf name="rewrite" proved="true" arg1="result_def">
     <goal name="VC apply_qft.5.0.0.0" expl="postcondition" proved="true">
     <transf name="rewrite" proved="true" arg1="qft_def">
      <goal name="VC apply_qft.5.0.0.0.0" expl="postcondition" proved="true">
      <transf name="apply" proved="true" arg1="goal_comm">
       <goal name="VC apply_qft.5.0.0.0.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="path_sem_reverse">
        <goal name="VC apply_qft.5.0.0.0.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="scalar_ket_l">
         <goal name="VC apply_qft.5.0.0.0.0.0.0.0" expl="apply premises" proved="true">
         <transf name="replace" proved="true" arg1="(width (qft_rev n))" arg2="n">
          <goal name="VC apply_qft.5.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="1.90"/></proof>
          </goal>
          <goal name="VC apply_qft.5.0.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
          <proof prover="2"><result status="valid" time="1.63"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC apply_qft.5.0.0.0.0.0.1" expl="apply premises" proved="true">
        <transf name="replace" proved="true" arg1="(ket_sum_l (n_bvs n)
       (fun (y:bitvec) -&gt; int_qft_coeff i (bv_to_int y) n *.. bv_to_ket y) n)" arg2="(ket_sum_l (n_bvs n)
       (fun (y:bitvec) -&gt; int_qft_coeff (mod i (power_ 2 n)) (bv_to_int y) n *.. bv_to_ket y) n)">
         <goal name="VC apply_qft.5.0.0.0.0.0.1.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="rev_qft_apply_qft">
          <goal name="VC apply_qft.5.0.0.0.0.0.1.0.0" expl="apply premises" proved="true">
          <proof prover="2"><result status="valid" time="1.67"/></proof>
          </goal>
          <goal name="VC apply_qft.5.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.69" steps="328"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="VC apply_qft.5.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
         <transf name="rewrite" proved="true" arg1="int_qft_coeff_spec">
          <goal name="VC apply_qft.5.0.0.0.0.0.1.1.0" expl="equality hypothesis" proved="true">
          <transf name="apply" proved="true" arg1="ket_sum_eq">
           <goal name="VC apply_qft.5.0.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="0.72" steps="328"/></proof>
           </goal>
           <goal name="VC apply_qft.5.0.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
           <proof prover="3"><result status="valid" time="0.69" steps="328"/></proof>
           </goal>
           <goal name="VC apply_qft.5.0.0.0.0.0.1.1.0.2" expl="apply premises" proved="true">
           <transf name="compute_specified" proved="true" >
            <goal name="VC apply_qft.5.0.0.0.0.0.1.1.0.2.0" expl="apply premises" proved="true">
            <transf name="split_vc" proved="true" >
             <goal name="VC apply_qft.5.0.0.0.0.0.1.1.0.2.0.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="int_qft_coeff_spec">
              <goal name="VC apply_qft.5.0.0.0.0.0.1.1.0.2.0.0.0" expl="apply premises" proved="true">
              <proof prover="2"><result status="valid" time="1.88"/></proof>
              </goal>
              <goal name="VC apply_qft.5.0.0.0.0.0.1.1.0.2.0.0.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.75" steps="330"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
          <goal name="VC apply_qft.5.0.0.0.0.0.1.1.1" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.68" steps="328"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC apply_qft.5.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.70" steps="328"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_correct_bv" expl="VC for qft_correct_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC qft_correct_bv.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC qft_correct_bv.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="correct_path_sum_bv_spec">
    <goal name="VC qft_correct_bv.0.0.0" expl="VC for qft_correct_bv" proved="true">
    <transf name="apply" proved="true" arg1="set_correct_pps">
     <goal name="VC qft_correct_bv.0.0.0.0" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC qft_correct_bv.0.0.0.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
       <goal name="VC qft_correct_bv.0.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.67" steps="304"/></proof>
       </goal>
       <goal name="VC qft_correct_bv.0.0.0.0.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.66"/></proof>
       </goal>
       <goal name="VC qft_correct_bv.0.0.0.0.0.2" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.63" steps="304"/></proof>
       </goal>
       <goal name="VC qft_correct_bv.0.0.0.0.0.3" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.83"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="VC qft_correct_bv.0.0.0.1" expl="apply premises" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="VC qft_correct_bv.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="rewrite_pps_apply_basis">
       <goal name="VC qft_correct_bv.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="rewrite" proved="true" arg1="pps_apply_basis_def">
        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="build_pps_bv_spec2">
           <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="replace" proved="true" arg1="(path_sem_basis (qft n) x)" arg2="(apply_qft n (ket_to_int x))">
            <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <transf name="rewrite" proved="true" arg1="apply_qft_def">
             <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
             <transf name="apply" proved="true" arg1="scalar_eq_gen">
              <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="apply" proved="true" arg1="ket_sum_eq_gen">
               <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="1.83"/></proof>
               </goal>
               <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
               <proof prover="3"><result status="valid" time="0.68" steps="308"/></proof>
               </goal>
               <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.2" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="1.82"/></proof>
               </goal>
               <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3" expl="apply premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0" expl="apply premises" proved="true">
                <transf name="compute_specified" proved="true" >
                 <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0" expl="apply premises" proved="true">
                 <transf name="apply" proved="true" arg1="scalar_eq_gen">
                  <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0" expl="apply premises" proved="true">
                  <transf name="apply" proved="true" arg1="bv_to_ket_eq">
                   <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length">
                    <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0" expl="apply premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.93"/></proof>
                    </goal>
                    <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.77"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.0.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.79"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.75"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.1.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.76"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.0" expl="apply premises" proved="true">
                       <proof prover="3"><result status="valid" time="0.71" steps="314"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.0" expl="apply premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.74" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.71" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.2" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.70" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.0.2.1.3" expl="rewrite premises" proved="true">
                        <proof prover="2"><result status="valid" time="1.75"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.69"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.73"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.73"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.1.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.83"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.2.0" expl="apply premises" proved="true">
                       <proof prover="3"><result status="valid" time="0.63" steps="314"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.2.1" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.2.1.0" expl="apply premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.66" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.2.1.1" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.67" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.2.1.2" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.68" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.1.2.1.3" expl="rewrite premises" proved="true">
                        <proof prover="2"><result status="valid" time="1.75"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.56"/></proof>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1" expl="apply premises" proved="true">
                   <transf name="rewrite" proved="true" arg1="make_bv_length">
                    <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0" expl="apply premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0" expl="apply premises" proved="true">
                     <transf name="rewrite" proved="true" arg1="assert_make_bv_b">
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0" expl="apply premises" proved="true">
                      <transf name="rewrite" proved="true" arg1="build_pps_bv_spec1">
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
                       <transf name="compute_specified" proved="true" >
                       </transf>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
                       <proof prover="3"><result status="valid" time="0.69" steps="314"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
                       <proof prover="3"><result status="valid" time="0.62" steps="314"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.3" expl="rewrite premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.75"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.4" expl="rewrite premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.58"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.5" expl="rewrite premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.61"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.0.6" expl="rewrite premises" proved="true">
                       <proof prover="3"><result status="valid" time="0.70" steps="314"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.0" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.70"/></proof>
                         </goal>
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.0.1" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.73"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.0" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.69"/></proof>
                         </goal>
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.1.1" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.71"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.2" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.2.0" expl="apply premises" proved="true">
                         <proof prover="3"><result status="valid" time="0.65" steps="318"/></proof>
                         </goal>
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.2.1" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.2.1.0" expl="apply premises" proved="true">
                          <proof prover="3"><result status="valid" time="0.65" steps="318"/></proof>
                          </goal>
                          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.2.1.1" expl="rewrite premises" proved="true">
                          <proof prover="3"><result status="valid" time="0.66" steps="318"/></proof>
                          </goal>
                          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.2.1.2" expl="rewrite premises" proved="true">
                          <proof prover="3"><result status="valid" time="0.64" steps="318"/></proof>
                          </goal>
                          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.0.2.1.3" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="1.74"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                       <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.0" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.0.0" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.64"/></proof>
                         </goal>
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.0.1" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.68"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.1" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.1.0" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.69"/></proof>
                         </goal>
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.1.1" expl="apply premises" proved="true">
                         <proof prover="2"><result status="valid" time="1.73"/></proof>
                         </goal>
                        </transf>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.2" expl="apply premises" proved="true">
                        <transf name="split_vc" proved="true" >
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.2.0" expl="apply premises" proved="true">
                         <proof prover="3"><result status="valid" time="0.66" steps="318"/></proof>
                         </goal>
                         <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.2.1" expl="apply premises" proved="true">
                         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.2.1.0" expl="apply premises" proved="true">
                          <proof prover="3"><result status="valid" time="0.79" steps="318"/></proof>
                          </goal>
                          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.2.1.1" expl="rewrite premises" proved="true">
                          <proof prover="3"><result status="valid" time="0.78" steps="318"/></proof>
                          </goal>
                          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.2.1.2" expl="rewrite premises" proved="true">
                          <proof prover="3"><result status="valid" time="0.65" steps="318"/></proof>
                          </goal>
                          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.1.1.2.1.3" expl="rewrite premises" proved="true">
                          <proof prover="2"><result status="valid" time="1.77"/></proof>
                          </goal>
                         </transf>
                         </goal>
                        </transf>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.0.0.2" expl="rewrite premises" proved="true">
                      <proof prover="3"><result status="valid" time="0.63" steps="314"/></proof>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1" expl="rewrite premises" proved="true">
                    <transf name="split_vc" proved="true" >
                     <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant3">
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.0.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.71"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.0.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.74"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.1.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.69"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.1.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.71"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.2.0" expl="apply premises" proved="true">
                       <proof prover="3"><result status="valid" time="0.64" steps="314"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.2.1" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.2.1.0" expl="apply premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.64" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.2.1.1" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.67" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.2.1.2" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.64" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.0.2.1.3" expl="rewrite premises" proved="true">
                        <proof prover="2"><result status="valid" time="1.71"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                     <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1" expl="rewrite premises" proved="true">
                     <transf name="apply" proved="true" arg1="pps&#39;invariant2">
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.0" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.0.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.68"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.0.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.69"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.1" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.1.0" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.68"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.1.1" expl="apply premises" proved="true">
                       <proof prover="2"><result status="valid" time="1.72"/></proof>
                       </goal>
                      </transf>
                      </goal>
                      <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.2" expl="apply premises" proved="true">
                      <transf name="split_vc" proved="true" >
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.2.0" expl="apply premises" proved="true">
                       <proof prover="3"><result status="valid" time="0.60" steps="314"/></proof>
                       </goal>
                       <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.2.1" expl="apply premises" proved="true">
                       <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.2.1.0" expl="apply premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.62" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.2.1.1" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.67" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.2.1.2" expl="rewrite premises" proved="true">
                        <proof prover="3"><result status="valid" time="0.65" steps="314"/></proof>
                        </goal>
                        <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.1.1.2.1.3" expl="rewrite premises" proved="true">
                        <proof prover="2"><result status="valid" time="1.75"/></proof>
                        </goal>
                       </transf>
                       </goal>
                      </transf>
                      </goal>
                     </transf>
                     </goal>
                    </transf>
                    </goal>
                    <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.0.1.2" expl="rewrite premises" proved="true">
                    <proof prover="2"><result status="valid" time="1.54"/></proof>
                    </goal>
                   </transf>
                   </goal>
                  </transf>
                  </goal>
                  <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1" expl="apply premises" proved="true">
                  <transf name="rewrite" proved="true" arg1="build_pps_bv_spec">
                   <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.0" expl="apply premises" proved="true">
                   <transf name="compute_specified" proved="true" >
                    <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.0.0" expl="apply premises" proved="true">
                    <transf name="replace" proved="true" arg1="(bv_to_int (ket_to_bv x))" arg2="(ket_to_int x)">
                     <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.0.0.0" expl="apply premises" proved="true">
                     <proof prover="2"><result status="valid" time="1.57"/></proof>
                     </goal>
                     <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
                     <proof prover="2"><result status="valid" time="1.54"/></proof>
                     </goal>
                    </transf>
                    </goal>
                   </transf>
                   </goal>
                   <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.1" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.58"/></proof>
                   </goal>
                   <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.2" expl="rewrite premises" proved="true">
                   <proof prover="3"><result status="valid" time="0.64" steps="310"/></proof>
                   </goal>
                   <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.3" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.70"/></proof>
                   </goal>
                   <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.4" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.56"/></proof>
                   </goal>
                   <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.0.3.0.0.1.5" expl="rewrite premises" proved="true">
                   <proof prover="2"><result status="valid" time="1.73"/></proof>
                   </goal>
                  </transf>
                  </goal>
                 </transf>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.0.1" expl="apply premises" proved="true">
              <proof prover="3"><result status="valid" time="0.72" steps="308"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
             <proof prover="3"><result status="valid" time="0.75" steps="308"/></proof>
             </goal>
            </transf>
            </goal>
            <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
            <transf name="replace" proved="true" arg1="( path_sem_basis (qft n) x)" arg2="( path_sem (qft n) x)">
             <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.1.0" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="apply_qft_spec">
              <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.1.0.0" expl="equality hypothesis" proved="true">
              <proof prover="2"><result status="valid" time="1.69"/></proof>
              </goal>
              <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.65" steps="308"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.0.1.1" expl="equality hypothesis" proved="true">
             <proof prover="4"><result status="valid" time="2.69"/></proof>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
           <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.1" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.59"/></proof>
           </goal>
           <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.2" expl="rewrite premises" proved="true">
           <proof prover="3"><result status="valid" time="0.78" steps="308"/></proof>
           </goal>
           <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.0.3" expl="rewrite premises" proved="true">
           <proof prover="2"><result status="valid" time="1.92"/></proof>
           </goal>
          </transf>
          </goal>
          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.74"/></proof>
          </goal>
          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.2" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.67" steps="308"/></proof>
          </goal>
          <goal name="VC qft_correct_bv.0.0.0.1.0.0.0.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.88"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC qft_correct_bv.0.0.0.1.0.0.1" expl="rewrite premises" proved="true">
        <transf name="split_all_full" proved="true" >
         <goal name="VC qft_correct_bv.0.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
         <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
          <goal name="VC qft_correct_bv.0.0.0.1.0.0.1.0.0" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.69"/></proof>
          </goal>
          <goal name="VC qft_correct_bv.0.0.0.1.0.0.1.0.1" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.74"/></proof>
          </goal>
          <goal name="VC qft_correct_bv.0.0.0.1.0.0.1.0.2" expl="rewrite premises" proved="true">
          <proof prover="3"><result status="valid" time="0.65" steps="308"/></proof>
          </goal>
          <goal name="VC qft_correct_bv.0.0.0.1.0.0.1.0.3" expl="rewrite premises" proved="true">
          <proof prover="2"><result status="valid" time="1.94"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_correct_bv.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <transf name="split_all_full" proved="true" >
        <goal name="VC qft_correct_bv.0.0.0.1.0.1.0" expl="rewrite premises" proved="true">
        <transf name="rewrite" proved="true" arg1="build_pps_bv_spec3">
         <goal name="VC qft_correct_bv.0.0.0.1.0.1.0.0" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.71" steps="308"/></proof>
         </goal>
         <goal name="VC qft_correct_bv.0.0.0.1.0.1.0.1" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.70"/></proof>
         </goal>
         <goal name="VC qft_correct_bv.0.0.0.1.0.1.0.2" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="0.67" steps="308"/></proof>
         </goal>
         <goal name="VC qft_correct_bv.0.0.0.1.0.1.0.3" expl="rewrite premises" proved="true">
         <proof prover="2"><result status="valid" time="1.94"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="VC qft_correct_bv.0.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.68" steps="308"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC qft_correct_bv.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="5"><result status="valid" time="0.43"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_qft_pre" expl="VC for path_sem_qft_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_qft_pre.0" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC path_sem_qft_pre.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="qft_def">
    <goal name="VC path_sem_qft_pre.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_reverse">
     <goal name="VC path_sem_qft_pre.0.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (qft_rev n))" arg2="n">
      <goal name="VC path_sem_qft_pre.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.42"/></proof>
      </goal>
      <goal name="VC path_sem_qft_pre.0.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="5"><result status="valid" time="0.38"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC path_sem_qft_pre.0.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC path_sem_qft_pre.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="qft_rev_spec1">
       <goal name="VC path_sem_qft_pre.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="scalar_eq_gen">
        <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="apply" proved="true" arg1="ket_sum_eq">
         <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.74" steps="306"/></proof>
         </goal>
         <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.1" expl="apply premises" proved="true">
         <proof prover="3"><result status="valid" time="0.72" steps="306"/></proof>
         </goal>
         <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0" expl="apply premises" proved="true">
          <transf name="split_vc" proved="true" >
           <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0" expl="apply premises" proved="true">
           <transf name="apply" proved="true" arg1="scalar_eq_gen">
            <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.0" expl="apply premises" proved="true">
            <transf name="compute_specified" proved="true" >
            </transf>
            </goal>
            <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1" expl="apply premises" proved="true">
            <transf name="replace" proved="true" arg1="(qft_rev_coeff x (bv_inversion a) n)" arg2="(int_qft_rev_coeff (bv_to_int x) (bv_to_int (bv_inversion a)) n)">
             <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0" expl="apply premises" proved="true">
             <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_to_qft_coeff">
              <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.0" expl="apply premises" proved="true">
              <transf name="replace" proved="true" arg1="(int_bit_inversion (bv_to_int (bv_inversion a)) n)" arg2="(bv_to_int a)">
               <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.0.0" expl="apply premises" proved="true">
               <proof prover="2"><result status="valid" time="1.85"/></proof>
               </goal>
               <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="int_bit_inversion_def">
                <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.0.1.0" expl="equality hypothesis" proved="true">
                <proof prover="2"><result status="valid" time="1.81"/></proof>
                </goal>
                <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.0.1.1" expl="rewrite premises" proved="true">
                <proof prover="3"><result status="valid" time="0.91" steps="308"/></proof>
                </goal>
                <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.0.1.2" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="1.93"/></proof>
                </goal>
               </transf>
               </goal>
              </transf>
              </goal>
              <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.81" steps="308"/></proof>
              </goal>
              <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.2" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="1.67"/></proof>
              </goal>
              <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.0.3" expl="rewrite premises" proved="true">
              <proof prover="2"><result status="valid" time="1.63"/></proof>
              </goal>
             </transf>
             </goal>
             <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.1" expl="equality hypothesis" proved="true">
             <transf name="rewrite" proved="true" arg1="int_qft_rev_coeff_spec">
              <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.1.0" expl="equality hypothesis" proved="true">
              <transf name="rewrite" proved="true" arg1="mod_inf">
               <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.1.0.0" expl="equality hypothesis" proved="true">
               <transf name="rewrite" proved="true" arg1="mod_inf">
                <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.1.0.0.0" expl="equality hypothesis" proved="true">
                <proof prover="2"><result status="valid" time="1.61"/></proof>
                </goal>
                <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.1.0.0.1" expl="rewrite premises" proved="true">
                <proof prover="2"><result status="valid" time="1.62"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.1.0.1" expl="rewrite premises" proved="true">
               <proof prover="2"><result status="valid" time="1.72"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.0.2.0.0.1.1.1" expl="rewrite premises" proved="true">
              <proof prover="3"><result status="valid" time="0.64" steps="308"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="VC path_sem_qft_pre.0.0.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.65" steps="306"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC path_sem_qft_pre.0.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.74" steps="306"/></proof>
       </goal>
       <goal name="VC path_sem_qft_pre.0.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.75" steps="306"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC path_sem_qft_pre.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.70" steps="306"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_qft" expl="VC for path_sem_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_qft.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_qft_pre">
   <goal name="VC path_sem_qft.0.0" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="0.56" steps="338"/></proof>
   </goal>
   <goal name="VC path_sem_qft.0.1" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="0.56" steps="338"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC get_ket_apply_qft" expl="VC for get_ket_apply_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC get_ket_apply_qft.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="apply_qft_def">
   <goal name="VC get_ket_apply_qft.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="scalar_ket_value">
    <goal name="VC get_ket_apply_qft.0.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="mult_eq_t">
     <goal name="VC get_ket_apply_qft.0.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.55" steps="340"/></proof>
     </goal>
     <goal name="VC get_ket_apply_qft.0.0.0.1" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="get_ket_sum_l_value">
      <goal name="VC get_ket_apply_qft.0.0.0.1.0" expl="apply premises" proved="true">
      <transf name="compute_specified" proved="true" >
       <goal name="VC get_ket_apply_qft.0.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="instantiate" proved="true" arg1="sum_null_but_maybe_one_elt" arg2="(fun (e1:bitvec) -&gt;
    get_ket (int_qft_coeff i (bv_to_int e1) n *.. bv_to_ket e1) j),(n_bvs n),(int_to_bv j n)">
        <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0" expl="apply premises" proved="true">
        <transf name="rewrite" proved="true" arg1="Hinst">
         <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.0" expl="apply premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.0.0" expl="apply premises" proved="true">
          <transf name="rewrite" proved="true" arg1="get_ket_scalar">
           <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.0.0.0" expl="apply premises" proved="true">
           <transf name="rewrite" proved="true" arg1="mult_one_t">
            <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
            <proof prover="0"><result status="valid" time="1.19"/></proof>
            </goal>
            <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.0.0.0.1" expl="rewrite premises" proved="true">
            <proof prover="0"><result status="valid" time="1.20"/></proof>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
         <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.1" expl="rewrite premises" proved="true">
         <proof prover="3"><result status="valid" time="3.36" steps="342"/></proof>
         </goal>
         <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2" expl="rewrite premises" proved="true">
         <transf name="compute_specified" proved="true" >
          <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0" expl="rewrite premises" proved="true">
          <transf name="rewrite" proved="true" arg1="get_ket_scalar">
           <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0" expl="rewrite premises" proved="true">
           <transf name="split_vc" proved="true" >
            <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0" expl="rewrite premises" proved="true">
            <transf name="apply" proved="true" arg1="mult_zero_t">
             <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0" expl="apply premises" proved="true">
             <transf name="replace" proved="true" arg1="(bv_to_ket k)" arg2="(ket n (bv_to_int k))">
              <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0" expl="apply premises" proved="true">
              <transf name="rewrite" proved="true" arg1="get__ket_value">
               <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.0" expl="apply premises" proved="true">
               <transf name="rewrite" proved="true" arg1="indic_spec">
                <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
                <proof prover="3"><result status="valid" time="3.32" steps="347"/></proof>
                </goal>
               </transf>
               </goal>
               <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.1" expl="rewrite premises" proved="true">
               <proof prover="3"><result status="valid" time="0.53" steps="344"/></proof>
               </goal>
               <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.2" expl="rewrite premises" proved="true">
               <transf name="split_vc" proved="true" >
                <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.2.0" expl="rewrite premises" proved="true">
                <proof prover="3"><result status="valid" time="3.01" steps="347"/></proof>
                </goal>
                <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.2.1" expl="rewrite premises" proved="true">
                <transf name="rewrite" proved="true" arg1="power_to_">
                 <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.2.1.0" expl="rewrite premises" proved="true">
                 <transf name="replace" proved="true" arg1="n" arg2="(length k)">
                  <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.2.1.0.0" expl="rewrite premises" proved="true">
                  <proof prover="2"><result status="valid" time="1.53"/></proof>
                  </goal>
                  <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.2.1.0.1" expl="equality hypothesis" proved="true">
                  <proof prover="3"><result status="valid" time="2.95" steps="347"/></proof>
                  </goal>
                 </transf>
                 </goal>
                 <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.2.1.1" expl="rewrite premises" proved="true">
                 <proof prover="3"><result status="valid" time="0.51" steps="344"/></proof>
                 </goal>
                </transf>
                </goal>
               </transf>
               </goal>
               <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.0.3" expl="rewrite premises" proved="true">
               <proof prover="0"><result status="valid" time="1.05"/></proof>
               </goal>
              </transf>
              </goal>
              <goal name="VC get_ket_apply_qft.0.0.0.1.0.0.0.2.0.0.0.0.1" expl="equality hypothesis" proved="true">
              <proof prover="3"><result status="valid" time="3.14" steps="347"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC get_ket_apply_qft.0.0.0.1.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.69" steps="340"/></proof>
      </goal>
      <goal name="VC get_ket_apply_qft.0.0.0.1.2" expl="rewrite premises" proved="true">
      <proof prover="0"><result status="valid" time="1.09"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC get_ket_apply_qft.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.56" steps="340"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_qft_equiv" expl="VC for apply_qft_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC apply_qft_equiv.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_rev_qft_int" expl="VC for qft_rev_qft_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC qft_rev_qft_int.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="apply_qft_def">
   <goal name="VC qft_rev_qft_int.0.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="rev_qft_apply_qft">
    <goal name="VC qft_rev_qft_int.0.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.52" steps="336"/></proof>
    </goal>
    <goal name="VC qft_rev_qft_int.0.0.1" expl="rewrite premises" proved="true">
    <proof prover="3"><result status="valid" time="0.55" steps="336"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC qft_rev_qft_int.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.66" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC from_qft_basis" expl="VC for from_qft_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC from_qft_basis.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="qft_rev_qft_int">
   <goal name="VC from_qft_basis.0.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="3.07" steps="342"/></proof>
   </goal>
   <goal name="VC from_qft_basis.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.54" steps="340"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC qft_apply_basis" expl="VC for qft_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC qft_apply_basis.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="3.03" steps="338"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sem_qft_rev_qft_int" expl="VC for sem_qft_rev_qft_int" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sem_qft_rev_qft_int.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.30"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sem_from_qft_basis" expl="VC for sem_from_qft_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sem_from_qft_basis.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.34"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sem_qft_apply_basis" expl="VC for sem_qft_apply_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sem_qft_apply_basis.0" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC sem_qft_apply_basis.0.0" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="3.03" steps="338"/></proof>
   </goal>
   <goal name="VC sem_qft_apply_basis.0.1" expl="apply premises" proved="true">
   <proof prover="3"><result status="valid" time="2.98" steps="338"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_qft_eq" expl="VC for apply_qft_eq" proved="true">
 <proof prover="3"><result status="valid" time="3.28" steps="342"/></proof>
 </goal>
 <goal name="VC apply_qft_as_mod" expl="VC for apply_qft_as_mod" proved="true">
 <proof prover="3"><result status="valid" time="3.26" steps="338"/></proof>
 </goal>
 <goal name="VC int_qft_coeff_add" expl="VC for int_qft_coeff_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC int_qft_coeff_add.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.56" steps="336"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.55" steps="338"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.56" steps="340"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.34" steps="344"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.29" steps="344"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.70" steps="342"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.70" steps="342"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="3.23" steps="344"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="344"/></proof>
  </goal>
  <goal name="VC int_qft_coeff_add.9" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(forall a b. a*. b = c_one -&gt; a = c_one/.b)">
   <goal name="VC int_qft_coeff_add.9.0" expl="asserted formula" proved="true">
   <proof prover="3"><result status="valid" time="3.70" steps="348"/></proof>
   </goal>
   <goal name="VC int_qft_coeff_add.9.1" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="2.66"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_qft_unit" expl="VC for path_sem_qft_unit" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_qft_unit.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="qft_def">
   <goal name="VC path_sem_qft_unit.0.0" expl="postcondition" proved="true">
   <transf name="apply" proved="true" arg1="path_sem_reverse">
    <goal name="VC path_sem_qft_unit.0.0.0" expl="apply premises" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="VC path_sem_qft_unit.0.0.0.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="qft_rev_spec2">
      <goal name="VC path_sem_qft_unit.0.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="3.22" steps="342"/></proof>
      </goal>
      <goal name="VC path_sem_qft_unit.0.0.0.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.70" steps="340"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC path_sem_qft_unit.0.0.1" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="apply_qft_def">
     <goal name="VC path_sem_qft_unit.0.0.1.0" expl="apply premises" proved="true">
     <transf name="rewrite" proved="true" arg1="rev_qft_apply_qft">
      <goal name="VC path_sem_qft_unit.0.0.1.0.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="mod_inf">
       <goal name="VC path_sem_qft_unit.0.0.1.0.0.0" expl="apply premises" proved="true">
       <proof prover="0"><result status="valid" time="1.24"/></proof>
       </goal>
       <goal name="VC path_sem_qft_unit.0.0.1.0.0.1" expl="rewrite premises" proved="true">
       <transf name="replace" proved="true" arg1="(power_ 2 n)" arg2="(power 2 (ket_length x))">
        <goal name="VC path_sem_qft_unit.0.0.1.0.0.1.0" expl="rewrite premises" proved="true">
        <proof prover="3"><result status="valid" time="3.14" steps="341"/></proof>
        </goal>
        <goal name="VC path_sem_qft_unit.0.0.1.0.0.1.1" expl="equality hypothesis" proved="true">
        <proof prover="2"><result status="valid" time="1.48"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
      <goal name="VC path_sem_qft_unit.0.0.1.0.1" expl="rewrite premises" proved="true">
      <proof prover="3"><result status="valid" time="0.53" steps="340"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC path_sem_qft_unit.0.0.1.1" expl="rewrite premises" proved="true">
     <proof prover="3"><result status="valid" time="0.49" steps="340"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC path_sem_qft_unit.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.49" steps="340"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC path_sem_qft_bv" expl="VC for path_sem_qft_bv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC path_sem_qft_bv.0" expl="postcondition" proved="true">
  <transf name="rewrite" proved="true" arg1="path_sem_qft_unit">
   <goal name="VC path_sem_qft_bv.0.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="1.20"/></proof>
   </goal>
   <goal name="VC path_sem_qft_bv.0.1" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="0.64" steps="338"/></proof>
   </goal>
   <goal name="VC path_sem_qft_bv.0.2" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="3.50" steps="340"/></proof>
   </goal>
   <goal name="VC path_sem_qft_bv.0.3" expl="rewrite premises" proved="true">
   <proof prover="3"><result status="valid" time="3.02" steps="340"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC to_qft_basis" expl="VC for to_qft_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC to_qft_basis.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="1.21"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC place_qft_zero" expl="VC for place_qft_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC place_qft_zero.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="338"/></proof>
  </goal>
  <goal name="VC place_qft_zero.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.63" steps="344"/></proof>
  </goal>
  <goal name="VC place_qft_zero.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="344"/></proof>
  </goal>
  <goal name="VC place_qft_zero.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.58" steps="344"/></proof>
  </goal>
  <goal name="VC place_qft_zero.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="344"/></proof>
  </goal>
  <goal name="VC place_qft_zero.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.67" steps="352"/></proof>
  </goal>
  <goal name="VC place_qft_zero.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="352"/></proof>
  </goal>
  <goal name="VC place_qft_zero.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="353"/></proof>
  </goal>
  <goal name="VC place_qft_zero.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC place_qft_zero.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC place_qft_zero.8.0.0" expl="postcondition" proved="true">
    <transf name="apply" proved="true" arg1="path_sem_to_sem">
     <goal name="VC place_qft_zero.8.0.0.0" expl="apply premises" proved="true">
     <transf name="replace" proved="true" arg1="(width (place (qft n) 0 (n + k)))" arg2="(n+k)">
      <goal name="VC place_qft_zero.8.0.0.0.0" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="kronecker_ket_l">
       <goal name="VC place_qft_zero.8.0.0.0.0.0" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.91" steps="330"/></proof>
       </goal>
       <goal name="VC place_qft_zero.8.0.0.0.0.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.68" steps="330"/></proof>
       </goal>
       <goal name="VC place_qft_zero.8.0.0.0.0.2" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="1.46"/></proof>
       </goal>
       <goal name="VC place_qft_zero.8.0.0.0.0.3" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.84" steps="330"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC place_qft_zero.8.0.0.0.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="0.68" steps="330"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="VC place_qft_zero.8.0.0.1" expl="apply premises" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="VC place_qft_zero.8.0.0.1.0" expl="apply premises" proved="true">
      <transf name="rewrite" proved="true" arg1="H17">
       <goal name="VC place_qft_zero.8.0.0.1.0.0" expl="apply premises" proved="true">
       <transf name="apply" proved="true" arg1="kronecker_eq">
        <goal name="VC place_qft_zero.8.0.0.1.0.0.0" expl="apply premises" proved="true">
        <proof prover="2"><result status="valid" time="1.61"/></proof>
        </goal>
        <goal name="VC place_qft_zero.8.0.0.1.0.0.1" expl="apply premises" proved="true">
        <proof prover="3"><result status="valid" time="0.67" steps="330"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="VC place_qft_zero.8.0.0.1.0.1" expl="rewrite premises" proved="true">
       <proof prover="2"><result status="valid" time="1.66"/></proof>
       </goal>
       <goal name="VC place_qft_zero.8.0.0.1.0.2" expl="rewrite premises" proved="true">
       <proof prover="3"><result status="valid" time="0.67" steps="330"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC place_qft_zero.9" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="354"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC place_rev_qft_zero" expl="VC for place_rev_qft_zero" proved="true">
 <proof prover="0"><result status="valid" time="1.29"/></proof>
 </goal>
 <goal name="VC place_qft" expl="VC for place_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC place_qft.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="340"/></proof>
  </goal>
  <goal name="VC place_qft.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.58" steps="346"/></proof>
  </goal>
  <goal name="VC place_qft.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.56" steps="347"/></proof>
  </goal>
  <goal name="VC place_qft.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="354"/></proof>
  </goal>
  <goal name="VC place_qft.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="354"/></proof>
  </goal>
  <goal name="VC place_qft.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="355"/></proof>
  </goal>
  <goal name="VC place_qft.6" expl="postcondition" proved="true">
  <transf name="apply" proved="true" arg1="path_sem_to_sem">
   <goal name="VC place_qft.6.0" expl="apply premises" proved="true">
   <transf name="replace" proved="true" arg1="(width result)" arg2="(k+ (n+ (size_reg -k-n)))">
    <goal name="VC place_qft.6.0.0" expl="apply premises" proved="true">
    <transf name="apply" proved="true" arg1="kronecker_ket_l">
     <goal name="VC place_qft.6.0.0.0" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.55" steps="364"/></proof>
     </goal>
     <goal name="VC place_qft.6.0.0.1" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.76" steps="364"/></proof>
     </goal>
     <goal name="VC place_qft.6.0.0.2" expl="apply premises" proved="true">
     <proof prover="3"><result status="valid" time="0.54" steps="364"/></proof>
     </goal>
     <goal name="VC place_qft.6.0.0.3" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="kronecker_ket_l">
      <goal name="VC place_qft.6.0.0.3.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.57" steps="364"/></proof>
      </goal>
      <goal name="VC place_qft.6.0.0.3.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.55" steps="364"/></proof>
      </goal>
      <goal name="VC place_qft.6.0.0.3.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="3.70" steps="373"/></proof>
      </goal>
      <goal name="VC place_qft.6.0.0.3.3" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.58" steps="364"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC place_qft.6.0.1" expl="equality hypothesis" proved="true">
    <proof prover="3"><result status="valid" time="0.69" steps="364"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC place_qft.6.1" expl="apply premises" proved="true">
   <transf name="eliminate_definition" proved="true" >
    <goal name="VC place_qft.6.1.0" expl="apply premises" proved="true">
    <transf name="rewrite" proved="true" arg1="result_def">
     <goal name="VC place_qft.6.1.0.0" expl="apply premises" proved="true">
     <transf name="apply" proved="true" arg1="place_kron">
      <goal name="VC place_qft.6.1.0.0.0" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.76" steps="334"/></proof>
      </goal>
      <goal name="VC place_qft.6.1.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.87" steps="334"/></proof>
      </goal>
      <goal name="VC place_qft.6.1.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.72" steps="334"/></proof>
      </goal>
      <goal name="VC place_qft.6.1.0.0.3" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.42"/></proof>
      </goal>
      <goal name="VC place_qft.6.1.0.0.4" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.71" steps="334"/></proof>
      </goal>
      <goal name="VC place_qft.6.1.0.0.5" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.68"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC place_qft.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.69" steps="356"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC place_rev_qft" expl="VC for place_rev_qft" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC place_rev_qft.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.66" steps="340"/></proof>
  </goal>
  <goal name="VC place_rev_qft.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.83" steps="340"/></proof>
  </goal>
  <goal name="VC place_rev_qft.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.63" steps="340"/></proof>
  </goal>
  <goal name="VC place_rev_qft.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.66" steps="346"/></proof>
  </goal>
  <goal name="VC place_rev_qft.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.65" steps="352"/></proof>
  </goal>
  <goal name="VC place_rev_qft.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.73" steps="353"/></proof>
  </goal>
  <goal name="VC place_rev_qft.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="354"/></proof>
  </goal>
  <goal name="VC place_rev_qft.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="3.43" steps="364"/></proof>
  </goal>
  <goal name="VC place_rev_qft.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.61" steps="354"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_function_in_qft_basis" expl="VC for apply_function_in_qft_basis" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC apply_function_in_qft_basis.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.56" steps="342"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.56" steps="342"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="342"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.69" steps="348"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="358"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.49"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.51" steps="361"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.52" steps="362"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.8" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC apply_function_in_qft_basis.8.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC apply_function_in_qft_basis.8.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="sem_comp" arg2="(place_qft n k size_reg),c,(kronecker y (kronecker (ket n i) z)),(kronecker y (kronecker (apply_qft n i) z)),(kronecker y (kronecker (apply_qft n (f @ i)) z))
">
     <goal name="VC apply_function_in_qft_basis.8.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Hinst">
      <goal name="VC apply_function_in_qft_basis.8.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.49"/></proof>
      </goal>
      <goal name="VC apply_function_in_qft_basis.8.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.72" steps="342"/></proof>
      </goal>
      <goal name="VC apply_function_in_qft_basis.8.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.83" steps="342"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC apply_function_in_qft_basis.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.64" steps="342"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.83" steps="342"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.53" steps="342"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="354"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.13" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.82"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.70"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="368"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis.16" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC apply_function_in_qft_basis.16.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC apply_function_in_qft_basis.16.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="sem_comp" arg2="(sequence (place_qft n k size_reg) c),(place_rev_qft n k size_reg),(kronecker y (kronecker (ket n i) z)),(kronecker y (kronecker (apply_qft n (f i)) z)),(kronecker y (kronecker (ket n (f @ i)) z))
">
     <goal name="VC apply_function_in_qft_basis.16.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Hinst">
      <goal name="VC apply_function_in_qft_basis.16.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.91"/></proof>
      </goal>
      <goal name="VC apply_function_in_qft_basis.16.0.0.0.1" expl="apply premises" proved="true">
      <transf name="apply" proved="true" arg1="H20">
       <goal name="VC apply_function_in_qft_basis.16.0.0.0.1.0" expl="apply premises" proved="true">
       <proof prover="2"><result status="valid" time="1.72"/></proof>
       </goal>
       <goal name="VC apply_function_in_qft_basis.16.0.0.0.1.1" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.68" steps="349"/></proof>
       </goal>
       <goal name="VC apply_function_in_qft_basis.16.0.0.0.1.2" expl="apply premises" proved="true">
       <proof prover="3"><result status="valid" time="0.78" steps="349"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="VC apply_function_in_qft_basis.16.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.89" steps="349"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC apply_function_in_qft_basis.17" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="369"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_function_in_qft_basis_zero" expl="VC for apply_function_in_qft_basis_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC apply_function_in_qft_basis_zero.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.69" steps="340"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.69" steps="340"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.69" steps="346"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.69" steps="356"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.89"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.71" steps="359"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.67" steps="360"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="3.66" steps="370"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.68" steps="340"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.63" steps="340"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.60" steps="352"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.69"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.66"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.13" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.61" steps="366"/></proof>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.14" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC apply_function_in_qft_basis_zero.14.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC apply_function_in_qft_basis_zero.14.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="sem_comp" arg2="(sequence (place_qft_zero n (size_reg - n)) c),(place_rev_qft_zero n (size_reg - n)),(kronecker (ket n i) z),(kronecker (apply_qft n (f @ i)) z)">
     <goal name="VC apply_function_in_qft_basis_zero.14.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Hinst">
      <goal name="VC apply_function_in_qft_basis_zero.14.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.88"/></proof>
      </goal>
      <goal name="VC apply_function_in_qft_basis_zero.14.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="2.01"/></proof>
      </goal>
      <goal name="VC apply_function_in_qft_basis_zero.14.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.81" steps="345"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC apply_function_in_qft_basis_zero.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="367"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_from_qft_zero" expl="VC for apply_from_qft_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC apply_from_qft_zero.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.63" steps="340"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="340"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.65" steps="346"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.67" steps="356"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.60"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="359"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.6" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="3.54" steps="370"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.75" steps="340"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.64" steps="340"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.52" steps="352"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.59"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.56"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.12" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.62" steps="366"/></proof>
  </goal>
  <goal name="VC apply_from_qft_zero.13" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC apply_from_qft_zero.13.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC apply_from_qft_zero.13.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="sem_comp" arg2="o,(place_qft_zero n k),(kronecker (apply_qft n i) y),(kronecker (ket n i) z),(kronecker (apply_qft n i) z)
">
     <goal name="VC apply_from_qft_zero.13.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Hinst">
      <goal name="VC apply_from_qft_zero.13.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.50"/></proof>
      </goal>
      <goal name="VC apply_from_qft_zero.13.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.39"/></proof>
      </goal>
      <goal name="VC apply_from_qft_zero.13.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.78" steps="347"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC apply_in_qft_zero" expl="VC for apply_in_qft_zero" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC apply_in_qft_zero.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.58" steps="340"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="340"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.59" steps="346"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="356"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.50"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.5" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.54" steps="359"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.6" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC apply_in_qft_zero.6.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC apply_in_qft_zero.6.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="sem_comp" arg2="(place_qft_zero n k),c,(kronecker (ket n i) y),(kronecker (apply_qft n i) y),(kronecker (apply_qft n i) z)
">
     <goal name="VC apply_in_qft_zero.6.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Hinst">
      <goal name="VC apply_in_qft_zero.6.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.52"/></proof>
      </goal>
      <goal name="VC apply_in_qft_zero.6.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.77" steps="338"/></proof>
      </goal>
      <goal name="VC apply_in_qft_zero.6.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.77" steps="338"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC apply_in_qft_zero.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.61" steps="340"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="340"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.9" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57" steps="352"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.61"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.11" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="1.39"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.12" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.69" steps="366"/></proof>
  </goal>
  <goal name="VC apply_in_qft_zero.13" expl="postcondition" proved="true">
  <transf name="eliminate_definition" proved="true" >
   <goal name="VC apply_in_qft_zero.13.0" expl="postcondition" proved="true">
   <transf name="rewrite" proved="true" arg1="result_def">
    <goal name="VC apply_in_qft_zero.13.0.0" expl="postcondition" proved="true">
    <transf name="instantiate" proved="true" arg1="sem_comp" arg2="o,(place_rev_qft_zero n k),(kronecker (ket n i) y),(kronecker (apply_qft n i) z),(kronecker (ket n i) z)
">
     <goal name="VC apply_in_qft_zero.13.0.0.0" expl="postcondition" proved="true">
     <transf name="apply" proved="true" arg1="Hinst">
      <goal name="VC apply_in_qft_zero.13.0.0.0.0" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.40"/></proof>
      </goal>
      <goal name="VC apply_in_qft_zero.13.0.0.0.1" expl="apply premises" proved="true">
      <proof prover="2"><result status="valid" time="1.63"/></proof>
      </goal>
      <goal name="VC apply_in_qft_zero.13.0.0.0.2" expl="apply premises" proved="true">
      <proof prover="3"><result status="valid" time="0.72" steps="347"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
